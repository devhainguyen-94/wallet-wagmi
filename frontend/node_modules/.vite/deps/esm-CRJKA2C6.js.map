{
  "version": 3,
  "sources": ["../../@safe-global/safe-apps-sdk/src/version.ts", "../../@safe-global/safe-apps-sdk/src/communication/utils.ts", "../../@safe-global/safe-apps-sdk/src/communication/messageFormatter.ts", "../../@safe-global/safe-apps-sdk/src/communication/methods.ts", "../../@safe-global/safe-apps-sdk/src/communication/index.ts", "../../@safe-global/safe-apps-sdk/src/types/sdk.ts", "../../@safe-global/safe-apps-sdk/src/types/gateway.ts", "../../@safe-global/safe-apps-sdk/src/txs/index.ts", "../../@safe-global/safe-apps-sdk/src/eth/constants.ts", "../../@safe-global/safe-apps-sdk/src/eth/index.ts", "../../@safe-global/safe-apps-sdk/src/safe/signatures.ts", "../../@safe-global/safe-apps-sdk/src/types/permissions.ts", "../../@safe-global/safe-apps-sdk/src/wallet/index.ts", "../../@safe-global/safe-apps-sdk/src/decorators/requirePermissions.ts", "../../@safe-global/safe-apps-sdk/src/safe/index.ts", "../../@safe-global/safe-apps-sdk/src/sdk.ts", "../../@safe-global/safe-apps-sdk/src/index.ts"],
  "sourcesContent": ["export const getSDKVersion = () => '9.1.0';\r\n", "// i.e. 0-255 -> '00'-'ff'\r\nconst dec2hex = (dec: number): string => dec.toString(16).padStart(2, '0');\r\n\r\nconst generateId = (len: number): string => {\r\n  const arr = new Uint8Array((len || 40) / 2);\r\n  window.crypto.getRandomValues(arr);\r\n  return Array.from(arr, dec2hex).join('');\r\n};\r\n\r\nconst generateRequestId = (): string => {\r\n  if (typeof window !== 'undefined') {\r\n    return generateId(10);\r\n  }\r\n\r\n  return new Date().getTime().toString(36);\r\n};\r\n\r\nexport { generateRequestId };\r\n", "import { ErrorResponse, SDKRequestData, RequestId, SuccessResponse, MethodToResponse } from '../types/index.js';\r\nimport { getSDKVersion } from '../version.js';\r\nimport { Methods } from './methods.js';\r\nimport { generateRequestId } from './utils.js';\r\n\r\nclass MessageFormatter {\r\n  static makeRequest = <M extends Methods = Methods, P = unknown>(method: M, params: P): SDKRequestData<M, P> => {\r\n    const id = generateRequestId();\r\n\r\n    return {\r\n      id,\r\n      method,\r\n      params,\r\n      env: {\r\n        sdkVersion: getSDKVersion(),\r\n      },\r\n    };\r\n  };\r\n\r\n  static makeResponse = (id: RequestId, data: MethodToResponse[Methods], version: string): SuccessResponse => ({\r\n    id,\r\n    success: true,\r\n    version,\r\n    data,\r\n  });\r\n\r\n  static makeErrorResponse = (id: RequestId, error: string, version: string): ErrorResponse => ({\r\n    id,\r\n    success: false,\r\n    error,\r\n    version,\r\n  });\r\n}\r\n\r\nexport { MessageFormatter };\r\n", "export enum Methods {\r\n  sendTransactions = 'sendTransactions',\r\n  rpcCall = 'rpcCall',\r\n  getChainInfo = 'getChainInfo',\r\n  getSafeInfo = 'getSafeInfo',\r\n  getTxBySafeTxHash = 'getTxBySafeTxHash',\r\n  getSafeBalances = 'getSafeBalances',\r\n  signMessage = 'signMessage',\r\n  signTypedMessage = 'signTypedMessage',\r\n  getEnvironmentInfo = 'getEnvironmentInfo',\r\n  getOffChainSignature = 'getOffChainSignature',\r\n  requestAddressBook = 'requestAddressBook',\r\n  wallet_getPermissions = 'wallet_getPermissions',\r\n  wallet_requestPermissions = 'wallet_requestPermissions',\r\n}\r\n\r\nexport enum RestrictedMethods {\r\n  requestAddressBook = 'requestAddressBook',\r\n}\r\n", "import { MessageFormatter } from './messageFormatter.js';\r\nimport { Methods } from './methods.js';\r\nimport { InterfaceMessageEvent, Communicator, Response, SuccessResponse } from '../types/index.js';\r\n\r\n// eslint-disable-next-line\r\ntype Callback = (response: any) => void;\r\n\r\nclass PostMessageCommunicator implements Communicator {\r\n  private readonly allowedOrigins: RegExp[] | null = null;\r\n  private callbacks = new Map<string, Callback>();\r\n  private debugMode = false;\r\n  private isServer = typeof window === 'undefined';\r\n\r\n  constructor(allowedOrigins: RegExp[] | null = null, debugMode = false) {\r\n    this.allowedOrigins = allowedOrigins;\r\n    this.debugMode = debugMode;\r\n\r\n    if (!this.isServer) {\r\n      window.addEventListener('message', this.onParentMessage);\r\n    }\r\n  }\r\n\r\n  private isValidMessage = ({ origin, data, source }: InterfaceMessageEvent): boolean => {\r\n    const emptyOrMalformed = !data;\r\n    const sentFromParentEl = !this.isServer && source === window.parent;\r\n    const majorVersionNumber = typeof data.version !== 'undefined' && parseInt(data.version.split('.')[0]);\r\n    const allowedSDKVersion = typeof majorVersionNumber === 'number' && majorVersionNumber >= 1;\r\n    let validOrigin = true;\r\n    if (Array.isArray(this.allowedOrigins)) {\r\n      validOrigin = this.allowedOrigins.find((regExp) => regExp.test(origin)) !== undefined;\r\n    }\r\n\r\n    return !emptyOrMalformed && sentFromParentEl && allowedSDKVersion && validOrigin;\r\n  };\r\n\r\n  private logIncomingMessage = (msg: InterfaceMessageEvent): void => {\r\n    console.info(`Safe Apps SDK v1: A message was received from origin ${msg.origin}. `, msg.data);\r\n  };\r\n\r\n  private onParentMessage = (msg: InterfaceMessageEvent): void => {\r\n    if (this.isValidMessage(msg)) {\r\n      this.debugMode && this.logIncomingMessage(msg);\r\n      this.handleIncomingMessage(msg.data);\r\n    }\r\n  };\r\n\r\n  private handleIncomingMessage = (payload: InterfaceMessageEvent['data']): void => {\r\n    const { id } = payload;\r\n\r\n    const cb = this.callbacks.get(id);\r\n    if (cb) {\r\n      cb(payload);\r\n\r\n      this.callbacks.delete(id);\r\n    }\r\n  };\r\n\r\n  public send = <M extends Methods, P, R>(method: M, params: P): Promise<SuccessResponse<R>> => {\r\n    const request = MessageFormatter.makeRequest(method, params);\r\n\r\n    if (this.isServer) {\r\n      throw new Error(\"Window doesn't exist\");\r\n    }\r\n\r\n    window.parent.postMessage(request, '*');\r\n    return new Promise((resolve, reject) => {\r\n      this.callbacks.set(request.id, (response: Response<R>) => {\r\n        if (!response.success) {\r\n          reject(new Error(response.error));\r\n          return;\r\n        }\r\n\r\n        resolve(response);\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\nexport default PostMessageCommunicator;\r\nexport * from './methods.js';\r\n", "import { ChainInfo as _ChainInfo } from '@safe-global/safe-gateway-typescript-sdk';\r\n\r\nexport type ChainInfo = Pick<\r\n  _ChainInfo,\r\n  'chainName' | 'chainId' | 'shortName' | 'nativeCurrency' | 'blockExplorerUriTemplate'\r\n>;\r\n\r\nexport { NativeCurrency } from '@safe-global/safe-gateway-typescript-sdk';\r\n\r\nexport type BaseTransaction = {\r\n  to: string;\r\n  value: string;\r\n  data: string;\r\n};\r\n\r\nexport type GetTxBySafeTxHashParams = {\r\n  safeTxHash: string;\r\n};\r\n\r\nexport interface SendTransactionRequestParams {\r\n  safeTxGas?: number;\r\n}\r\n\r\nexport interface SendTransactionsParams {\r\n  txs: BaseTransaction[];\r\n  params?: SendTransactionRequestParams;\r\n}\r\n\r\nexport type GetBalanceParams = { currency?: string };\r\n\r\nexport type SignMessageParams = {\r\n  message: string;\r\n};\r\n\r\nexport interface TypedDataDomain {\r\n  name?: string;\r\n  version?: string;\r\n  chainId?: string | number | bigint | { toNumber: () => number };\r\n  verifyingContract?: string;\r\n  salt?: string;\r\n}\r\n\r\nexport interface TypedDataTypes {\r\n  name: string;\r\n  type: string;\r\n}\r\n\r\nexport type TypedMessageTypes = { [key: string]: TypedDataTypes[] };\r\n\r\nexport type EIP712TypedData = {\r\n  domain: TypedDataDomain;\r\n  types: TypedMessageTypes;\r\n  message: Record<string, any>;\r\n  primaryType?: string;\r\n};\r\n\r\nexport type SignTypedMessageParams = {\r\n  typedData: EIP712TypedData;\r\n};\r\n\r\nexport type SendTransactionsResponse = {\r\n  safeTxHash: string;\r\n};\r\n\r\nexport type OffChainSignMessageResponse = {\r\n  messageHash: string;\r\n};\r\n\r\nexport type SignMessageResponse = SendTransactionsResponse | OffChainSignMessageResponse;\r\n\r\nexport type SafeInfo = {\r\n  safeAddress: string;\r\n  chainId: number;\r\n  threshold: number;\r\n  owners: string[];\r\n  isReadOnly: boolean;\r\n};\r\n\r\nexport type SafeInfoExtended = SafeInfo & {\r\n  nonce: number;\r\n  implementation: string;\r\n  modules: string[] | null;\r\n  fallbackHandler: string | null;\r\n  guard: string | null;\r\n  version: string | null;\r\n};\r\n\r\nexport type EnvironmentInfo = {\r\n  origin: string;\r\n};\r\n\r\nexport type PostMessageOptions = {\r\n  transfer?: any[];\r\n};\r\n\r\nexport type AddressBookItem = {\r\n  address: string;\r\n  chainId: string;\r\n  name: string;\r\n};\r\n\r\nexport const isObjectEIP712TypedData = (obj?: unknown): obj is EIP712TypedData => {\r\n  return typeof obj === 'object' && obj != null && 'domain' in obj && 'types' in obj && 'message' in obj;\r\n};\r\n", "import { SafeBalanceResponse, TransactionDetails, TokenInfo } from '@safe-global/safe-gateway-typescript-sdk';\r\n\r\nexport {\r\n  AddOwner,\r\n  ChangeImplementation,\r\n  ChangeThreshold,\r\n  Creation,\r\n  Custom,\r\n  DataDecoded,\r\n  DetailedExecutionInfo,\r\n  DisableModule,\r\n  EnableModule,\r\n  Erc20Transfer,\r\n  Erc721Transfer,\r\n  InternalTransaction,\r\n  ModuleExecutionDetails,\r\n  MultiSend,\r\n  MultisigConfirmation,\r\n  MultisigExecutionDetails,\r\n  NativeCoinTransfer,\r\n  Operation,\r\n  Parameter,\r\n  RemoveOwner,\r\n  SafeAppInfo,\r\n  SetFallbackHandler,\r\n  SettingsChange,\r\n  SettingsInfo,\r\n  SwapOwner,\r\n  TokenInfo,\r\n  TokenType,\r\n  TransactionData,\r\n  TransactionInfo,\r\n  TransactionStatus,\r\n  Transfer,\r\n  TransferDirection,\r\n  TransferInfo,\r\n} from '@safe-global/safe-gateway-typescript-sdk';\r\n\r\nexport type GatewayTransactionDetails = TransactionDetails;\r\n\r\nexport type TokenBalance = {\r\n  tokenInfo: TokenInfo;\r\n  balance: string;\r\n  fiatBalance: string;\r\n  fiatConversion: string;\r\n};\r\n\r\nexport type SafeBalances = SafeBalanceResponse;\r\n", "import { Methods } from '../communication/methods.js';\r\nimport {\r\n  GatewayTransactionDetails,\r\n  SignMessageParams,\r\n  SendTransactionsParams,\r\n  GetTxBySafeTxHashParams,\r\n  Communicator,\r\n  SendTransactionsResponse,\r\n  SignTypedMessageParams,\r\n  EIP712TypedData,\r\n  isObjectEIP712TypedData,\r\n  SignMessageResponse,\r\n} from '../types/index.js';\r\n\r\nclass TXs {\r\n  private readonly communicator: Communicator;\r\n\r\n  constructor(communicator: Communicator) {\r\n    this.communicator = communicator;\r\n  }\r\n\r\n  async getBySafeTxHash(safeTxHash: string): Promise<GatewayTransactionDetails> {\r\n    if (!safeTxHash) {\r\n      throw new Error('Invalid safeTxHash');\r\n    }\r\n\r\n    const response = await this.communicator.send<\r\n      Methods.getTxBySafeTxHash,\r\n      GetTxBySafeTxHashParams,\r\n      GatewayTransactionDetails\r\n    >(Methods.getTxBySafeTxHash, { safeTxHash });\r\n\r\n    return response.data;\r\n  }\r\n\r\n  async signMessage(message: string): Promise<SignMessageResponse> {\r\n    const messagePayload = {\r\n      message,\r\n    };\r\n\r\n    const response = await this.communicator.send<Methods.signMessage, SignMessageParams, SignMessageResponse>(\r\n      Methods.signMessage,\r\n      messagePayload,\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  async signTypedMessage(typedData: EIP712TypedData): Promise<SignMessageResponse> {\r\n    if (!isObjectEIP712TypedData(typedData)) {\r\n      throw new Error('Invalid typed data');\r\n    }\r\n\r\n    const response = await this.communicator.send<\r\n      Methods.signTypedMessage,\r\n      SignTypedMessageParams,\r\n      SignMessageResponse\r\n    >(Methods.signTypedMessage, { typedData });\r\n\r\n    return response.data;\r\n  }\r\n\r\n  async send({ txs, params }: SendTransactionsParams): Promise<SendTransactionsResponse> {\r\n    if (!txs || !txs.length) {\r\n      throw new Error('No transactions were passed');\r\n    }\r\n\r\n    const messagePayload = {\r\n      txs,\r\n      params,\r\n    };\r\n\r\n    const response = await this.communicator.send<\r\n      Methods.sendTransactions,\r\n      SendTransactionsParams,\r\n      SendTransactionsResponse\r\n    >(Methods.sendTransactions, messagePayload);\r\n\r\n    return response.data;\r\n  }\r\n}\r\n\r\nexport { TXs };\r\n", "export const RPC_CALLS = {\r\n  eth_call: 'eth_call',\r\n  eth_gasPrice: 'eth_gasPrice',\r\n  eth_getLogs: 'eth_getLogs',\r\n  eth_getBalance: 'eth_getBalance',\r\n  eth_getCode: 'eth_getCode',\r\n  eth_getBlockByHash: 'eth_getBlockByHash',\r\n  eth_getBlockByNumber: 'eth_getBlockByNumber',\r\n  eth_getStorageAt: 'eth_getStorageAt',\r\n  eth_getTransactionByHash: 'eth_getTransactionByHash',\r\n  eth_getTransactionReceipt: 'eth_getTransactionReceipt',\r\n  eth_getTransactionCount: 'eth_getTransactionCount',\r\n  eth_estimateGas: 'eth_estimateGas',\r\n  safe_setSettings: 'safe_setSettings',\r\n} as const;\r\n", "import { RPC_CALLS } from '../eth/constants.js';\r\nimport {\r\n  BlockNumberArg,\r\n  RpcCallNames,\r\n  Communicator,\r\n  Log,\r\n  BlockTransactionString,\r\n  BlockTransactionObject,\r\n  Web3TransactionObject,\r\n  RPCPayload,\r\n  TransactionConfig,\r\n  Web3TransactionReceiptObject,\r\n  PastLogsOptions,\r\n  SafeSettings,\r\n} from '../types/index.js';\r\nimport { Methods } from '../communication/methods.js';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntype Formatter = (arg: any) => any;\r\n\r\nconst inputFormatters: Record<string, Formatter> = {\r\n  defaultBlockParam: (arg = 'latest') => arg,\r\n  returnFullTxObjectParam: (arg = false): boolean => arg,\r\n  blockNumberToHex: (arg: BlockNumberArg): string =>\r\n    Number.isInteger(arg) ? `0x${arg.toString(16)}` : (arg as string),\r\n};\r\n\r\ntype BuildRequestArgs = {\r\n  call: RpcCallNames;\r\n  formatters?: (Formatter | null)[];\r\n};\r\n\r\nclass Eth {\r\n  public call;\r\n  public getBalance;\r\n  public getCode;\r\n  public getStorageAt;\r\n  public getPastLogs;\r\n  public getBlockByHash;\r\n  public getBlockByNumber;\r\n  public getTransactionByHash;\r\n  public getTransactionReceipt;\r\n  public getTransactionCount;\r\n  public getGasPrice;\r\n  public getEstimateGas;\r\n  public setSafeSettings;\r\n\r\n  private readonly communicator: Communicator;\r\n\r\n  constructor(communicator: Communicator) {\r\n    this.communicator = communicator;\r\n    this.call = this.buildRequest<[TransactionConfig, string?], string>({\r\n      call: RPC_CALLS.eth_call,\r\n      formatters: [null, inputFormatters.defaultBlockParam],\r\n    });\r\n    this.getBalance = this.buildRequest<[string, string?], string>({\r\n      call: RPC_CALLS.eth_getBalance,\r\n      formatters: [null, inputFormatters.defaultBlockParam],\r\n    });\r\n    this.getCode = this.buildRequest<[string, string?], string>({\r\n      call: RPC_CALLS.eth_getCode,\r\n      formatters: [null, inputFormatters.defaultBlockParam],\r\n    });\r\n    this.getStorageAt = this.buildRequest<[string, number, string?], string>({\r\n      call: RPC_CALLS.eth_getStorageAt,\r\n      formatters: [null, inputFormatters.blockNumberToHex, inputFormatters.defaultBlockParam],\r\n    });\r\n    this.getPastLogs = this.buildRequest<[PastLogsOptions], Log[]>({\r\n      call: RPC_CALLS.eth_getLogs,\r\n    });\r\n    this.getBlockByHash = this.buildRequest<[string, boolean?], BlockTransactionString | BlockTransactionObject>({\r\n      call: RPC_CALLS.eth_getBlockByHash,\r\n      formatters: [null, inputFormatters.returnFullTxObjectParam],\r\n    });\r\n    this.getBlockByNumber = this.buildRequest<\r\n      [BlockNumberArg, boolean?],\r\n      BlockTransactionString | BlockTransactionObject\r\n    >({\r\n      call: RPC_CALLS.eth_getBlockByNumber,\r\n      formatters: [inputFormatters.blockNumberToHex, inputFormatters.returnFullTxObjectParam],\r\n    });\r\n    this.getTransactionByHash = this.buildRequest<[string], Web3TransactionObject>({\r\n      call: RPC_CALLS.eth_getTransactionByHash,\r\n    });\r\n    this.getTransactionReceipt = this.buildRequest<[string], Web3TransactionReceiptObject>({\r\n      call: RPC_CALLS.eth_getTransactionReceipt,\r\n    });\r\n    this.getTransactionCount = this.buildRequest<[string, string?], string>({\r\n      call: RPC_CALLS.eth_getTransactionCount,\r\n      formatters: [null, inputFormatters.defaultBlockParam],\r\n    });\r\n    this.getGasPrice = this.buildRequest<never[], string>({\r\n      call: RPC_CALLS.eth_gasPrice,\r\n    });\r\n    this.getEstimateGas = (transaction: TransactionConfig): Promise<number> =>\r\n      this.buildRequest<[TransactionConfig], number>({\r\n        call: RPC_CALLS.eth_estimateGas,\r\n      })([transaction]);\r\n    this.setSafeSettings = this.buildRequest<[SafeSettings], SafeSettings>({\r\n      call: RPC_CALLS.safe_setSettings,\r\n    });\r\n  }\r\n\r\n  private buildRequest<P = never[], R = unknown>(args: BuildRequestArgs) {\r\n    const { call, formatters } = args;\r\n\r\n    return async (params?: P): Promise<R> => {\r\n      if (formatters && Array.isArray(params)) {\r\n        formatters.forEach((formatter: ((...args: unknown[]) => unknown) | null, i) => {\r\n          if (formatter) {\r\n            params[i] = formatter(params[i]);\r\n          }\r\n        });\r\n      }\r\n\r\n      const payload: RPCPayload<P> = {\r\n        call,\r\n        params: params || [],\r\n      };\r\n\r\n      const response = await this.communicator.send<Methods.rpcCall, RPCPayload<P>, R>(Methods.rpcCall, payload);\r\n\r\n      return response.data;\r\n    };\r\n  }\r\n}\r\n\r\nexport { Eth };\r\n", "const MAGIC_VALUE = '0x1626ba7e';\r\nconst MAGIC_VALUE_BYTES = '0x20c13b0b';\r\n\r\nexport { MAGIC_VALUE, MAGIC_VALUE_BYTES };\r\n", "export type Permission = {\r\n  parentCapability: string;\r\n  invoker: string;\r\n  date?: number;\r\n  caveats?: PermissionCaveat[];\r\n};\r\n\r\nexport type PermissionRequest = {\r\n  [method: string]: Record<string, unknown>;\r\n};\r\n\r\nexport type PermissionCaveat = {\r\n  type: string;\r\n  value?: unknown;\r\n  name?: string;\r\n};\r\n\r\nexport const PERMISSIONS_REQUEST_REJECTED = 4001;\r\n\r\nexport class PermissionsError extends Error {\r\n  public code: number;\r\n  public data?: unknown;\r\n\r\n  constructor(message: string, code: number, data?: unknown) {\r\n    super(message);\r\n\r\n    this.code = code;\r\n    this.data = data;\r\n\r\n    // Should adjust prototype manually because how TS handles the type extension compilation\r\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n    Object.setPrototypeOf(this, PermissionsError.prototype);\r\n  }\r\n}\r\n", "import { Methods, RestrictedMethods } from '../communication/methods.js';\r\nimport { Communicator } from '../types/index.js';\r\nimport { PermissionRequest, Permission, PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\r\n\r\nclass Wallet {\r\n  private readonly communicator: Communicator;\r\n\r\n  constructor(communicator: Communicator) {\r\n    this.communicator = communicator;\r\n  }\r\n\r\n  async getPermissions(): Promise<Permission[]> {\r\n    const response = await this.communicator.send<Methods.wallet_getPermissions, undefined, Permission[]>(\r\n      Methods.wallet_getPermissions,\r\n      undefined,\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  async requestPermissions(permissions: PermissionRequest[]): Promise<Permission[]> {\r\n    if (!this.isPermissionRequestValid(permissions)) {\r\n      throw new PermissionsError('Permissions request is invalid', PERMISSIONS_REQUEST_REJECTED);\r\n    }\r\n\r\n    try {\r\n      const response = await this.communicator.send<\r\n        Methods.wallet_requestPermissions,\r\n        PermissionRequest[],\r\n        Permission[]\r\n      >(Methods.wallet_requestPermissions, permissions);\r\n\r\n      return response.data;\r\n    } catch {\r\n      throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\r\n    }\r\n  }\r\n\r\n  isPermissionRequestValid(permissions: PermissionRequest[]): boolean {\r\n    return permissions.every((pr: PermissionRequest) => {\r\n      if (typeof pr === 'object') {\r\n        return Object.keys(pr).every((method) => {\r\n          if (Object.values(RestrictedMethods).includes(method as RestrictedMethods)) {\r\n            return true;\r\n          }\r\n\r\n          return false;\r\n        });\r\n      }\r\n\r\n      return false;\r\n    });\r\n  }\r\n}\r\n\r\nexport { Wallet };\r\n", "import { Methods } from '../communication/index.js';\r\nimport { Safe } from '../safe/index.js';\r\nimport { Wallet } from '../wallet/index.js';\r\n\r\nimport { Permission, PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\r\n\r\nconst hasPermission = (required: Methods, permissions: Permission[]): boolean =>\r\n  permissions.some((permission) => permission.parentCapability === required);\r\n\r\nconst requirePermission = () => (_: unknown, propertyKey: string, descriptor: PropertyDescriptor) => {\r\n  const originalMethod = descriptor.value;\r\n\r\n  descriptor.value = async function () {\r\n    // @ts-expect-error accessing private property from decorator. 'this' context is the class instance\r\n    const wallet = new Wallet((this as Safe).communicator);\r\n\r\n    let currentPermissions = await wallet.getPermissions();\r\n\r\n    if (!hasPermission(propertyKey as Methods, currentPermissions)) {\r\n      currentPermissions = await wallet.requestPermissions([{ [propertyKey as Methods]: {} }]);\r\n    }\r\n\r\n    if (!hasPermission(propertyKey as Methods, currentPermissions)) {\r\n      throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\r\n    }\r\n\r\n    return originalMethod.apply(this);\r\n  };\r\n\r\n  return descriptor;\r\n};\r\n\r\nexport default requirePermission;\r\n", "import { encodeFunctionData, Address, hashMessage, hashTypedData } from 'viem';\r\nimport { MAGIC_VALUE_BYTES, MAGIC_VALUE } from './signatures.js';\r\nimport { Methods } from '../communication/methods.js';\r\nimport { RPC_CALLS } from '../eth/constants.js';\r\nimport {\r\n  Communicator,\r\n  ChainInfo,\r\n  SafeBalances,\r\n  GetBalanceParams,\r\n  RPCPayload,\r\n  TransactionConfig,\r\n  EnvironmentInfo,\r\n  AddressBookItem,\r\n  isObjectEIP712TypedData,\r\n  EIP712TypedData,\r\n  SafeInfoExtended,\r\n} from '../types/index.js';\r\nimport requirePermission from '../decorators/requirePermissions.js';\r\n\r\nclass Safe {\r\n  private readonly communicator: Communicator;\r\n\r\n  constructor(communicator: Communicator) {\r\n    this.communicator = communicator;\r\n  }\r\n\r\n  async getChainInfo(): Promise<ChainInfo> {\r\n    const response = await this.communicator.send<Methods.getChainInfo, undefined, ChainInfo>(\r\n      Methods.getChainInfo,\r\n      undefined,\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  async getInfo(): Promise<SafeInfoExtended> {\r\n    const response = await this.communicator.send<Methods.getSafeInfo, undefined, SafeInfoExtended>(\r\n      Methods.getSafeInfo,\r\n      undefined,\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  // There is a possibility that this method will change because we may add pagination to the endpoint\r\n  async experimental_getBalances({ currency = 'usd' }: GetBalanceParams = {}): Promise<SafeBalances> {\r\n    const response = await this.communicator.send<Methods.getSafeBalances, { currency: string }, SafeBalances>(\r\n      Methods.getSafeBalances,\r\n      {\r\n        currency,\r\n      },\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  private async check1271Signature(messageHash: string, signature = '0x'): Promise<boolean> {\r\n    const safeInfo = await this.getInfo();\r\n\r\n    const encodedIsValidSignatureCall = encodeFunctionData({\r\n      abi: [\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: '_dataHash',\r\n              type: 'bytes32',\r\n            },\r\n            {\r\n              name: '_signature',\r\n              type: 'bytes',\r\n            },\r\n          ],\r\n          name: 'isValidSignature',\r\n          outputs: [\r\n            {\r\n              name: '',\r\n              type: 'bytes4',\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: 'nonpayable',\r\n          type: 'function',\r\n        },\r\n      ] as const,\r\n      functionName: 'isValidSignature',\r\n      args: [messageHash as Address, signature as Address],\r\n    });\r\n\r\n    const payload = {\r\n      call: RPC_CALLS.eth_call,\r\n      params: [\r\n        {\r\n          to: safeInfo.safeAddress,\r\n          data: encodedIsValidSignatureCall,\r\n        },\r\n        'latest',\r\n      ],\r\n    };\r\n    try {\r\n      const response = await this.communicator.send<Methods.rpcCall, RPCPayload<[TransactionConfig, string]>, string>(\r\n        Methods.rpcCall,\r\n        payload,\r\n      );\r\n\r\n      return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private async check1271SignatureBytes(messageHash: string, signature = '0x'): Promise<boolean> {\r\n    const safeInfo = await this.getInfo();\r\n\r\n    const encodedIsValidSignatureCall = encodeFunctionData({\r\n      abi: [\r\n        {\r\n          constant: false,\r\n          inputs: [\r\n            {\r\n              name: '_data',\r\n              type: 'bytes',\r\n            },\r\n            {\r\n              name: '_signature',\r\n              type: 'bytes',\r\n            },\r\n          ],\r\n          name: 'isValidSignature',\r\n          outputs: [\r\n            {\r\n              name: '',\r\n              type: 'bytes4',\r\n            },\r\n          ],\r\n          payable: false,\r\n          stateMutability: 'nonpayable',\r\n          type: 'function',\r\n        },\r\n      ] as const,\r\n      functionName: 'isValidSignature',\r\n      args: [messageHash as Address, signature as Address],\r\n    });\r\n\r\n    const payload = {\r\n      call: RPC_CALLS.eth_call,\r\n      params: [\r\n        {\r\n          to: safeInfo.safeAddress,\r\n          data: encodedIsValidSignatureCall,\r\n        },\r\n        'latest',\r\n      ],\r\n    };\r\n\r\n    try {\r\n      const response = await this.communicator.send<Methods.rpcCall, RPCPayload<[TransactionConfig, string]>, string>(\r\n        Methods.rpcCall,\r\n        payload,\r\n      );\r\n\r\n      return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE_BYTES;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  calculateMessageHash(message: string): string {\r\n    return hashMessage(message);\r\n  }\r\n\r\n  calculateTypedMessageHash(typedMessage: EIP712TypedData): string {\r\n    const chainId =\r\n      typeof typedMessage.domain.chainId === 'object'\r\n        ? typedMessage.domain.chainId.toNumber()\r\n        : Number(typedMessage.domain.chainId);\r\n\r\n    let primaryType = typedMessage.primaryType;\r\n    if (!primaryType) {\r\n      const fields = Object.values(typedMessage.types);\r\n      // We try to infer primaryType (simplified ether's version)\r\n      const primaryTypes = Object.keys(typedMessage.types).filter((typeName) =>\r\n        fields.every((dataTypes) => dataTypes.every(({ type }) => type.replace('[', '').replace(']', '') !== typeName)),\r\n      );\r\n      if (primaryTypes.length === 0 || primaryTypes.length > 1) throw new Error('Please specify primaryType');\r\n      primaryType = primaryTypes[0];\r\n    }\r\n\r\n    return hashTypedData({\r\n      message: typedMessage.message,\r\n      domain: {\r\n        ...typedMessage.domain,\r\n        chainId,\r\n        verifyingContract: typedMessage.domain.verifyingContract as Address,\r\n        salt: typedMessage.domain.salt as Address,\r\n      },\r\n      types: typedMessage.types,\r\n      primaryType,\r\n    });\r\n  }\r\n\r\n  async getOffChainSignature(messageHash: string): Promise<string> {\r\n    const response = await this.communicator.send<Methods.getOffChainSignature, string, string>(\r\n      Methods.getOffChainSignature,\r\n      messageHash,\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  async isMessageSigned(message: string | EIP712TypedData, signature = '0x'): Promise<boolean> {\r\n    let check: (() => Promise<boolean>) | undefined;\r\n    if (typeof message === 'string') {\r\n      check = async (): Promise<boolean> => {\r\n        const messageHash = this.calculateMessageHash(message);\r\n        const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\r\n        return messageHashSigned;\r\n      };\r\n    }\r\n\r\n    if (isObjectEIP712TypedData(message)) {\r\n      check = async (): Promise<boolean> => {\r\n        const messageHash = this.calculateTypedMessageHash(message);\r\n        const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\r\n        return messageHashSigned;\r\n      };\r\n    }\r\n    if (check) {\r\n      const isValid = await check();\r\n\r\n      return isValid;\r\n    }\r\n\r\n    throw new Error('Invalid message type');\r\n  }\r\n\r\n  async isMessageHashSigned(messageHash: string, signature = '0x'): Promise<boolean> {\r\n    const checks = [this.check1271Signature.bind(this), this.check1271SignatureBytes.bind(this)];\r\n\r\n    for (const check of checks) {\r\n      const isValid = await check(messageHash, signature);\r\n      if (isValid) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  async getEnvironmentInfo(): Promise<EnvironmentInfo> {\r\n    const response = await this.communicator.send<Methods.getEnvironmentInfo, undefined, EnvironmentInfo>(\r\n      Methods.getEnvironmentInfo,\r\n      undefined,\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  @requirePermission()\r\n  async requestAddressBook(): Promise<AddressBookItem[]> {\r\n    const response = await this.communicator.send<Methods.requestAddressBook, undefined, AddressBookItem[]>(\r\n      Methods.requestAddressBook,\r\n      undefined,\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n}\r\n\r\nexport { Safe };\r\n", "import { Communicator } from './types/index.js';\r\nimport InterfaceCommunicator from './communication/index.js';\r\nimport { TXs } from './txs/index.js';\r\nimport { Eth } from './eth/index.js';\r\nimport { Safe } from './safe/index.js';\r\nimport { Wallet } from './wallet/index.js';\r\n\r\nexport type Opts = {\r\n  allowedDomains?: RegExp[];\r\n  debug?: boolean;\r\n};\r\n\r\nclass SafeAppsSDK {\r\n  private readonly communicator: Communicator;\r\n  public readonly eth: Eth;\r\n  public readonly txs: TXs;\r\n  public readonly safe: Safe;\r\n  public readonly wallet: Wallet;\r\n\r\n  constructor(opts: Opts = {}) {\r\n    const { allowedDomains = null, debug = false } = opts;\r\n\r\n    this.communicator = new InterfaceCommunicator(allowedDomains, debug);\r\n    this.eth = new Eth(this.communicator);\r\n    this.txs = new TXs(this.communicator);\r\n    this.safe = new Safe(this.communicator);\r\n    this.wallet = new Wallet(this.communicator);\r\n  }\r\n}\r\n\r\nexport default SafeAppsSDK;\r\n", "import SDK from './sdk.js';\r\n\r\nexport default SDK;\r\nexport * from './sdk.js';\r\nexport * from './types/index.js';\r\nexport * from './communication/methods.js';\r\nexport * from './communication/messageFormatter.js';\r\nexport { getSDKVersion } from './version.js';\r\nexport * from './eth/constants.js';\r\n"],
  "mappings": "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",
  "names": ["Methods", "RestrictedMethods"]
}
