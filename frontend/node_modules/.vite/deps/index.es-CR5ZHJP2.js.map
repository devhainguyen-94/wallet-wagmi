{
  "version": 3,
  "sources": ["../../@walletconnect/time/node_modules/tslib/tslib.es6.js", "../../@walletconnect/time/src/utils/delay.ts", "../../@walletconnect/time/src/constants/misc.ts", "../../@walletconnect/time/src/constants/time.ts", "../../@walletconnect/time/src/constants/index.ts", "../../@walletconnect/time/src/utils/convert.ts", "../../@walletconnect/time/src/utils/index.ts", "../../@walletconnect/time/src/watch.ts", "../../@walletconnect/time/src/types/watch.ts", "../../@walletconnect/time/src/types/index.ts", "../../@walletconnect/time/src/index.ts", "../../@walletconnect/window-getters/src/index.ts", "../../@walletconnect/window-metadata/src/index.ts", "../../quick-format-unescaped/index.js", "../../pino/browser.js", "../../@walletconnect/environment/node_modules/tslib/tslib.es6.js", "../../@walletconnect/environment/src/crypto.ts", "../../@walletconnect/environment/src/env.ts", "../../@walletconnect/environment/src/index.ts", "../../@walletconnect/jsonrpc-ws-connection/node_modules/ws/browser.js", "../../@walletconnect/jsonrpc-http-connection/node_modules/cross-fetch/dist/browser-ponyfill.js", "../../@walletconnect/utils/node_modules/viem/accounts/utils/publicKeyToAddress.ts", "../../@walletconnect/utils/node_modules/viem/utils/signature/recoverPublicKey.ts", "../../@walletconnect/utils/node_modules/viem/utils/signature/recoverAddress.ts", "../../@walletconnect/utils/node_modules/viem/utils/formatters/transaction.ts", "../../@walletconnect/utils/node_modules/viem/utils/formatters/block.ts", "../../@walletconnect/utils/node_modules/viem/actions/public/getTransactionCount.ts", "../../@walletconnect/utils/node_modules/viem/constants/blob.ts", "../../@walletconnect/utils/node_modules/viem/utils/formatters/log.ts", "../../@walletconnect/utils/node_modules/viem/actions/wallet/sendTransaction.ts", "../../@walletconnect/utils/node_modules/viem/utils/promise/withDedupe.ts", "../../@walletconnect/utils/node_modules/viem/utils/rpc/id.ts", "../../@walletconnect/utils/node_modules/viem/utils/formatters/transactionReceipt.ts", "../../@walletconnect/utils/node_modules/viem/utils/nonceManager.ts", "../../@walletconnect/utils/node_modules/ox/core/version.ts", "../../@walletconnect/utils/node_modules/ox/core/internal/errors.ts", "../../@walletconnect/utils/node_modules/ox/core/Errors.ts", "../../@walletconnect/utils/node_modules/ox/core/internal/bytes.ts", "../../@walletconnect/utils/node_modules/ox/core/internal/hex.ts", "../../@walletconnect/utils/node_modules/ox/core/Bytes.ts", "../../@walletconnect/utils/node_modules/ox/core/Hex.ts", "../../@walletconnect/utils/node_modules/ox/core/Hash.ts", "../../@walletconnect/utils/node_modules/ox/core/internal/lru.ts", "../../@walletconnect/utils/node_modules/ox/core/Caches.ts", "../../@walletconnect/utils/node_modules/ox/core/Address.ts", "../../@walletconnect/utils/node_modules/ox/core/Solidity.ts", "../../@walletconnect/utils/node_modules/ox/core/internal/cursor.ts", "../../@walletconnect/utils/node_modules/ox/core/AbiParameters.ts", "../../base-x/src/esm/index.js", "../../bs58/src/esm/index.js", "../../@walletconnect/safe-json/src/index.ts", "../../uint8arrays/esm/src/alloc.js", "../../uint8arrays/esm/src/concat.js", "../../multiformats/esm/src/bases/identity.js", "../../multiformats/esm/vendor/base-x.js", "../../multiformats/esm/src/bytes.js", "../../multiformats/esm/src/bases/base.js", "../../multiformats/esm/src/bases/base2.js", "../../multiformats/esm/src/bases/base8.js", "../../multiformats/esm/src/bases/base10.js", "../../multiformats/esm/src/bases/base16.js", "../../multiformats/esm/src/bases/base32.js", "../../multiformats/esm/src/bases/base36.js", "../../multiformats/esm/src/bases/base58.js", "../../multiformats/esm/src/bases/base64.js", "../../multiformats/esm/src/bases/base256emoji.js", "../../multiformats/esm/src/hashes/sha2-browser.js", "../../multiformats/esm/vendor/varint.js", "../../multiformats/esm/src/varint.js", "../../multiformats/esm/src/hashes/digest.js", "../../multiformats/esm/src/hashes/hasher.js", "../../multiformats/esm/src/hashes/identity.js", "../../multiformats/esm/src/codecs/json.js", "../../multiformats/esm/src/cid.js", "../../multiformats/esm/src/basics.js", "../../uint8arrays/esm/src/util/bases.js", "../../uint8arrays/esm/src/from-string.js", "../../uint8arrays/esm/src/to-string.js", "../../@walletconnect/relay-api/src/misc.ts", "../../@walletconnect/relay-api/src/validators.ts", "../../@walletconnect/relay-api/src/parsers.ts", "../../@walletconnect/relay-api/src/jsonrpc.ts", "../../@walletconnect/events/src/events.ts", "../../destr/dist/index.mjs", "../../@walletconnect/core/node_modules/unstorage/dist/shared/unstorage.mNKHTF5Y.mjs", "../../@walletconnect/core/node_modules/unstorage/dist/index.mjs", "../../idb-keyval/dist/index.js", "../../@walletconnect/jsonrpc-utils/src/index.ts", "../../@walletconnect/jsonrpc-utils/src/constants.ts", "../../@walletconnect/jsonrpc-utils/src/error.ts", "../../@walletconnect/jsonrpc-utils/src/env.ts", "../../@walletconnect/jsonrpc-utils/src/format.ts", "../../@walletconnect/jsonrpc-utils/src/routing.ts", "../../@walletconnect/jsonrpc-types/src/misc.ts", "../../@walletconnect/jsonrpc-types/src/provider.ts", "../../@walletconnect/jsonrpc-utils/src/url.ts", "../../@walletconnect/jsonrpc-utils/src/validators.ts"],
  "sourcesContent": ["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", null, null, null, null, null, null, null, null, null, null, null, null, "'use strict'\r\nfunction tryStringify (o) {\r\n  try { return JSON.stringify(o) } catch(e) { return '\"[Circular]\"' }\r\n}\r\n\r\nmodule.exports = format\r\n\r\nfunction format(f, args, opts) {\r\n  var ss = (opts && opts.stringify) || tryStringify\r\n  var offset = 1\r\n  if (typeof f === 'object' && f !== null) {\r\n    var len = args.length + offset\r\n    if (len === 1) return f\r\n    var objects = new Array(len)\r\n    objects[0] = ss(f)\r\n    for (var index = 1; index < len; index++) {\r\n      objects[index] = ss(args[index])\r\n    }\r\n    return objects.join(' ')\r\n  }\r\n  if (typeof f !== 'string') {\r\n    return f\r\n  }\r\n  var argLen = args.length\r\n  if (argLen === 0) return f\r\n  var str = ''\r\n  var a = 1 - offset\r\n  var lastPos = -1\r\n  var flen = (f && f.length) || 0\r\n  for (var i = 0; i < flen;) {\r\n    if (f.charCodeAt(i) === 37 && i + 1 < flen) {\r\n      lastPos = lastPos > -1 ? lastPos : 0\r\n      switch (f.charCodeAt(i + 1)) {\r\n        case 100: // 'd'\r\n        case 102: // 'f'\r\n          if (a >= argLen)\r\n            break\r\n          if (args[a] == null)  break\r\n          if (lastPos < i)\r\n            str += f.slice(lastPos, i)\r\n          str += Number(args[a])\r\n          lastPos = i + 2\r\n          i++\r\n          break\r\n        case 105: // 'i'\r\n          if (a >= argLen)\r\n            break\r\n          if (args[a] == null)  break\r\n          if (lastPos < i)\r\n            str += f.slice(lastPos, i)\r\n          str += Math.floor(Number(args[a]))\r\n          lastPos = i + 2\r\n          i++\r\n          break\r\n        case 79: // 'O'\r\n        case 111: // 'o'\r\n        case 106: // 'j'\r\n          if (a >= argLen)\r\n            break\r\n          if (args[a] === undefined) break\r\n          if (lastPos < i)\r\n            str += f.slice(lastPos, i)\r\n          var type = typeof args[a]\r\n          if (type === 'string') {\r\n            str += '\\'' + args[a] + '\\''\r\n            lastPos = i + 2\r\n            i++\r\n            break\r\n          }\r\n          if (type === 'function') {\r\n            str += args[a].name || '<anonymous>'\r\n            lastPos = i + 2\r\n            i++\r\n            break\r\n          }\r\n          str += ss(args[a])\r\n          lastPos = i + 2\r\n          i++\r\n          break\r\n        case 115: // 's'\r\n          if (a >= argLen)\r\n            break\r\n          if (lastPos < i)\r\n            str += f.slice(lastPos, i)\r\n          str += String(args[a])\r\n          lastPos = i + 2\r\n          i++\r\n          break\r\n        case 37: // '%'\r\n          if (lastPos < i)\r\n            str += f.slice(lastPos, i)\r\n          str += '%'\r\n          lastPos = i + 2\r\n          i++\r\n          a--\r\n          break\r\n      }\r\n      ++a\r\n    }\r\n    ++i\r\n  }\r\n  if (lastPos === -1)\r\n    return f\r\n  else if (lastPos < flen) {\r\n    str += f.slice(lastPos)\r\n  }\r\n\r\n  return str\r\n}\r\n", "'use strict'\r\n\r\nconst format = require('quick-format-unescaped')\r\n\r\nmodule.exports = pino\r\n\r\nconst _console = pfGlobalThisOrFallback().console || {}\r\nconst stdSerializers = {\r\n  mapHttpRequest: mock,\r\n  mapHttpResponse: mock,\r\n  wrapRequestSerializer: passthrough,\r\n  wrapResponseSerializer: passthrough,\r\n  wrapErrorSerializer: passthrough,\r\n  req: mock,\r\n  res: mock,\r\n  err: asErrValue\r\n}\r\n\r\nfunction shouldSerialize (serialize, serializers) {\r\n  if (Array.isArray(serialize)) {\r\n    const hasToFilter = serialize.filter(function (k) {\r\n      return k !== '!stdSerializers.err'\r\n    })\r\n    return hasToFilter\r\n  } else if (serialize === true) {\r\n    return Object.keys(serializers)\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nfunction pino (opts) {\r\n  opts = opts || {}\r\n  opts.browser = opts.browser || {}\r\n\r\n  const transmit = opts.browser.transmit\r\n  if (transmit && typeof transmit.send !== 'function') { throw Error('pino: transmit option must have a send function') }\r\n\r\n  const proto = opts.browser.write || _console\r\n  if (opts.browser.write) opts.browser.asObject = true\r\n  const serializers = opts.serializers || {}\r\n  const serialize = shouldSerialize(opts.browser.serialize, serializers)\r\n  let stdErrSerialize = opts.browser.serialize\r\n\r\n  if (\r\n    Array.isArray(opts.browser.serialize) &&\r\n    opts.browser.serialize.indexOf('!stdSerializers.err') > -1\r\n  ) stdErrSerialize = false\r\n\r\n  const levels = ['error', 'fatal', 'warn', 'info', 'debug', 'trace']\r\n\r\n  if (typeof proto === 'function') {\r\n    proto.error = proto.fatal = proto.warn =\r\n    proto.info = proto.debug = proto.trace = proto\r\n  }\r\n  if (opts.enabled === false) opts.level = 'silent'\r\n  const level = opts.level || 'info'\r\n  const logger = Object.create(proto)\r\n  if (!logger.log) logger.log = noop\r\n\r\n  Object.defineProperty(logger, 'levelVal', {\r\n    get: getLevelVal\r\n  })\r\n  Object.defineProperty(logger, 'level', {\r\n    get: getLevel,\r\n    set: setLevel\r\n  })\r\n\r\n  const setOpts = {\r\n    transmit,\r\n    serialize,\r\n    asObject: opts.browser.asObject,\r\n    levels,\r\n    timestamp: getTimeFunction(opts)\r\n  }\r\n  logger.levels = pino.levels\r\n  logger.level = level\r\n\r\n  logger.setMaxListeners = logger.getMaxListeners =\r\n  logger.emit = logger.addListener = logger.on =\r\n  logger.prependListener = logger.once =\r\n  logger.prependOnceListener = logger.removeListener =\r\n  logger.removeAllListeners = logger.listeners =\r\n  logger.listenerCount = logger.eventNames =\r\n  logger.write = logger.flush = noop\r\n  logger.serializers = serializers\r\n  logger._serialize = serialize\r\n  logger._stdErrSerialize = stdErrSerialize\r\n  logger.child = child\r\n\r\n  if (transmit) logger._logEvent = createLogEventShape()\r\n\r\n  function getLevelVal () {\r\n    return this.level === 'silent'\r\n      ? Infinity\r\n      : this.levels.values[this.level]\r\n  }\r\n\r\n  function getLevel () {\r\n    return this._level\r\n  }\r\n  function setLevel (level) {\r\n    if (level !== 'silent' && !this.levels.values[level]) {\r\n      throw Error('unknown level ' + level)\r\n    }\r\n    this._level = level\r\n\r\n    set(setOpts, logger, 'error', 'log') // <-- must stay first\r\n    set(setOpts, logger, 'fatal', 'error')\r\n    set(setOpts, logger, 'warn', 'error')\r\n    set(setOpts, logger, 'info', 'log')\r\n    set(setOpts, logger, 'debug', 'log')\r\n    set(setOpts, logger, 'trace', 'log')\r\n  }\r\n\r\n  function child (bindings, childOptions) {\r\n    if (!bindings) {\r\n      throw new Error('missing bindings for child Pino')\r\n    }\r\n    childOptions = childOptions || {}\r\n    if (serialize && bindings.serializers) {\r\n      childOptions.serializers = bindings.serializers\r\n    }\r\n    const childOptionsSerializers = childOptions.serializers\r\n    if (serialize && childOptionsSerializers) {\r\n      var childSerializers = Object.assign({}, serializers, childOptionsSerializers)\r\n      var childSerialize = opts.browser.serialize === true\r\n        ? Object.keys(childSerializers)\r\n        : serialize\r\n      delete bindings.serializers\r\n      applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize)\r\n    }\r\n    function Child (parent) {\r\n      this._childLevel = (parent._childLevel | 0) + 1\r\n      this.error = bind(parent, bindings, 'error')\r\n      this.fatal = bind(parent, bindings, 'fatal')\r\n      this.warn = bind(parent, bindings, 'warn')\r\n      this.info = bind(parent, bindings, 'info')\r\n      this.debug = bind(parent, bindings, 'debug')\r\n      this.trace = bind(parent, bindings, 'trace')\r\n      if (childSerializers) {\r\n        this.serializers = childSerializers\r\n        this._serialize = childSerialize\r\n      }\r\n      if (transmit) {\r\n        this._logEvent = createLogEventShape(\r\n          [].concat(parent._logEvent.bindings, bindings)\r\n        )\r\n      }\r\n    }\r\n    Child.prototype = this\r\n    return new Child(this)\r\n  }\r\n  return logger\r\n}\r\n\r\npino.levels = {\r\n  values: {\r\n    fatal: 60,\r\n    error: 50,\r\n    warn: 40,\r\n    info: 30,\r\n    debug: 20,\r\n    trace: 10\r\n  },\r\n  labels: {\r\n    10: 'trace',\r\n    20: 'debug',\r\n    30: 'info',\r\n    40: 'warn',\r\n    50: 'error',\r\n    60: 'fatal'\r\n  }\r\n}\r\n\r\npino.stdSerializers = stdSerializers\r\npino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime })\r\n\r\nfunction set (opts, logger, level, fallback) {\r\n  const proto = Object.getPrototypeOf(logger)\r\n  logger[level] = logger.levelVal > logger.levels.values[level]\r\n    ? noop\r\n    : (proto[level] ? proto[level] : (_console[level] || _console[fallback] || noop))\r\n\r\n  wrap(opts, logger, level)\r\n}\r\n\r\nfunction wrap (opts, logger, level) {\r\n  if (!opts.transmit && logger[level] === noop) return\r\n\r\n  logger[level] = (function (write) {\r\n    return function LOG () {\r\n      const ts = opts.timestamp()\r\n      const args = new Array(arguments.length)\r\n      const proto = (Object.getPrototypeOf && Object.getPrototypeOf(this) === _console) ? _console : this\r\n      for (var i = 0; i < args.length; i++) args[i] = arguments[i]\r\n\r\n      if (opts.serialize && !opts.asObject) {\r\n        applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize)\r\n      }\r\n      if (opts.asObject) write.call(proto, asObject(this, level, args, ts))\r\n      else write.apply(proto, args)\r\n\r\n      if (opts.transmit) {\r\n        const transmitLevel = opts.transmit.level || logger.level\r\n        const transmitValue = pino.levels.values[transmitLevel]\r\n        const methodValue = pino.levels.values[level]\r\n        if (methodValue < transmitValue) return\r\n        transmit(this, {\r\n          ts,\r\n          methodLevel: level,\r\n          methodValue,\r\n          transmitLevel,\r\n          transmitValue: pino.levels.values[opts.transmit.level || logger.level],\r\n          send: opts.transmit.send,\r\n          val: logger.levelVal\r\n        }, args)\r\n      }\r\n    }\r\n  })(logger[level])\r\n}\r\n\r\nfunction asObject (logger, level, args, ts) {\r\n  if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize)\r\n  const argsCloned = args.slice()\r\n  let msg = argsCloned[0]\r\n  const o = {}\r\n  if (ts) {\r\n    o.time = ts\r\n  }\r\n  o.level = pino.levels.values[level]\r\n  let lvl = (logger._childLevel | 0) + 1\r\n  if (lvl < 1) lvl = 1\r\n  // deliberate, catching objects, arrays\r\n  if (msg !== null && typeof msg === 'object') {\r\n    while (lvl-- && typeof argsCloned[0] === 'object') {\r\n      Object.assign(o, argsCloned.shift())\r\n    }\r\n    msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : undefined\r\n  } else if (typeof msg === 'string') msg = format(argsCloned.shift(), argsCloned)\r\n  if (msg !== undefined) o.msg = msg\r\n  return o\r\n}\r\n\r\nfunction applySerializers (args, serialize, serializers, stdErrSerialize) {\r\n  for (const i in args) {\r\n    if (stdErrSerialize && args[i] instanceof Error) {\r\n      args[i] = pino.stdSerializers.err(args[i])\r\n    } else if (typeof args[i] === 'object' && !Array.isArray(args[i])) {\r\n      for (const k in args[i]) {\r\n        if (serialize && serialize.indexOf(k) > -1 && k in serializers) {\r\n          args[i][k] = serializers[k](args[i][k])\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction bind (parent, bindings, level) {\r\n  return function () {\r\n    const args = new Array(1 + arguments.length)\r\n    args[0] = bindings\r\n    for (var i = 1; i < args.length; i++) {\r\n      args[i] = arguments[i - 1]\r\n    }\r\n    return parent[level].apply(this, args)\r\n  }\r\n}\r\n\r\nfunction transmit (logger, opts, args) {\r\n  const send = opts.send\r\n  const ts = opts.ts\r\n  const methodLevel = opts.methodLevel\r\n  const methodValue = opts.methodValue\r\n  const val = opts.val\r\n  const bindings = logger._logEvent.bindings\r\n\r\n  applySerializers(\r\n    args,\r\n    logger._serialize || Object.keys(logger.serializers),\r\n    logger.serializers,\r\n    logger._stdErrSerialize === undefined ? true : logger._stdErrSerialize\r\n  )\r\n  logger._logEvent.ts = ts\r\n  logger._logEvent.messages = args.filter(function (arg) {\r\n    // bindings can only be objects, so reference equality check via indexOf is fine\r\n    return bindings.indexOf(arg) === -1\r\n  })\r\n\r\n  logger._logEvent.level.label = methodLevel\r\n  logger._logEvent.level.value = methodValue\r\n\r\n  send(methodLevel, logger._logEvent, val)\r\n\r\n  logger._logEvent = createLogEventShape(bindings)\r\n}\r\n\r\nfunction createLogEventShape (bindings) {\r\n  return {\r\n    ts: 0,\r\n    messages: [],\r\n    bindings: bindings || [],\r\n    level: { label: '', value: 0 }\r\n  }\r\n}\r\n\r\nfunction asErrValue (err) {\r\n  const obj = {\r\n    type: err.constructor.name,\r\n    msg: err.message,\r\n    stack: err.stack\r\n  }\r\n  for (const key in err) {\r\n    if (obj[key] === undefined) {\r\n      obj[key] = err[key]\r\n    }\r\n  }\r\n  return obj\r\n}\r\n\r\nfunction getTimeFunction (opts) {\r\n  if (typeof opts.timestamp === 'function') {\r\n    return opts.timestamp\r\n  }\r\n  if (opts.timestamp === false) {\r\n    return nullTime\r\n  }\r\n  return epochTime\r\n}\r\n\r\nfunction mock () { return {} }\r\nfunction passthrough (a) { return a }\r\nfunction noop () {}\r\n\r\nfunction nullTime () { return false }\r\nfunction epochTime () { return Date.now() }\r\nfunction unixTime () { return Math.round(Date.now() / 1000.0) }\r\nfunction isoTime () { return new Date(Date.now()).toISOString() } // using Date.now() for testability\r\n\r\n/* eslint-disable */\r\n/* istanbul ignore next */\r\nfunction pfGlobalThisOrFallback () {\r\n  function defd (o) { return typeof o !== 'undefined' && o }\r\n  try {\r\n    if (typeof globalThis !== 'undefined') return globalThis\r\n    Object.defineProperty(Object.prototype, 'globalThis', {\r\n      get: function () {\r\n        delete Object.prototype.globalThis\r\n        return (this.globalThis = this)\r\n      },\r\n      configurable: true\r\n    })\r\n    return globalThis\r\n  } catch (e) {\r\n    return defd(self) || defd(window) || defd(this) || {}\r\n  }\r\n}\r\n/* eslint-enable */\r\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", null, null, null, "'use strict';\r\n\r\nmodule.exports = function () {\r\n  throw new Error(\r\n    'ws does not work in the browser. Browser clients must use the native ' +\r\n      'WebSocket object'\r\n  );\r\n};\r\n", "// Save global object in a variable\r\nvar __global__ =\r\n(typeof globalThis !== 'undefined' && globalThis) ||\r\n(typeof self !== 'undefined' && self) ||\r\n(typeof global !== 'undefined' && global);\r\n// Create an object that extends from __global__ without the fetch function\r\nvar __globalThis__ = (function () {\r\nfunction F() {\r\nthis.fetch = false;\r\nthis.DOMException = __global__.DOMException\r\n}\r\nF.prototype = __global__; // Needed for feature detection on whatwg-fetch's code\r\nreturn new F();\r\n})();\r\n// Wraps whatwg-fetch with a function scope to hijack the global object\r\n// \"globalThis\" that's going to be patched\r\n(function(globalThis) {\r\n\r\nvar irrelevant = (function (exports) {\r\n\r\n  /* eslint-disable no-prototype-builtins */\r\n  var g =\r\n    (typeof globalThis !== 'undefined' && globalThis) ||\r\n    (typeof self !== 'undefined' && self) ||\r\n    // eslint-disable-next-line no-undef\r\n    (typeof global !== 'undefined' && global) ||\r\n    {};\r\n\r\n  var support = {\r\n    searchParams: 'URLSearchParams' in g,\r\n    iterable: 'Symbol' in g && 'iterator' in Symbol,\r\n    blob:\r\n      'FileReader' in g &&\r\n      'Blob' in g &&\r\n      (function() {\r\n        try {\r\n          new Blob();\r\n          return true\r\n        } catch (e) {\r\n          return false\r\n        }\r\n      })(),\r\n    formData: 'FormData' in g,\r\n    arrayBuffer: 'ArrayBuffer' in g\r\n  };\r\n\r\n  function isDataView(obj) {\r\n    return obj && DataView.prototype.isPrototypeOf(obj)\r\n  }\r\n\r\n  if (support.arrayBuffer) {\r\n    var viewClasses = [\r\n      '[object Int8Array]',\r\n      '[object Uint8Array]',\r\n      '[object Uint8ClampedArray]',\r\n      '[object Int16Array]',\r\n      '[object Uint16Array]',\r\n      '[object Int32Array]',\r\n      '[object Uint32Array]',\r\n      '[object Float32Array]',\r\n      '[object Float64Array]'\r\n    ];\r\n\r\n    var isArrayBufferView =\r\n      ArrayBuffer.isView ||\r\n      function(obj) {\r\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\r\n      };\r\n  }\r\n\r\n  function normalizeName(name) {\r\n    if (typeof name !== 'string') {\r\n      name = String(name);\r\n    }\r\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\r\n      throw new TypeError('Invalid character in header field name: \"' + name + '\"')\r\n    }\r\n    return name.toLowerCase()\r\n  }\r\n\r\n  function normalizeValue(value) {\r\n    if (typeof value !== 'string') {\r\n      value = String(value);\r\n    }\r\n    return value\r\n  }\r\n\r\n  // Build a destructive iterator for the value list\r\n  function iteratorFor(items) {\r\n    var iterator = {\r\n      next: function() {\r\n        var value = items.shift();\r\n        return {done: value === undefined, value: value}\r\n      }\r\n    };\r\n\r\n    if (support.iterable) {\r\n      iterator[Symbol.iterator] = function() {\r\n        return iterator\r\n      };\r\n    }\r\n\r\n    return iterator\r\n  }\r\n\r\n  function Headers(headers) {\r\n    this.map = {};\r\n\r\n    if (headers instanceof Headers) {\r\n      headers.forEach(function(value, name) {\r\n        this.append(name, value);\r\n      }, this);\r\n    } else if (Array.isArray(headers)) {\r\n      headers.forEach(function(header) {\r\n        if (header.length != 2) {\r\n          throw new TypeError('Headers constructor: expected name/value pair to be length 2, found' + header.length)\r\n        }\r\n        this.append(header[0], header[1]);\r\n      }, this);\r\n    } else if (headers) {\r\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\r\n        this.append(name, headers[name]);\r\n      }, this);\r\n    }\r\n  }\r\n\r\n  Headers.prototype.append = function(name, value) {\r\n    name = normalizeName(name);\r\n    value = normalizeValue(value);\r\n    var oldValue = this.map[name];\r\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\r\n  };\r\n\r\n  Headers.prototype['delete'] = function(name) {\r\n    delete this.map[normalizeName(name)];\r\n  };\r\n\r\n  Headers.prototype.get = function(name) {\r\n    name = normalizeName(name);\r\n    return this.has(name) ? this.map[name] : null\r\n  };\r\n\r\n  Headers.prototype.has = function(name) {\r\n    return this.map.hasOwnProperty(normalizeName(name))\r\n  };\r\n\r\n  Headers.prototype.set = function(name, value) {\r\n    this.map[normalizeName(name)] = normalizeValue(value);\r\n  };\r\n\r\n  Headers.prototype.forEach = function(callback, thisArg) {\r\n    for (var name in this.map) {\r\n      if (this.map.hasOwnProperty(name)) {\r\n        callback.call(thisArg, this.map[name], name, this);\r\n      }\r\n    }\r\n  };\r\n\r\n  Headers.prototype.keys = function() {\r\n    var items = [];\r\n    this.forEach(function(value, name) {\r\n      items.push(name);\r\n    });\r\n    return iteratorFor(items)\r\n  };\r\n\r\n  Headers.prototype.values = function() {\r\n    var items = [];\r\n    this.forEach(function(value) {\r\n      items.push(value);\r\n    });\r\n    return iteratorFor(items)\r\n  };\r\n\r\n  Headers.prototype.entries = function() {\r\n    var items = [];\r\n    this.forEach(function(value, name) {\r\n      items.push([name, value]);\r\n    });\r\n    return iteratorFor(items)\r\n  };\r\n\r\n  if (support.iterable) {\r\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\r\n  }\r\n\r\n  function consumed(body) {\r\n    if (body._noBody) return\r\n    if (body.bodyUsed) {\r\n      return Promise.reject(new TypeError('Already read'))\r\n    }\r\n    body.bodyUsed = true;\r\n  }\r\n\r\n  function fileReaderReady(reader) {\r\n    return new Promise(function(resolve, reject) {\r\n      reader.onload = function() {\r\n        resolve(reader.result);\r\n      };\r\n      reader.onerror = function() {\r\n        reject(reader.error);\r\n      };\r\n    })\r\n  }\r\n\r\n  function readBlobAsArrayBuffer(blob) {\r\n    var reader = new FileReader();\r\n    var promise = fileReaderReady(reader);\r\n    reader.readAsArrayBuffer(blob);\r\n    return promise\r\n  }\r\n\r\n  function readBlobAsText(blob) {\r\n    var reader = new FileReader();\r\n    var promise = fileReaderReady(reader);\r\n    var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type);\r\n    var encoding = match ? match[1] : 'utf-8';\r\n    reader.readAsText(blob, encoding);\r\n    return promise\r\n  }\r\n\r\n  function readArrayBufferAsText(buf) {\r\n    var view = new Uint8Array(buf);\r\n    var chars = new Array(view.length);\r\n\r\n    for (var i = 0; i < view.length; i++) {\r\n      chars[i] = String.fromCharCode(view[i]);\r\n    }\r\n    return chars.join('')\r\n  }\r\n\r\n  function bufferClone(buf) {\r\n    if (buf.slice) {\r\n      return buf.slice(0)\r\n    } else {\r\n      var view = new Uint8Array(buf.byteLength);\r\n      view.set(new Uint8Array(buf));\r\n      return view.buffer\r\n    }\r\n  }\r\n\r\n  function Body() {\r\n    this.bodyUsed = false;\r\n\r\n    this._initBody = function(body) {\r\n      /*\r\n        fetch-mock wraps the Response object in an ES6 Proxy to\r\n        provide useful test harness features such as flush. However, on\r\n        ES5 browsers without fetch or Proxy support pollyfills must be used;\r\n        the proxy-pollyfill is unable to proxy an attribute unless it exists\r\n        on the object before the Proxy is created. This change ensures\r\n        Response.bodyUsed exists on the instance, while maintaining the\r\n        semantic of setting Request.bodyUsed in the constructor before\r\n        _initBody is called.\r\n      */\r\n      // eslint-disable-next-line no-self-assign\r\n      this.bodyUsed = this.bodyUsed;\r\n      this._bodyInit = body;\r\n      if (!body) {\r\n        this._noBody = true;\r\n        this._bodyText = '';\r\n      } else if (typeof body === 'string') {\r\n        this._bodyText = body;\r\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\r\n        this._bodyBlob = body;\r\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\r\n        this._bodyFormData = body;\r\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n        this._bodyText = body.toString();\r\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\r\n        this._bodyArrayBuffer = bufferClone(body.buffer);\r\n        // IE 10-11 can't handle a DataView body.\r\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\r\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\r\n        this._bodyArrayBuffer = bufferClone(body);\r\n      } else {\r\n        this._bodyText = body = Object.prototype.toString.call(body);\r\n      }\r\n\r\n      if (!this.headers.get('content-type')) {\r\n        if (typeof body === 'string') {\r\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\r\n        } else if (this._bodyBlob && this._bodyBlob.type) {\r\n          this.headers.set('content-type', this._bodyBlob.type);\r\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\r\n        }\r\n      }\r\n    };\r\n\r\n    if (support.blob) {\r\n      this.blob = function() {\r\n        var rejected = consumed(this);\r\n        if (rejected) {\r\n          return rejected\r\n        }\r\n\r\n        if (this._bodyBlob) {\r\n          return Promise.resolve(this._bodyBlob)\r\n        } else if (this._bodyArrayBuffer) {\r\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\r\n        } else if (this._bodyFormData) {\r\n          throw new Error('could not read FormData body as blob')\r\n        } else {\r\n          return Promise.resolve(new Blob([this._bodyText]))\r\n        }\r\n      };\r\n    }\r\n\r\n    this.arrayBuffer = function() {\r\n      if (this._bodyArrayBuffer) {\r\n        var isConsumed = consumed(this);\r\n        if (isConsumed) {\r\n          return isConsumed\r\n        } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\r\n          return Promise.resolve(\r\n            this._bodyArrayBuffer.buffer.slice(\r\n              this._bodyArrayBuffer.byteOffset,\r\n              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\r\n            )\r\n          )\r\n        } else {\r\n          return Promise.resolve(this._bodyArrayBuffer)\r\n        }\r\n      } else if (support.blob) {\r\n        return this.blob().then(readBlobAsArrayBuffer)\r\n      } else {\r\n        throw new Error('could not read as ArrayBuffer')\r\n      }\r\n    };\r\n\r\n    this.text = function() {\r\n      var rejected = consumed(this);\r\n      if (rejected) {\r\n        return rejected\r\n      }\r\n\r\n      if (this._bodyBlob) {\r\n        return readBlobAsText(this._bodyBlob)\r\n      } else if (this._bodyArrayBuffer) {\r\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\r\n      } else if (this._bodyFormData) {\r\n        throw new Error('could not read FormData body as text')\r\n      } else {\r\n        return Promise.resolve(this._bodyText)\r\n      }\r\n    };\r\n\r\n    if (support.formData) {\r\n      this.formData = function() {\r\n        return this.text().then(decode)\r\n      };\r\n    }\r\n\r\n    this.json = function() {\r\n      return this.text().then(JSON.parse)\r\n    };\r\n\r\n    return this\r\n  }\r\n\r\n  // HTTP methods whose capitalization should be normalized\r\n  var methods = ['CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE'];\r\n\r\n  function normalizeMethod(method) {\r\n    var upcased = method.toUpperCase();\r\n    return methods.indexOf(upcased) > -1 ? upcased : method\r\n  }\r\n\r\n  function Request(input, options) {\r\n    if (!(this instanceof Request)) {\r\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\r\n    }\r\n\r\n    options = options || {};\r\n    var body = options.body;\r\n\r\n    if (input instanceof Request) {\r\n      if (input.bodyUsed) {\r\n        throw new TypeError('Already read')\r\n      }\r\n      this.url = input.url;\r\n      this.credentials = input.credentials;\r\n      if (!options.headers) {\r\n        this.headers = new Headers(input.headers);\r\n      }\r\n      this.method = input.method;\r\n      this.mode = input.mode;\r\n      this.signal = input.signal;\r\n      if (!body && input._bodyInit != null) {\r\n        body = input._bodyInit;\r\n        input.bodyUsed = true;\r\n      }\r\n    } else {\r\n      this.url = String(input);\r\n    }\r\n\r\n    this.credentials = options.credentials || this.credentials || 'same-origin';\r\n    if (options.headers || !this.headers) {\r\n      this.headers = new Headers(options.headers);\r\n    }\r\n    this.method = normalizeMethod(options.method || this.method || 'GET');\r\n    this.mode = options.mode || this.mode || null;\r\n    this.signal = options.signal || this.signal || (function () {\r\n      if ('AbortController' in g) {\r\n        var ctrl = new AbortController();\r\n        return ctrl.signal;\r\n      }\r\n    }());\r\n    this.referrer = null;\r\n\r\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\r\n      throw new TypeError('Body not allowed for GET or HEAD requests')\r\n    }\r\n    this._initBody(body);\r\n\r\n    if (this.method === 'GET' || this.method === 'HEAD') {\r\n      if (options.cache === 'no-store' || options.cache === 'no-cache') {\r\n        // Search for a '_' parameter in the query string\r\n        var reParamSearch = /([?&])_=[^&]*/;\r\n        if (reParamSearch.test(this.url)) {\r\n          // If it already exists then set the value with the current time\r\n          this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());\r\n        } else {\r\n          // Otherwise add a new '_' parameter to the end with the current time\r\n          var reQueryString = /\\?/;\r\n          this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  Request.prototype.clone = function() {\r\n    return new Request(this, {body: this._bodyInit})\r\n  };\r\n\r\n  function decode(body) {\r\n    var form = new FormData();\r\n    body\r\n      .trim()\r\n      .split('&')\r\n      .forEach(function(bytes) {\r\n        if (bytes) {\r\n          var split = bytes.split('=');\r\n          var name = split.shift().replace(/\\+/g, ' ');\r\n          var value = split.join('=').replace(/\\+/g, ' ');\r\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\r\n        }\r\n      });\r\n    return form\r\n  }\r\n\r\n  function parseHeaders(rawHeaders) {\r\n    var headers = new Headers();\r\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\r\n    // https://tools.ietf.org/html/rfc7230#section-3.2\r\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\r\n    // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\r\n    // https://github.com/github/fetch/issues/748\r\n    // https://github.com/zloirock/core-js/issues/751\r\n    preProcessedHeaders\r\n      .split('\\r')\r\n      .map(function(header) {\r\n        return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\r\n      })\r\n      .forEach(function(line) {\r\n        var parts = line.split(':');\r\n        var key = parts.shift().trim();\r\n        if (key) {\r\n          var value = parts.join(':').trim();\r\n          try {\r\n            headers.append(key, value);\r\n          } catch (error) {\r\n            console.warn('Response ' + error.message);\r\n          }\r\n        }\r\n      });\r\n    return headers\r\n  }\r\n\r\n  Body.call(Request.prototype);\r\n\r\n  function Response(bodyInit, options) {\r\n    if (!(this instanceof Response)) {\r\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\r\n    }\r\n    if (!options) {\r\n      options = {};\r\n    }\r\n\r\n    this.type = 'default';\r\n    this.status = options.status === undefined ? 200 : options.status;\r\n    if (this.status < 200 || this.status > 599) {\r\n      throw new RangeError(\"Failed to construct 'Response': The status provided (0) is outside the range [200, 599].\")\r\n    }\r\n    this.ok = this.status >= 200 && this.status < 300;\r\n    this.statusText = options.statusText === undefined ? '' : '' + options.statusText;\r\n    this.headers = new Headers(options.headers);\r\n    this.url = options.url || '';\r\n    this._initBody(bodyInit);\r\n  }\r\n\r\n  Body.call(Response.prototype);\r\n\r\n  Response.prototype.clone = function() {\r\n    return new Response(this._bodyInit, {\r\n      status: this.status,\r\n      statusText: this.statusText,\r\n      headers: new Headers(this.headers),\r\n      url: this.url\r\n    })\r\n  };\r\n\r\n  Response.error = function() {\r\n    var response = new Response(null, {status: 200, statusText: ''});\r\n    response.ok = false;\r\n    response.status = 0;\r\n    response.type = 'error';\r\n    return response\r\n  };\r\n\r\n  var redirectStatuses = [301, 302, 303, 307, 308];\r\n\r\n  Response.redirect = function(url, status) {\r\n    if (redirectStatuses.indexOf(status) === -1) {\r\n      throw new RangeError('Invalid status code')\r\n    }\r\n\r\n    return new Response(null, {status: status, headers: {location: url}})\r\n  };\r\n\r\n  exports.DOMException = g.DOMException;\r\n  try {\r\n    new exports.DOMException();\r\n  } catch (err) {\r\n    exports.DOMException = function(message, name) {\r\n      this.message = message;\r\n      this.name = name;\r\n      var error = Error(message);\r\n      this.stack = error.stack;\r\n    };\r\n    exports.DOMException.prototype = Object.create(Error.prototype);\r\n    exports.DOMException.prototype.constructor = exports.DOMException;\r\n  }\r\n\r\n  function fetch(input, init) {\r\n    return new Promise(function(resolve, reject) {\r\n      var request = new Request(input, init);\r\n\r\n      if (request.signal && request.signal.aborted) {\r\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\r\n      }\r\n\r\n      var xhr = new XMLHttpRequest();\r\n\r\n      function abortXhr() {\r\n        xhr.abort();\r\n      }\r\n\r\n      xhr.onload = function() {\r\n        var options = {\r\n          statusText: xhr.statusText,\r\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\r\n        };\r\n        // This check if specifically for when a user fetches a file locally from the file system\r\n        // Only if the status is out of a normal range\r\n        if (request.url.indexOf('file://') === 0 && (xhr.status < 200 || xhr.status > 599)) {\r\n          options.status = 200;\r\n        } else {\r\n          options.status = xhr.status;\r\n        }\r\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\r\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\r\n        setTimeout(function() {\r\n          resolve(new Response(body, options));\r\n        }, 0);\r\n      };\r\n\r\n      xhr.onerror = function() {\r\n        setTimeout(function() {\r\n          reject(new TypeError('Network request failed'));\r\n        }, 0);\r\n      };\r\n\r\n      xhr.ontimeout = function() {\r\n        setTimeout(function() {\r\n          reject(new TypeError('Network request timed out'));\r\n        }, 0);\r\n      };\r\n\r\n      xhr.onabort = function() {\r\n        setTimeout(function() {\r\n          reject(new exports.DOMException('Aborted', 'AbortError'));\r\n        }, 0);\r\n      };\r\n\r\n      function fixUrl(url) {\r\n        try {\r\n          return url === '' && g.location.href ? g.location.href : url\r\n        } catch (e) {\r\n          return url\r\n        }\r\n      }\r\n\r\n      xhr.open(request.method, fixUrl(request.url), true);\r\n\r\n      if (request.credentials === 'include') {\r\n        xhr.withCredentials = true;\r\n      } else if (request.credentials === 'omit') {\r\n        xhr.withCredentials = false;\r\n      }\r\n\r\n      if ('responseType' in xhr) {\r\n        if (support.blob) {\r\n          xhr.responseType = 'blob';\r\n        } else if (\r\n          support.arrayBuffer\r\n        ) {\r\n          xhr.responseType = 'arraybuffer';\r\n        }\r\n      }\r\n\r\n      if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers || (g.Headers && init.headers instanceof g.Headers))) {\r\n        var names = [];\r\n        Object.getOwnPropertyNames(init.headers).forEach(function(name) {\r\n          names.push(normalizeName(name));\r\n          xhr.setRequestHeader(name, normalizeValue(init.headers[name]));\r\n        });\r\n        request.headers.forEach(function(value, name) {\r\n          if (names.indexOf(name) === -1) {\r\n            xhr.setRequestHeader(name, value);\r\n          }\r\n        });\r\n      } else {\r\n        request.headers.forEach(function(value, name) {\r\n          xhr.setRequestHeader(name, value);\r\n        });\r\n      }\r\n\r\n      if (request.signal) {\r\n        request.signal.addEventListener('abort', abortXhr);\r\n\r\n        xhr.onreadystatechange = function() {\r\n          // DONE (success or failure)\r\n          if (xhr.readyState === 4) {\r\n            request.signal.removeEventListener('abort', abortXhr);\r\n          }\r\n        };\r\n      }\r\n\r\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\r\n    })\r\n  }\r\n\r\n  fetch.polyfill = true;\r\n\r\n  if (!g.fetch) {\r\n    g.fetch = fetch;\r\n    g.Headers = Headers;\r\n    g.Request = Request;\r\n    g.Response = Response;\r\n  }\r\n\r\n  exports.Headers = Headers;\r\n  exports.Request = Request;\r\n  exports.Response = Response;\r\n  exports.fetch = fetch;\r\n\r\n  Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n  return exports;\r\n\r\n})({});\r\n})(__globalThis__);\r\n// This is a ponyfill, so...\r\n__globalThis__.fetch.ponyfill = true;\r\ndelete __globalThis__.fetch.polyfill;\r\n// Choose between native implementation (__global__) or custom implementation (__globalThis__)\r\nvar ctx = __global__.fetch ? __global__ : __globalThis__;\r\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\r\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\r\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\r\nexports.Headers = ctx.Headers\r\nexports.Request = ctx.Request\r\nexports.Response = ctx.Response\r\nmodule.exports = exports\r\n", "import type { Address } from 'abitype'\r\n\r\nimport type { ErrorType } from '../../errors/utils.js'\r\nimport type { Hex } from '../../types/misc.js'\r\nimport {\r\n  type ChecksumAddressErrorType,\r\n  checksumAddress,\r\n} from '../../utils/address/getAddress.js'\r\nimport {\r\n  type Keccak256ErrorType,\r\n  keccak256,\r\n} from '../../utils/hash/keccak256.js'\r\n\r\nexport type PublicKeyToAddressErrorType =\r\n  | ChecksumAddressErrorType\r\n  | Keccak256ErrorType\r\n  | ErrorType\r\n\r\n/**\r\n * @description Converts an ECDSA public key to an address.\r\n *\r\n * @param publicKey The public key to convert.\r\n *\r\n * @returns The address.\r\n */\r\nexport function publicKeyToAddress(publicKey: Hex): Address {\r\n  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26)\r\n  return checksumAddress(`0x${address}`) as Address\r\n}\r\n", "import type { ErrorType } from '../../errors/utils.js'\r\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\r\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\r\nimport {\r\n  type HexToNumberErrorType,\r\n  hexToBigInt,\r\n  hexToNumber,\r\n} from '../encoding/fromHex.js'\r\nimport { toHex } from '../encoding/toHex.js'\r\n\r\nexport type RecoverPublicKeyParameters = {\r\n  hash: Hex | ByteArray\r\n  signature: Hex | ByteArray | Signature\r\n}\r\n\r\nexport type RecoverPublicKeyReturnType = Hex\r\n\r\nexport type RecoverPublicKeyErrorType =\r\n  | HexToNumberErrorType\r\n  | IsHexErrorType\r\n  | ErrorType\r\n\r\nexport async function recoverPublicKey({\r\n  hash,\r\n  signature,\r\n}: RecoverPublicKeyParameters): Promise<RecoverPublicKeyReturnType> {\r\n  const hashHex = isHex(hash) ? hash : toHex(hash)\r\n\r\n  const { secp256k1 } = await import('@noble/curves/secp256k1')\r\n  const signature_ = (() => {\r\n    // typeof signature: `Signature`\r\n    if (typeof signature === 'object' && 'r' in signature && 's' in signature) {\r\n      const { r, s, v, yParity } = signature\r\n      const yParityOrV = Number(yParity ?? v)!\r\n      const recoveryBit = toRecoveryBit(yParityOrV)\r\n      return new secp256k1.Signature(\r\n        hexToBigInt(r),\r\n        hexToBigInt(s),\r\n      ).addRecoveryBit(recoveryBit)\r\n    }\r\n\r\n    // typeof signature: `Hex | ByteArray`\r\n    const signatureHex = isHex(signature) ? signature : toHex(signature)\r\n    const yParityOrV = hexToNumber(`0x${signatureHex.slice(130)}`)\r\n    const recoveryBit = toRecoveryBit(yParityOrV)\r\n    return secp256k1.Signature.fromCompact(\r\n      signatureHex.substring(2, 130),\r\n    ).addRecoveryBit(recoveryBit)\r\n  })()\r\n\r\n  const publicKey = signature_\r\n    .recoverPublicKey(hashHex.substring(2))\r\n    .toHex(false)\r\n  return `0x${publicKey}`\r\n}\r\n\r\nfunction toRecoveryBit(yParityOrV: number) {\r\n  if (yParityOrV === 0 || yParityOrV === 1) return yParityOrV\r\n  if (yParityOrV === 27) return 0\r\n  if (yParityOrV === 28) return 1\r\n  throw new Error('Invalid yParityOrV value')\r\n}\r\n", "import type { Address } from 'abitype'\r\n\r\nimport { publicKeyToAddress } from '../../accounts/utils/publicKeyToAddress.js'\r\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\r\n\r\nimport type { ErrorType } from '../../errors/utils.js'\r\nimport { recoverPublicKey } from './recoverPublicKey.js'\r\n\r\nexport type RecoverAddressParameters = {\r\n  hash: Hex | ByteArray\r\n  signature: Hex | ByteArray | Signature\r\n}\r\n\r\nexport type RecoverAddressReturnType = Address\r\n\r\nexport type RecoverAddressErrorType = ErrorType\r\n\r\nexport async function recoverAddress({\r\n  hash,\r\n  signature,\r\n}: RecoverAddressParameters): Promise<RecoverAddressReturnType> {\r\n  return publicKeyToAddress(await recoverPublicKey({ hash: hash, signature }))\r\n}\r\n", "import type { ErrorType } from '../../errors/utils.js'\r\nimport type { SignedAuthorizationList } from '../../experimental/eip7702/types/authorization.js'\r\nimport type { RpcAuthorizationList } from '../../experimental/eip7702/types/rpc.js'\r\nimport type { BlockTag } from '../../types/block.js'\r\nimport type { Chain } from '../../types/chain.js'\r\nimport type {\r\n  ExtractChainFormatterExclude,\r\n  ExtractChainFormatterReturnType,\r\n} from '../../types/chain.js'\r\nimport type { Hex } from '../../types/misc.js'\r\nimport type { RpcTransaction } from '../../types/rpc.js'\r\nimport type { Transaction, TransactionType } from '../../types/transaction.js'\r\nimport type { ExactPartial, UnionLooseOmit } from '../../types/utils.js'\r\nimport { hexToNumber } from '../encoding/fromHex.js'\r\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\r\n\r\ntype TransactionPendingDependencies =\r\n  | 'blockHash'\r\n  | 'blockNumber'\r\n  | 'transactionIndex'\r\n\r\nexport type FormattedTransaction<\r\n  chain extends Chain | undefined = undefined,\r\n  blockTag extends BlockTag = BlockTag,\r\n  _FormatterReturnType = ExtractChainFormatterReturnType<\r\n    chain,\r\n    'transaction',\r\n    Transaction\r\n  >,\r\n  _ExcludedPendingDependencies extends string = TransactionPendingDependencies &\r\n    ExtractChainFormatterExclude<chain, 'transaction'>,\r\n> = UnionLooseOmit<_FormatterReturnType, TransactionPendingDependencies> & {\r\n  [_K in _ExcludedPendingDependencies]: never\r\n} & Pick<\r\n    Transaction<bigint, number, blockTag extends 'pending' ? true : false>,\r\n    TransactionPendingDependencies\r\n  >\r\n\r\nexport const transactionType = {\r\n  '0x0': 'legacy',\r\n  '0x1': 'eip2930',\r\n  '0x2': 'eip1559',\r\n  '0x3': 'eip4844',\r\n  '0x4': 'eip7702',\r\n} as const satisfies Record<Hex, TransactionType>\r\n\r\nexport type FormatTransactionErrorType = ErrorType\r\n\r\nexport function formatTransaction(transaction: ExactPartial<RpcTransaction>) {\r\n  const transaction_ = {\r\n    ...transaction,\r\n    blockHash: transaction.blockHash ? transaction.blockHash : null,\r\n    blockNumber: transaction.blockNumber\r\n      ? BigInt(transaction.blockNumber)\r\n      : null,\r\n    chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\r\n    gas: transaction.gas ? BigInt(transaction.gas) : undefined,\r\n    gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\r\n    maxFeePerBlobGas: transaction.maxFeePerBlobGas\r\n      ? BigInt(transaction.maxFeePerBlobGas)\r\n      : undefined,\r\n    maxFeePerGas: transaction.maxFeePerGas\r\n      ? BigInt(transaction.maxFeePerGas)\r\n      : undefined,\r\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\r\n      ? BigInt(transaction.maxPriorityFeePerGas)\r\n      : undefined,\r\n    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\r\n    to: transaction.to ? transaction.to : null,\r\n    transactionIndex: transaction.transactionIndex\r\n      ? Number(transaction.transactionIndex)\r\n      : null,\r\n    type: transaction.type\r\n      ? (transactionType as any)[transaction.type]\r\n      : undefined,\r\n    typeHex: transaction.type ? transaction.type : undefined,\r\n    value: transaction.value ? BigInt(transaction.value) : undefined,\r\n    v: transaction.v ? BigInt(transaction.v) : undefined,\r\n  } as Transaction\r\n\r\n  if (transaction.authorizationList)\r\n    transaction_.authorizationList = formatAuthorizationList(\r\n      transaction.authorizationList,\r\n    )\r\n\r\n  transaction_.yParity = (() => {\r\n    // If `yParity` is provided, we will use it.\r\n    if (transaction.yParity) return Number(transaction.yParity)\r\n\r\n    // If no `yParity` provided, try derive from `v`.\r\n    if (typeof transaction_.v === 'bigint') {\r\n      if (transaction_.v === 0n || transaction_.v === 27n) return 0\r\n      if (transaction_.v === 1n || transaction_.v === 28n) return 1\r\n      if (transaction_.v >= 35n) return transaction_.v % 2n === 0n ? 1 : 0\r\n    }\r\n\r\n    return undefined\r\n  })()\r\n\r\n  if (transaction_.type === 'legacy') {\r\n    delete transaction_.accessList\r\n    delete transaction_.maxFeePerBlobGas\r\n    delete transaction_.maxFeePerGas\r\n    delete transaction_.maxPriorityFeePerGas\r\n    delete transaction_.yParity\r\n  }\r\n  if (transaction_.type === 'eip2930') {\r\n    delete transaction_.maxFeePerBlobGas\r\n    delete transaction_.maxFeePerGas\r\n    delete transaction_.maxPriorityFeePerGas\r\n  }\r\n  if (transaction_.type === 'eip1559') {\r\n    delete transaction_.maxFeePerBlobGas\r\n  }\r\n  return transaction_\r\n}\r\n\r\nexport type DefineTransactionErrorType = DefineFormatterErrorType | ErrorType\r\n\r\nexport const defineTransaction = /*#__PURE__*/ defineFormatter(\r\n  'transaction',\r\n  formatTransaction,\r\n)\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction formatAuthorizationList(\r\n  authorizationList: RpcAuthorizationList,\r\n): SignedAuthorizationList {\r\n  return authorizationList.map((authorization) => ({\r\n    contractAddress: (authorization as any).address,\r\n    chainId: Number(authorization.chainId),\r\n    nonce: Number(authorization.nonce),\r\n    r: authorization.r,\r\n    s: authorization.s,\r\n    yParity: Number(authorization.yParity),\r\n  })) as SignedAuthorizationList\r\n}\r\n", "import type { ErrorType } from '../../errors/utils.js'\r\nimport type { Block, BlockTag } from '../../types/block.js'\r\nimport type { Chain } from '../../types/chain.js'\r\nimport type {\r\n  ExtractChainFormatterExclude,\r\n  ExtractChainFormatterReturnType,\r\n} from '../../types/chain.js'\r\nimport type { Hash } from '../../types/misc.js'\r\nimport type { RpcBlock } from '../../types/rpc.js'\r\nimport type { ExactPartial, Prettify } from '../../types/utils.js'\r\n\r\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\r\nimport { type FormattedTransaction, formatTransaction } from './transaction.js'\r\n\r\ntype BlockPendingDependencies = 'hash' | 'logsBloom' | 'nonce' | 'number'\r\n\r\nexport type FormattedBlock<\r\n  chain extends Chain | undefined = undefined,\r\n  includeTransactions extends boolean = boolean,\r\n  blockTag extends BlockTag = BlockTag,\r\n  _FormatterReturnType = ExtractChainFormatterReturnType<\r\n    chain,\r\n    'block',\r\n    Block<bigint, includeTransactions>\r\n  >,\r\n  _ExcludedPendingDependencies extends string = BlockPendingDependencies &\r\n    ExtractChainFormatterExclude<chain, 'block'>,\r\n  _Formatted = Omit<_FormatterReturnType, BlockPendingDependencies> & {\r\n    [_key in _ExcludedPendingDependencies]: never\r\n  } & Pick<\r\n      Block<bigint, includeTransactions, blockTag>,\r\n      BlockPendingDependencies\r\n    >,\r\n  _Transactions = includeTransactions extends true\r\n    ? Prettify<FormattedTransaction<chain, blockTag>>[]\r\n    : Hash[],\r\n> = Omit<_Formatted, 'transactions'> & {\r\n  transactions: _Transactions\r\n}\r\n\r\nexport type FormatBlockErrorType = ErrorType\r\n\r\nexport function formatBlock(block: ExactPartial<RpcBlock>) {\r\n  const transactions = (block.transactions ?? []).map((transaction) => {\r\n    if (typeof transaction === 'string') return transaction\r\n    return formatTransaction(transaction)\r\n  })\r\n  return {\r\n    ...block,\r\n    baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\r\n    blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\r\n    difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\r\n    excessBlobGas: block.excessBlobGas\r\n      ? BigInt(block.excessBlobGas)\r\n      : undefined,\r\n    gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\r\n    gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\r\n    hash: block.hash ? block.hash : null,\r\n    logsBloom: block.logsBloom ? block.logsBloom : null,\r\n    nonce: block.nonce ? block.nonce : null,\r\n    number: block.number ? BigInt(block.number) : null,\r\n    size: block.size ? BigInt(block.size) : undefined,\r\n    timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\r\n    transactions,\r\n    totalDifficulty: block.totalDifficulty\r\n      ? BigInt(block.totalDifficulty)\r\n      : null,\r\n  } as Block\r\n}\r\n\r\nexport type DefineBlockErrorType = DefineFormatterErrorType | ErrorType\r\n\r\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock)\r\n", "import type { Address } from 'abitype'\r\n\r\nimport type { Account } from '../../accounts/types.js'\r\nimport type { Client } from '../../clients/createClient.js'\r\nimport type { Transport } from '../../clients/transports/createTransport.js'\r\nimport type { ErrorType } from '../../errors/utils.js'\r\nimport type { BlockTag } from '../../types/block.js'\r\nimport type { Chain } from '../../types/chain.js'\r\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\r\nimport {\r\n  type HexToNumberErrorType,\r\n  hexToNumber,\r\n} from '../../utils/encoding/fromHex.js'\r\nimport {\r\n  type NumberToHexErrorType,\r\n  numberToHex,\r\n} from '../../utils/encoding/toHex.js'\r\n\r\nexport type GetTransactionCountParameters = {\r\n  /** The account address. */\r\n  address: Address\r\n} & (\r\n  | {\r\n      /** The block number. */\r\n      blockNumber?: bigint | undefined\r\n      blockTag?: undefined\r\n    }\r\n  | {\r\n      blockNumber?: undefined\r\n      /** The block tag. Defaults to 'latest'. */\r\n      blockTag?: BlockTag | undefined\r\n    }\r\n)\r\nexport type GetTransactionCountReturnType = number\r\n\r\nexport type GetTransactionCountErrorType =\r\n  | RequestErrorType\r\n  | NumberToHexErrorType\r\n  | HexToNumberErrorType\r\n  | ErrorType\r\n\r\n/**\r\n * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms#transaction) an Account has sent.\r\n *\r\n * - Docs: https://viem.sh/docs/actions/public/getTransactionCount\r\n * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\r\n *\r\n * @param client - Client to use\r\n * @param parameters - {@link GetTransactionCountParameters}\r\n * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\r\n *\r\n * @example\r\n * import { createPublicClient, http } from 'viem'\r\n * import { mainnet } from 'viem/chains'\r\n * import { getTransactionCount } from 'viem/public'\r\n *\r\n * const client = createPublicClient({\r\n *   chain: mainnet,\r\n *   transport: http(),\r\n * })\r\n * const transactionCount = await getTransactionCount(client, {\r\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\r\n * })\r\n */\r\nexport async function getTransactionCount<\r\n  chain extends Chain | undefined,\r\n  account extends Account | undefined,\r\n>(\r\n  client: Client<Transport, chain, account>,\r\n  { address, blockTag = 'latest', blockNumber }: GetTransactionCountParameters,\r\n): Promise<GetTransactionCountReturnType> {\r\n  const count = await client.request(\r\n    {\r\n      method: 'eth_getTransactionCount',\r\n      params: [address, blockNumber ? numberToHex(blockNumber) : blockTag],\r\n    },\r\n    { dedupe: Boolean(blockNumber) },\r\n  )\r\n  return hexToNumber(count)\r\n}\r\n", "// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\r\n\r\n/** Blob limit per transaction. */\r\nconst blobsPerTransaction = 6\r\n\r\n/** The number of bytes in a BLS scalar field element. */\r\nexport const bytesPerFieldElement = 32\r\n\r\n/** The number of field elements in a blob. */\r\nexport const fieldElementsPerBlob = 4096\r\n\r\n/** The number of bytes in a blob. */\r\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob\r\n\r\n/** Blob bytes limit per transaction. */\r\nexport const maxBytesPerTransaction =\r\n  bytesPerBlob * blobsPerTransaction -\r\n  // terminator byte (0x80).\r\n  1 -\r\n  // zero byte (0x00) appended to each field element.\r\n  1 * fieldElementsPerBlob * blobsPerTransaction\r\n", "import type { ErrorType } from '../../errors/utils.js'\r\nimport type { Log } from '../../types/log.js'\r\nimport type { RpcLog } from '../../types/rpc.js'\r\nimport type { ExactPartial } from '../../types/utils.js'\r\n\r\nexport type FormatLogErrorType = ErrorType\r\n\r\nexport function formatLog(\r\n  log: ExactPartial<RpcLog>,\r\n  {\r\n    args,\r\n    eventName,\r\n  }: { args?: unknown | undefined; eventName?: string | undefined } = {},\r\n) {\r\n  return {\r\n    ...log,\r\n    blockHash: log.blockHash ? log.blockHash : null,\r\n    blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\r\n    logIndex: log.logIndex ? Number(log.logIndex) : null,\r\n    transactionHash: log.transactionHash ? log.transactionHash : null,\r\n    transactionIndex: log.transactionIndex\r\n      ? Number(log.transactionIndex)\r\n      : null,\r\n    ...(eventName ? { args, eventName } : {}),\r\n  } as Log\r\n}\r\n", "import type { Address } from 'abitype'\r\n\r\nimport type { Account } from '../../accounts/types.js'\r\nimport {\r\n  type ParseAccountErrorType,\r\n  parseAccount,\r\n} from '../../accounts/utils/parseAccount.js'\r\nimport type { SignTransactionErrorType } from '../../accounts/utils/signTransaction.js'\r\nimport type { Client } from '../../clients/createClient.js'\r\nimport type { Transport } from '../../clients/transports/createTransport.js'\r\nimport {\r\n  AccountNotFoundError,\r\n  type AccountNotFoundErrorType,\r\n  AccountTypeNotSupportedError,\r\n  type AccountTypeNotSupportedErrorType,\r\n} from '../../errors/account.js'\r\nimport { BaseError } from '../../errors/base.js'\r\nimport type { ErrorType } from '../../errors/utils.js'\r\nimport {\r\n  type RecoverAuthorizationAddressErrorType,\r\n  recoverAuthorizationAddress,\r\n} from '../../experimental/eip7702/utils/recoverAuthorizationAddress.js'\r\nimport type { GetAccountParameter } from '../../types/account.js'\r\nimport type { Chain, DeriveChain } from '../../types/chain.js'\r\nimport type { GetChainParameter } from '../../types/chain.js'\r\nimport type { GetTransactionRequestKzgParameter } from '../../types/kzg.js'\r\nimport type { Hash } from '../../types/misc.js'\r\nimport type { TransactionRequest } from '../../types/transaction.js'\r\nimport type { UnionOmit } from '../../types/utils.js'\r\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\r\nimport {\r\n  type AssertCurrentChainErrorType,\r\n  assertCurrentChain,\r\n} from '../../utils/chain/assertCurrentChain.js'\r\nimport {\r\n  type GetTransactionErrorReturnType,\r\n  getTransactionError,\r\n} from '../../utils/errors/getTransactionError.js'\r\nimport { extract } from '../../utils/formatters/extract.js'\r\nimport {\r\n  type FormattedTransactionRequest,\r\n  formatTransactionRequest,\r\n} from '../../utils/formatters/transactionRequest.js'\r\nimport { getAction } from '../../utils/getAction.js'\r\nimport { LruMap } from '../../utils/lru.js'\r\nimport {\r\n  type AssertRequestErrorType,\r\n  type AssertRequestParameters,\r\n  assertRequest,\r\n} from '../../utils/transaction/assertRequest.js'\r\nimport { type GetChainIdErrorType, getChainId } from '../public/getChainId.js'\r\nimport {\r\n  type PrepareTransactionRequestErrorType,\r\n  defaultParameters,\r\n  prepareTransactionRequest,\r\n} from './prepareTransactionRequest.js'\r\nimport {\r\n  type SendRawTransactionErrorType,\r\n  sendRawTransaction,\r\n} from './sendRawTransaction.js'\r\n\r\nconst supportsWalletNamespace = new LruMap<boolean>(128)\r\n\r\nexport type SendTransactionRequest<\r\n  chain extends Chain | undefined = Chain | undefined,\r\n  chainOverride extends Chain | undefined = Chain | undefined,\r\n  ///\r\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\r\n> = UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'> &\r\n  GetTransactionRequestKzgParameter\r\n\r\nexport type SendTransactionParameters<\r\n  chain extends Chain | undefined = Chain | undefined,\r\n  account extends Account | undefined = Account | undefined,\r\n  chainOverride extends Chain | undefined = Chain | undefined,\r\n  request extends SendTransactionRequest<\r\n    chain,\r\n    chainOverride\r\n  > = SendTransactionRequest<chain, chainOverride>,\r\n> = request &\r\n  GetAccountParameter<account, Account | Address, true, true> &\r\n  GetChainParameter<chain, chainOverride> &\r\n  GetTransactionRequestKzgParameter<request>\r\n\r\nexport type SendTransactionReturnType = Hash\r\n\r\nexport type SendTransactionErrorType =\r\n  | ParseAccountErrorType\r\n  | GetTransactionErrorReturnType<\r\n      | AccountNotFoundErrorType\r\n      | AccountTypeNotSupportedErrorType\r\n      | AssertCurrentChainErrorType\r\n      | AssertRequestErrorType\r\n      | GetChainIdErrorType\r\n      | PrepareTransactionRequestErrorType\r\n      | SendRawTransactionErrorType\r\n      | RecoverAuthorizationAddressErrorType\r\n      | SignTransactionErrorType\r\n      | RequestErrorType\r\n    >\r\n  | ErrorType\r\n\r\n/**\r\n * Creates, signs, and sends a new transaction to the network.\r\n *\r\n * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction\r\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\r\n * - JSON-RPC Methods:\r\n *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\r\n *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\r\n *\r\n * @param client - Client to use\r\n * @param parameters - {@link SendTransactionParameters}\r\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\r\n *\r\n * @example\r\n * import { createWalletClient, custom } from 'viem'\r\n * import { mainnet } from 'viem/chains'\r\n * import { sendTransaction } from 'viem/wallet'\r\n *\r\n * const client = createWalletClient({\r\n *   chain: mainnet,\r\n *   transport: custom(window.ethereum),\r\n * })\r\n * const hash = await sendTransaction(client, {\r\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\r\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\r\n *   value: 1000000000000000000n,\r\n * })\r\n *\r\n * @example\r\n * // Account Hoisting\r\n * import { createWalletClient, http } from 'viem'\r\n * import { privateKeyToAccount } from 'viem/accounts'\r\n * import { mainnet } from 'viem/chains'\r\n * import { sendTransaction } from 'viem/wallet'\r\n *\r\n * const client = createWalletClient({\r\n *   account: privateKeyToAccount('0x…'),\r\n *   chain: mainnet,\r\n *   transport: http(),\r\n * })\r\n * const hash = await sendTransaction(client, {\r\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\r\n *   value: 1000000000000000000n,\r\n * })\r\n */\r\nexport async function sendTransaction<\r\n  chain extends Chain | undefined,\r\n  account extends Account | undefined,\r\n  const request extends SendTransactionRequest<chain, chainOverride>,\r\n  chainOverride extends Chain | undefined = undefined,\r\n>(\r\n  client: Client<Transport, chain, account>,\r\n  parameters: SendTransactionParameters<chain, account, chainOverride, request>,\r\n): Promise<SendTransactionReturnType> {\r\n  const {\r\n    account: account_ = client.account,\r\n    chain = client.chain,\r\n    accessList,\r\n    authorizationList,\r\n    blobs,\r\n    data,\r\n    gas,\r\n    gasPrice,\r\n    maxFeePerBlobGas,\r\n    maxFeePerGas,\r\n    maxPriorityFeePerGas,\r\n    nonce,\r\n    value,\r\n    ...rest\r\n  } = parameters\r\n\r\n  if (typeof account_ === 'undefined')\r\n    throw new AccountNotFoundError({\r\n      docsPath: '/docs/actions/wallet/sendTransaction',\r\n    })\r\n  const account = account_ ? parseAccount(account_) : null\r\n\r\n  try {\r\n    assertRequest(parameters as AssertRequestParameters)\r\n\r\n    const to = await (async () => {\r\n      // If `to` exists on the parameters, use that.\r\n      if (parameters.to) return parameters.to\r\n\r\n      // If no `to` exists, and we are sending a EIP-7702 transaction, use the\r\n      // address of the first authorization in the list.\r\n      if (authorizationList && authorizationList.length > 0)\r\n        return await recoverAuthorizationAddress({\r\n          authorization: authorizationList[0],\r\n        }).catch(() => {\r\n          throw new BaseError(\r\n            '`to` is required. Could not infer from `authorizationList`.',\r\n          )\r\n        })\r\n\r\n      // Otherwise, we are sending a deployment transaction.\r\n      return undefined\r\n    })()\r\n\r\n    if (account?.type === 'json-rpc' || account === null) {\r\n      let chainId: number | undefined\r\n      if (chain !== null) {\r\n        chainId = await getAction(client, getChainId, 'getChainId')({})\r\n        assertCurrentChain({\r\n          currentChainId: chainId,\r\n          chain,\r\n        })\r\n      }\r\n\r\n      const chainFormat = client.chain?.formatters?.transactionRequest?.format\r\n      const format = chainFormat || formatTransactionRequest\r\n\r\n      const request = format({\r\n        // Pick out extra data that might exist on the chain's transaction request type.\r\n        ...extract(rest, { format: chainFormat }),\r\n        accessList,\r\n        authorizationList,\r\n        blobs,\r\n        chainId,\r\n        data,\r\n        from: account?.address,\r\n        gas,\r\n        gasPrice,\r\n        maxFeePerBlobGas,\r\n        maxFeePerGas,\r\n        maxPriorityFeePerGas,\r\n        nonce,\r\n        to,\r\n        value,\r\n      } as TransactionRequest)\r\n\r\n      const isWalletNamespaceSupported = supportsWalletNamespace.get(client.uid)\r\n      const method = isWalletNamespaceSupported\r\n        ? 'wallet_sendTransaction'\r\n        : 'eth_sendTransaction'\r\n\r\n      try {\r\n        return await client.request(\r\n          {\r\n            method,\r\n            params: [request],\r\n          },\r\n          { retryCount: 0 },\r\n        )\r\n      } catch (e) {\r\n        if (isWalletNamespaceSupported === false) throw e\r\n\r\n        const error = e as BaseError\r\n        // If the transport does not support the method or input, attempt to use the\r\n        // `wallet_sendTransaction` method.\r\n        if (\r\n          error.name === 'InvalidInputRpcError' ||\r\n          error.name === 'InvalidParamsRpcError' ||\r\n          error.name === 'MethodNotFoundRpcError' ||\r\n          error.name === 'MethodNotSupportedRpcError'\r\n        ) {\r\n          return await client\r\n            .request(\r\n              {\r\n                method: 'wallet_sendTransaction',\r\n                params: [request],\r\n              },\r\n              { retryCount: 0 },\r\n            )\r\n            .then((hash) => {\r\n              supportsWalletNamespace.set(client.uid, true)\r\n              return hash\r\n            })\r\n            .catch((e) => {\r\n              const walletNamespaceError = e as BaseError\r\n              if (\r\n                walletNamespaceError.name === 'MethodNotFoundRpcError' ||\r\n                walletNamespaceError.name === 'MethodNotSupportedRpcError'\r\n              ) {\r\n                supportsWalletNamespace.set(client.uid, false)\r\n                throw error\r\n              }\r\n\r\n              throw walletNamespaceError\r\n            })\r\n        }\r\n\r\n        throw error\r\n      }\r\n    }\r\n\r\n    if (account?.type === 'local') {\r\n      // Prepare the request for signing (assign appropriate fees, etc.)\r\n      const request = await getAction(\r\n        client,\r\n        prepareTransactionRequest,\r\n        'prepareTransactionRequest',\r\n      )({\r\n        account,\r\n        accessList,\r\n        authorizationList,\r\n        blobs,\r\n        chain,\r\n        data,\r\n        gas,\r\n        gasPrice,\r\n        maxFeePerBlobGas,\r\n        maxFeePerGas,\r\n        maxPriorityFeePerGas,\r\n        nonce,\r\n        nonceManager: account.nonceManager,\r\n        parameters: [...defaultParameters, 'sidecars'],\r\n        value,\r\n        ...rest,\r\n        to,\r\n      } as any)\r\n\r\n      const serializer = chain?.serializers?.transaction\r\n      const serializedTransaction = (await account.signTransaction(request, {\r\n        serializer,\r\n      })) as Hash\r\n      return await getAction(\r\n        client,\r\n        sendRawTransaction,\r\n        'sendRawTransaction',\r\n      )({\r\n        serializedTransaction,\r\n      })\r\n    }\r\n\r\n    if (account?.type === 'smart')\r\n      throw new AccountTypeNotSupportedError({\r\n        metaMessages: [\r\n          'Consider using the `sendUserOperation` Action instead.',\r\n        ],\r\n        docsPath: '/docs/actions/bundler/sendUserOperation',\r\n        type: 'smart',\r\n      })\r\n\r\n    throw new AccountTypeNotSupportedError({\r\n      docsPath: '/docs/actions/wallet/sendTransaction',\r\n      type: (account as any)?.type,\r\n    })\r\n  } catch (err) {\r\n    if (err instanceof AccountTypeNotSupportedError) throw err\r\n    throw getTransactionError(err as BaseError, {\r\n      ...parameters,\r\n      account,\r\n      chain: parameters.chain || undefined,\r\n    })\r\n  }\r\n}\r\n", "import { LruMap } from '../lru.js'\r\n\r\n/** @internal */\r\nexport const promiseCache = /*#__PURE__*/ new LruMap<Promise<any>>(8192)\r\n\r\ntype WithDedupeOptions = {\r\n  enabled?: boolean | undefined\r\n  id?: string | undefined\r\n}\r\n\r\n/** Deduplicates in-flight promises. */\r\nexport function withDedupe<data>(\r\n  fn: () => Promise<data>,\r\n  { enabled = true, id }: WithDedupeOptions,\r\n): Promise<data> {\r\n  if (!enabled || !id) return fn()\r\n  if (promiseCache.get(id)) return promiseCache.get(id)!\r\n  const promise = fn().finally(() => promiseCache.delete(id))\r\n  promiseCache.set(id, promise)\r\n  return promise\r\n}\r\n", "function createIdStore() {\r\n  return {\r\n    current: 0,\r\n    take() {\r\n      return this.current++\r\n    },\r\n    reset() {\r\n      this.current = 0\r\n    },\r\n  }\r\n}\r\n\r\nexport const idCache = /*#__PURE__*/ createIdStore()\r\n", "import type { ErrorType } from '../../errors/utils.js'\r\nimport type {\r\n  Chain,\r\n  ExtractChainFormatterReturnType,\r\n} from '../../types/chain.js'\r\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\r\nimport type { TransactionReceipt } from '../../types/transaction.js'\r\nimport type { ExactPartial } from '../../types/utils.js'\r\nimport { hexToNumber } from '../encoding/fromHex.js'\r\n\r\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\r\nimport { formatLog } from './log.js'\r\nimport { transactionType } from './transaction.js'\r\n\r\nexport type FormattedTransactionReceipt<\r\n  chain extends Chain | undefined = undefined,\r\n> = ExtractChainFormatterReturnType<\r\n  chain,\r\n  'transactionReceipt',\r\n  TransactionReceipt\r\n>\r\n\r\nexport const receiptStatuses = {\r\n  '0x0': 'reverted',\r\n  '0x1': 'success',\r\n} as const\r\n\r\nexport type FormatTransactionReceiptErrorType = ErrorType\r\n\r\nexport function formatTransactionReceipt(\r\n  transactionReceipt: ExactPartial<RpcTransactionReceipt>,\r\n) {\r\n  const receipt = {\r\n    ...transactionReceipt,\r\n    blockNumber: transactionReceipt.blockNumber\r\n      ? BigInt(transactionReceipt.blockNumber)\r\n      : null,\r\n    contractAddress: transactionReceipt.contractAddress\r\n      ? transactionReceipt.contractAddress\r\n      : null,\r\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\r\n      ? BigInt(transactionReceipt.cumulativeGasUsed)\r\n      : null,\r\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice\r\n      ? BigInt(transactionReceipt.effectiveGasPrice)\r\n      : null,\r\n    gasUsed: transactionReceipt.gasUsed\r\n      ? BigInt(transactionReceipt.gasUsed)\r\n      : null,\r\n    logs: transactionReceipt.logs\r\n      ? transactionReceipt.logs.map((log) => formatLog(log))\r\n      : null,\r\n    to: transactionReceipt.to ? transactionReceipt.to : null,\r\n    transactionIndex: transactionReceipt.transactionIndex\r\n      ? hexToNumber(transactionReceipt.transactionIndex)\r\n      : null,\r\n    status: transactionReceipt.status\r\n      ? receiptStatuses[transactionReceipt.status]\r\n      : null,\r\n    type: transactionReceipt.type\r\n      ? transactionType[\r\n          transactionReceipt.type as keyof typeof transactionType\r\n        ] || transactionReceipt.type\r\n      : null,\r\n  } as TransactionReceipt\r\n\r\n  if (transactionReceipt.blobGasPrice)\r\n    receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice)\r\n  if (transactionReceipt.blobGasUsed)\r\n    receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed)\r\n\r\n  return receipt\r\n}\r\n\r\nexport type DefineTransactionReceiptErrorType =\r\n  | DefineFormatterErrorType\r\n  | ErrorType\r\n\r\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter(\r\n  'transactionReceipt',\r\n  formatTransactionReceipt,\r\n)\r\n", "import type { Address } from 'abitype'\r\n\r\nimport { getTransactionCount } from '../actions/public/getTransactionCount.js'\r\nimport type { Client } from '../clients/createClient.js'\r\nimport type { MaybePromise } from '../types/utils.js'\r\nimport { LruMap } from './lru.js'\r\n\r\nexport type CreateNonceManagerParameters = {\r\n  source: NonceManagerSource\r\n}\r\n\r\ntype FunctionParameters = {\r\n  address: Address\r\n  chainId: number\r\n}\r\n\r\nexport type NonceManager = {\r\n  /** Get and increment a nonce. */\r\n  consume: (\r\n    parameters: FunctionParameters & { client: Client },\r\n  ) => Promise<number>\r\n  /** Increment a nonce. */\r\n  increment: (chainId: FunctionParameters) => void\r\n  /** Get a nonce. */\r\n  get: (chainId: FunctionParameters & { client: Client }) => Promise<number>\r\n  /** Reset a nonce. */\r\n  reset: (chainId: FunctionParameters) => void\r\n}\r\n\r\n/**\r\n * Creates a nonce manager for auto-incrementing transaction nonces.\r\n *\r\n * - Docs: https://viem.sh/docs/accounts/createNonceManager\r\n *\r\n * @example\r\n * ```ts\r\n * const nonceManager = createNonceManager({\r\n *   source: jsonRpc(),\r\n * })\r\n * ```\r\n */\r\nexport function createNonceManager(\r\n  parameters: CreateNonceManagerParameters,\r\n): NonceManager {\r\n  const { source } = parameters\r\n\r\n  const deltaMap = new Map()\r\n  const nonceMap = new LruMap<number>(8192)\r\n  const promiseMap = new Map<string, Promise<number>>()\r\n\r\n  const getKey = ({ address, chainId }: FunctionParameters) =>\r\n    `${address}.${chainId}`\r\n\r\n  return {\r\n    async consume({ address, chainId, client }) {\r\n      const key = getKey({ address, chainId })\r\n      const promise = this.get({ address, chainId, client })\r\n\r\n      this.increment({ address, chainId })\r\n      const nonce = await promise\r\n\r\n      await source.set({ address, chainId }, nonce)\r\n      nonceMap.set(key, nonce)\r\n\r\n      return nonce\r\n    },\r\n    async increment({ address, chainId }) {\r\n      const key = getKey({ address, chainId })\r\n      const delta = deltaMap.get(key) ?? 0\r\n      deltaMap.set(key, delta + 1)\r\n    },\r\n    async get({ address, chainId, client }) {\r\n      const key = getKey({ address, chainId })\r\n\r\n      let promise = promiseMap.get(key)\r\n      if (!promise) {\r\n        promise = (async () => {\r\n          try {\r\n            const nonce = await source.get({ address, chainId, client })\r\n            const previousNonce = nonceMap.get(key) ?? 0\r\n            if (previousNonce > 0 && nonce <= previousNonce)\r\n              return previousNonce + 1\r\n            nonceMap.delete(key)\r\n            return nonce\r\n          } finally {\r\n            this.reset({ address, chainId })\r\n          }\r\n        })()\r\n        promiseMap.set(key, promise)\r\n      }\r\n\r\n      const delta = deltaMap.get(key) ?? 0\r\n      return delta + (await promise)\r\n    },\r\n    reset({ address, chainId }) {\r\n      const key = getKey({ address, chainId })\r\n      deltaMap.delete(key)\r\n      promiseMap.delete(key)\r\n    },\r\n  }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////\r\n// Sources\r\n\r\nexport type NonceManagerSource = {\r\n  /** Get a nonce. */\r\n  get(parameters: FunctionParameters & { client: Client }): MaybePromise<number>\r\n  /** Set a nonce. */\r\n  set(parameters: FunctionParameters, nonce: number): MaybePromise<void>\r\n}\r\n\r\n/** JSON-RPC source for a nonce manager. */\r\nexport function jsonRpc(): NonceManagerSource {\r\n  return {\r\n    async get(parameters) {\r\n      const { address, client } = parameters\r\n      return getTransactionCount(client, {\r\n        address,\r\n        blockTag: 'pending',\r\n      })\r\n    },\r\n    set() {},\r\n  }\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////\r\n// Default\r\n\r\n/** Default Nonce Manager with a JSON-RPC source. */\r\nexport const nonceManager = /*#__PURE__*/ createNonceManager({\r\n  source: jsonRpc(),\r\n})\r\n", "/** @internal */\r\nexport const version = '0.1.1'\r\n", "import { version } from '../version.js'\r\n\r\n/** @internal */\r\nexport function getUrl(url: string) {\r\n  return url\r\n}\r\n\r\n/** @internal */\r\nexport function getVersion() {\r\n  return version\r\n}\r\n\r\n/** @internal */\r\nexport function prettyPrint(args: unknown) {\r\n  if (!args) return ''\r\n  const entries = Object.entries(args)\r\n    .map(([key, value]) => {\r\n      if (value === undefined || value === false) return null\r\n      return [key, value]\r\n    })\r\n    .filter(Boolean) as [string, string][]\r\n  const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0)\r\n  return entries\r\n    .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\r\n    .join('\\n')\r\n}\r\n", "import { getVersion } from './internal/errors.js'\r\n\r\nexport type GlobalErrorType<name extends string = 'Error'> = Error & {\r\n  name: name\r\n}\r\n\r\n/**\r\n * Base error class inherited by all errors thrown by ox.\r\n *\r\n * @example\r\n * ```ts\r\n * import { Errors } from 'ox'\r\n * throw new Errors.BaseError('An error occurred')\r\n * ```\r\n */\r\nexport class BaseError<\r\n  cause extends Error | undefined = undefined,\r\n> extends Error {\r\n  details: string\r\n  docs?: string | undefined\r\n  docsPath?: string | undefined\r\n  shortMessage: string\r\n\r\n  override cause: cause\r\n  override name = 'BaseError'\r\n\r\n  version = `ox@${getVersion()}`\r\n\r\n  constructor(shortMessage: string, options: BaseError.Options<cause> = {}) {\r\n    const details = (() => {\r\n      if (options.cause instanceof BaseError) {\r\n        if (options.cause.details) return options.cause.details\r\n        if (options.cause.shortMessage) return options.cause.shortMessage\r\n      }\r\n      if (options.cause?.message) return options.cause.message\r\n      return options.details!\r\n    })()\r\n    const docsPath = (() => {\r\n      if (options.cause instanceof BaseError)\r\n        return options.cause.docsPath || options.docsPath\r\n      return options.docsPath\r\n    })()\r\n\r\n    const docsBaseUrl = 'https://oxlib.sh'\r\n    const docs = `${docsBaseUrl}${docsPath ?? ''}`\r\n\r\n    const message = [\r\n      shortMessage || 'An error occurred.',\r\n      ...(options.metaMessages ? ['', ...options.metaMessages] : []),\r\n      ...(details || docsPath\r\n        ? [\r\n            '',\r\n            details ? `Details: ${details}` : undefined,\r\n            docsPath ? `See: ${docs}` : undefined,\r\n          ]\r\n        : []),\r\n    ]\r\n      .filter((x) => typeof x === 'string')\r\n      .join('\\n')\r\n\r\n    super(message, options.cause ? { cause: options.cause } : undefined)\r\n\r\n    this.cause = options.cause as any\r\n    this.details = details\r\n    this.docs = docs\r\n    this.docsPath = docsPath\r\n    this.shortMessage = shortMessage\r\n  }\r\n\r\n  walk(): Error\r\n  walk(fn: (err: unknown) => boolean): Error | null\r\n  walk(fn?: any): any {\r\n    return walk(this, fn)\r\n  }\r\n}\r\n\r\nexport declare namespace BaseError {\r\n  type Options<cause extends Error | undefined = Error | undefined> = {\r\n    cause?: cause | undefined\r\n    details?: string | undefined\r\n    docsPath?: string | undefined\r\n    metaMessages?: (string | undefined)[] | undefined\r\n  }\r\n}\r\n\r\n/** @internal */\r\nfunction walk(\r\n  err: unknown,\r\n  fn?: ((err: unknown) => boolean) | undefined,\r\n): unknown {\r\n  if (fn?.(err)) return err\r\n  if (err && typeof err === 'object' && 'cause' in err && err.cause)\r\n    return walk(err.cause, fn)\r\n  return fn ? null : err\r\n}\r\n", "import * as Bytes from '../Bytes.js'\r\nimport type * as Errors from '../Errors.js'\r\n\r\n/** @internal */\r\nexport function assertSize(bytes: Bytes.Bytes, size_: number): void {\r\n  if (Bytes.size(bytes) > size_)\r\n    throw new Bytes.SizeOverflowError({\r\n      givenSize: Bytes.size(bytes),\r\n      maxSize: size_,\r\n    })\r\n}\r\n\r\n/** @internal */\r\nexport declare namespace assertSize {\r\n  type ErrorType =\r\n    | Bytes.size.ErrorType\r\n    | Bytes.SizeOverflowError\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/** @internal */\r\nexport function assertStartOffset(\r\n  value: Bytes.Bytes,\r\n  start?: number | undefined,\r\n) {\r\n  if (typeof start === 'number' && start > 0 && start > Bytes.size(value) - 1)\r\n    throw new Bytes.SliceOffsetOutOfBoundsError({\r\n      offset: start,\r\n      position: 'start',\r\n      size: Bytes.size(value),\r\n    })\r\n}\r\n\r\nexport declare namespace assertStartOffset {\r\n  export type ErrorType =\r\n    | Bytes.SliceOffsetOutOfBoundsError\r\n    | Bytes.size.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/** @internal */\r\nexport function assertEndOffset(\r\n  value: Bytes.Bytes,\r\n  start?: number | undefined,\r\n  end?: number | undefined,\r\n) {\r\n  if (\r\n    typeof start === 'number' &&\r\n    typeof end === 'number' &&\r\n    Bytes.size(value) !== end - start\r\n  ) {\r\n    throw new Bytes.SliceOffsetOutOfBoundsError({\r\n      offset: end,\r\n      position: 'end',\r\n      size: Bytes.size(value),\r\n    })\r\n  }\r\n}\r\n\r\n/** @internal */\r\nexport declare namespace assertEndOffset {\r\n  type ErrorType =\r\n    | Bytes.SliceOffsetOutOfBoundsError\r\n    | Bytes.size.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/** @internal */\r\nexport const charCodeMap = {\r\n  zero: 48,\r\n  nine: 57,\r\n  A: 65,\r\n  F: 70,\r\n  a: 97,\r\n  f: 102,\r\n} as const\r\n\r\n/** @internal */\r\nexport function charCodeToBase16(char: number) {\r\n  if (char >= charCodeMap.zero && char <= charCodeMap.nine)\r\n    return char - charCodeMap.zero\r\n  if (char >= charCodeMap.A && char <= charCodeMap.F)\r\n    return char - (charCodeMap.A - 10)\r\n  if (char >= charCodeMap.a && char <= charCodeMap.f)\r\n    return char - (charCodeMap.a - 10)\r\n  return undefined\r\n}\r\n\r\n/** @internal */\r\nexport function pad(bytes: Bytes.Bytes, options: pad.Options = {}) {\r\n  const { dir, size = 32 } = options\r\n  if (size === 0) return bytes\r\n  if (bytes.length > size)\r\n    throw new Bytes.SizeExceedsPaddingSizeError({\r\n      size: bytes.length,\r\n      targetSize: size,\r\n      type: 'Bytes',\r\n    })\r\n  const paddedBytes = new Uint8Array(size)\r\n  for (let i = 0; i < size; i++) {\r\n    const padEnd = dir === 'right'\r\n    paddedBytes[padEnd ? i : size - i - 1] =\r\n      bytes[padEnd ? i : bytes.length - i - 1]!\r\n  }\r\n  return paddedBytes\r\n}\r\n\r\n/** @internal */\r\nexport declare namespace pad {\r\n  type Options = {\r\n    dir?: 'left' | 'right' | undefined\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ReturnType = Bytes.Bytes\r\n\r\n  type ErrorType = Bytes.SizeExceedsPaddingSizeError | Errors.GlobalErrorType\r\n}\r\n\r\n/** @internal */\r\nexport function trim(\r\n  value: Bytes.Bytes,\r\n  options: trim.Options = {},\r\n): trim.ReturnType {\r\n  const { dir = 'left' } = options\r\n\r\n  let data = value\r\n\r\n  let sliceLength = 0\r\n  for (let i = 0; i < data.length - 1; i++) {\r\n    if (data[dir === 'left' ? i : data.length - i - 1]!.toString() === '0')\r\n      sliceLength++\r\n    else break\r\n  }\r\n  data =\r\n    dir === 'left'\r\n      ? data.slice(sliceLength)\r\n      : data.slice(0, data.length - sliceLength)\r\n\r\n  return data as trim.ReturnType\r\n}\r\n\r\n/** @internal */\r\nexport declare namespace trim {\r\n  type Options = {\r\n    dir?: 'left' | 'right' | undefined\r\n  }\r\n\r\n  type ReturnType = Bytes.Bytes\r\n\r\n  type ErrorType = Errors.GlobalErrorType\r\n}\r\n", "import type * as Errors from '../Errors.js'\r\nimport * as Hex from '../Hex.js'\r\n\r\n/** @internal */\r\nexport function assertSize(hex: Hex.Hex, size_: number): void {\r\n  if (Hex.size(hex) > size_)\r\n    throw new Hex.SizeOverflowError({\r\n      givenSize: Hex.size(hex),\r\n      maxSize: size_,\r\n    })\r\n}\r\n\r\n/** @internal */\r\nexport declare namespace assertSize {\r\n  type ErrorType =\r\n    | Hex.size.ErrorType\r\n    | Hex.SizeOverflowError\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/** @internal */\r\nexport function assertStartOffset(value: Hex.Hex, start?: number | undefined) {\r\n  if (typeof start === 'number' && start > 0 && start > Hex.size(value) - 1)\r\n    throw new Hex.SliceOffsetOutOfBoundsError({\r\n      offset: start,\r\n      position: 'start',\r\n      size: Hex.size(value),\r\n    })\r\n}\r\n\r\nexport declare namespace assertStartOffset {\r\n  type ErrorType =\r\n    | Hex.SliceOffsetOutOfBoundsError\r\n    | Hex.size.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/** @internal */\r\nexport function assertEndOffset(\r\n  value: Hex.Hex,\r\n  start?: number | undefined,\r\n  end?: number | undefined,\r\n) {\r\n  if (\r\n    typeof start === 'number' &&\r\n    typeof end === 'number' &&\r\n    Hex.size(value) !== end - start\r\n  ) {\r\n    throw new Hex.SliceOffsetOutOfBoundsError({\r\n      offset: end,\r\n      position: 'end',\r\n      size: Hex.size(value),\r\n    })\r\n  }\r\n}\r\n\r\nexport declare namespace assertEndOffset {\r\n  type ErrorType =\r\n    | Hex.SliceOffsetOutOfBoundsError\r\n    | Hex.size.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/** @internal */\r\nexport function pad(hex_: Hex.Hex, options: pad.Options = {}) {\r\n  const { dir, size = 32 } = options\r\n\r\n  if (size === 0) return hex_\r\n\r\n  const hex = hex_.replace('0x', '')\r\n  if (hex.length > size * 2)\r\n    throw new Hex.SizeExceedsPaddingSizeError({\r\n      size: Math.ceil(hex.length / 2),\r\n      targetSize: size,\r\n      type: 'Hex',\r\n    })\r\n\r\n  return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}` as Hex.Hex\r\n}\r\n\r\n/** @internal */\r\nexport declare namespace pad {\r\n  type Options = {\r\n    dir?: 'left' | 'right' | undefined\r\n    size?: number | undefined\r\n  }\r\n  type ErrorType = Hex.SizeExceedsPaddingSizeError | Errors.GlobalErrorType\r\n}\r\n\r\n/** @internal */\r\nexport function trim(\r\n  value: Hex.Hex,\r\n  options: trim.Options = {},\r\n): trim.ReturnType {\r\n  const { dir = 'left' } = options\r\n\r\n  let data = value.replace('0x', '')\r\n\r\n  let sliceLength = 0\r\n  for (let i = 0; i < data.length - 1; i++) {\r\n    if (data[dir === 'left' ? i : data.length - i - 1]!.toString() === '0')\r\n      sliceLength++\r\n    else break\r\n  }\r\n  data =\r\n    dir === 'left'\r\n      ? data.slice(sliceLength)\r\n      : data.slice(0, data.length - sliceLength)\r\n\r\n  if (data === '0') return '0x'\r\n  if (dir === 'right' && data.length % 2 === 1) return `0x${data}0`\r\n  return `0x${data}` as trim.ReturnType\r\n}\r\n\r\n/** @internal */\r\nexport declare namespace trim {\r\n  type Options = {\r\n    dir?: 'left' | 'right' | undefined\r\n  }\r\n\r\n  type ReturnType = Hex.Hex\r\n\r\n  type ErrorType = Errors.GlobalErrorType\r\n}\r\n", "import { equalBytes } from '@noble/curves/abstract/utils'\r\nimport * as Errors from './Errors.js'\r\nimport * as Hex from './Hex.js'\r\nimport * as Json from './Json.js'\r\nimport * as internal from './internal/bytes.js'\r\nimport * as internal_hex from './internal/hex.js'\r\n\r\nconst decoder = /*#__PURE__*/ new TextDecoder()\r\nconst encoder = /*#__PURE__*/ new TextEncoder()\r\n\r\n/** Root type for a Bytes array. */\r\nexport type Bytes = Uint8Array\r\n\r\n/**\r\n * Asserts if the given value is {@link ox#Bytes.Bytes}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.assert('abc')\r\n * // @error: Bytes.InvalidBytesTypeError:\r\n * // @error: Value `\"abc\"` of type `string` is an invalid Bytes value.\r\n * // @error: Bytes values must be of type `Uint8Array`.\r\n * ```\r\n *\r\n * @param value - Value to assert.\r\n */\r\nexport function assert(value: unknown): asserts value is Bytes {\r\n  if (value instanceof Uint8Array) return\r\n  if (!value) throw new InvalidBytesTypeError(value)\r\n  if (typeof value !== 'object') throw new InvalidBytesTypeError(value)\r\n  if (!('BYTES_PER_ELEMENT' in value)) throw new InvalidBytesTypeError(value)\r\n  if (value.BYTES_PER_ELEMENT !== 1 || value.constructor.name !== 'Uint8Array')\r\n    throw new InvalidBytesTypeError(value)\r\n}\r\n\r\nexport declare namespace assert {\r\n  type ErrorType = InvalidBytesTypeError | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Concatenates two or more {@link ox#Bytes.Bytes}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * const bytes = Bytes.concat(\r\n *   Bytes.from([1]),\r\n *   Bytes.from([69]),\r\n *   Bytes.from([420, 69]),\r\n * )\r\n * // @log: Uint8Array [ 1, 69, 420, 69 ]\r\n * ```\r\n *\r\n * @param values - Values to concatenate.\r\n * @returns Concatenated {@link ox#Bytes.Bytes}.\r\n */\r\nexport function concat(...values: readonly Bytes[]): Bytes {\r\n  let length = 0\r\n  for (const arr of values) {\r\n    length += arr.length\r\n  }\r\n  const result = new Uint8Array(length)\r\n  for (let i = 0, index = 0; i < values.length; i++) {\r\n    const arr = values[i]\r\n    result.set(arr!, index)\r\n    index += arr!.length\r\n  }\r\n  return result\r\n}\r\n\r\nexport declare namespace concat {\r\n  type ErrorType = Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Instantiates a {@link ox#Bytes.Bytes} value from a `Uint8Array`, a hex string, or an array of unsigned 8-bit integers.\r\n *\r\n * :::tip\r\n *\r\n * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:\r\n *\r\n * - `Bytes.fromBoolean`\r\n *\r\n * - `Bytes.fromString`\r\n *\r\n * - `Bytes.fromNumber`\r\n *\r\n * :::\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * // @noErrors\r\n * import { Bytes } from 'ox'\r\n *\r\n * const data = Bytes.from([255, 124, 5, 4])\r\n * // @log: Uint8Array([255, 124, 5, 4])\r\n *\r\n * const data = Bytes.from('0xdeadbeef')\r\n * // @log: Uint8Array([222, 173, 190, 239])\r\n * ```\r\n *\r\n * @param value - Value to convert.\r\n * @returns A {@link ox#Bytes.Bytes} instance.\r\n */\r\nexport function from(value: Hex.Hex | Bytes | readonly number[]): Bytes {\r\n  if (value instanceof Uint8Array) return value\r\n  if (typeof value === 'string') return fromHex(value)\r\n  return fromArray(value)\r\n}\r\n\r\nexport declare namespace from {\r\n  type ErrorType =\r\n    | fromHex.ErrorType\r\n    | fromArray.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Converts an array of unsigned 8-bit integers into {@link ox#Bytes.Bytes}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * const data = Bytes.fromArray([255, 124, 5, 4])\r\n * // @log: Uint8Array([255, 124, 5, 4])\r\n * ```\r\n *\r\n * @param value - Value to convert.\r\n * @returns A {@link ox#Bytes.Bytes} instance.\r\n */\r\nexport function fromArray(value: readonly number[] | Uint8Array): Bytes {\r\n  return value instanceof Uint8Array ? value : new Uint8Array(value)\r\n}\r\n\r\nexport declare namespace fromArray {\r\n  type ErrorType = Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Encodes a boolean value into {@link ox#Bytes.Bytes}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * const data = Bytes.fromBoolean(true)\r\n * // @log: Uint8Array([1])\r\n * ```\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * const data = Bytes.fromBoolean(true, { size: 32 })\r\n * // @log: Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\r\n * ```\r\n *\r\n * @param value - Boolean value to encode.\r\n * @param options - Encoding options.\r\n * @returns Encoded {@link ox#Bytes.Bytes}.\r\n */\r\nexport function fromBoolean(value: boolean, options: fromBoolean.Options = {}) {\r\n  const { size } = options\r\n  const bytes = new Uint8Array(1)\r\n  bytes[0] = Number(value)\r\n  if (typeof size === 'number') {\r\n    internal.assertSize(bytes, size)\r\n    return padLeft(bytes, size)\r\n  }\r\n  return bytes\r\n}\r\n\r\nexport declare namespace fromBoolean {\r\n  type Options = {\r\n    /** Size of the output bytes. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType =\r\n    | internal.assertSize.ErrorType\r\n    | padLeft.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Encodes a {@link ox#Hex.Hex} value into {@link ox#Bytes.Bytes}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421')\r\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\r\n * ```\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421', { size: 32 })\r\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\r\n * ```\r\n *\r\n * @param value - {@link ox#Hex.Hex} value to encode.\r\n * @param options - Encoding options.\r\n * @returns Encoded {@link ox#Bytes.Bytes}.\r\n */\r\nexport function fromHex(value: Hex.Hex, options: fromHex.Options = {}): Bytes {\r\n  const { size } = options\r\n\r\n  let hex = value\r\n  if (size) {\r\n    internal_hex.assertSize(value, size)\r\n    hex = Hex.padRight(value, size)\r\n  }\r\n\r\n  let hexString = hex.slice(2) as string\r\n  if (hexString.length % 2) hexString = `0${hexString}`\r\n\r\n  const length = hexString.length / 2\r\n  const bytes = new Uint8Array(length)\r\n  for (let index = 0, j = 0; index < length; index++) {\r\n    const nibbleLeft = internal.charCodeToBase16(hexString.charCodeAt(j++))\r\n    const nibbleRight = internal.charCodeToBase16(hexString.charCodeAt(j++))\r\n    if (nibbleLeft === undefined || nibbleRight === undefined) {\r\n      throw new Errors.BaseError(\r\n        `Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`,\r\n      )\r\n    }\r\n    bytes[index] = nibbleLeft * 16 + nibbleRight\r\n  }\r\n  return bytes\r\n}\r\n\r\nexport declare namespace fromHex {\r\n  type Options = {\r\n    /** Size of the output bytes. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType =\r\n    | internal_hex.assertSize.ErrorType\r\n    | Hex.padRight.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Encodes a number value into {@link ox#Bytes.Bytes}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * const data = Bytes.fromNumber(420)\r\n * // @log: Uint8Array([1, 164])\r\n * ```\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * const data = Bytes.fromNumber(420, { size: 4 })\r\n * // @log: Uint8Array([0, 0, 1, 164])\r\n * ```\r\n *\r\n * @param value - Number value to encode.\r\n * @param options - Encoding options.\r\n * @returns Encoded {@link ox#Bytes.Bytes}.\r\n */\r\nexport function fromNumber(\r\n  value: bigint | number,\r\n  options?: fromNumber.Options | undefined,\r\n) {\r\n  const hex = Hex.fromNumber(value, options)\r\n  return fromHex(hex)\r\n}\r\n\r\nexport declare namespace fromNumber {\r\n  export type Options = Hex.fromNumber.Options\r\n\r\n  export type ErrorType =\r\n    | Hex.fromNumber.ErrorType\r\n    | fromHex.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Encodes a string into {@link ox#Bytes.Bytes}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * const data = Bytes.fromString('Hello world!')\r\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\r\n * ```\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * const data = Bytes.fromString('Hello world!', { size: 32 })\r\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\r\n * ```\r\n *\r\n * @param value - String to encode.\r\n * @param options - Encoding options.\r\n * @returns Encoded {@link ox#Bytes.Bytes}.\r\n */\r\nexport function fromString(\r\n  value: string,\r\n  options: fromString.Options = {},\r\n): Bytes {\r\n  const { size } = options\r\n\r\n  const bytes = encoder.encode(value)\r\n  if (typeof size === 'number') {\r\n    internal.assertSize(bytes, size)\r\n    return padRight(bytes, size)\r\n  }\r\n  return bytes\r\n}\r\n\r\nexport declare namespace fromString {\r\n  type Options = {\r\n    /** Size of the output bytes. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType =\r\n    | internal.assertSize.ErrorType\r\n    | padRight.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Checks if two {@link ox#Bytes.Bytes} values are equal.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.isEqual(Bytes.from([1]), Bytes.from([1]))\r\n * // @log: true\r\n *\r\n * Bytes.isEqual(Bytes.from([1]), Bytes.from([2]))\r\n * // @log: false\r\n * ```\r\n *\r\n * @param bytesA - First {@link ox#Bytes.Bytes} value.\r\n * @param bytesB - Second {@link ox#Bytes.Bytes} value.\r\n * @returns `true` if the two values are equal, otherwise `false`.\r\n */\r\nexport function isEqual(bytesA: Bytes, bytesB: Bytes) {\r\n  return equalBytes(bytesA, bytesB)\r\n}\r\n\r\nexport declare namespace isEqual {\r\n  type ErrorType = Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Pads a {@link ox#Bytes.Bytes} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.padLeft(Bytes.from([1]), 4)\r\n * // @log: Uint8Array([0, 0, 0, 1])\r\n * ```\r\n *\r\n * @param value - {@link ox#Bytes.Bytes} value to pad.\r\n * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.\r\n * @returns Padded {@link ox#Bytes.Bytes} value.\r\n */\r\nexport function padLeft(\r\n  value: Bytes,\r\n  size?: number | undefined,\r\n): padLeft.ReturnType {\r\n  return internal.pad(value, { dir: 'left', size })\r\n}\r\n\r\nexport declare namespace padLeft {\r\n  type ReturnType = internal.pad.ReturnType\r\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Pads a {@link ox#Bytes.Bytes} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.padRight(Bytes.from([1]), 4)\r\n * // @log: Uint8Array([1, 0, 0, 0])\r\n * ```\r\n *\r\n * @param value - {@link ox#Bytes.Bytes} value to pad.\r\n * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.\r\n * @returns Padded {@link ox#Bytes.Bytes} value.\r\n */\r\nexport function padRight(\r\n  value: Bytes,\r\n  size?: number | undefined,\r\n): padRight.ReturnType {\r\n  return internal.pad(value, { dir: 'right', size })\r\n}\r\n\r\nexport declare namespace padRight {\r\n  type ReturnType = internal.pad.ReturnType\r\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Generates random {@link ox#Bytes.Bytes} of the specified length.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * const bytes = Bytes.random(32)\r\n * // @log: Uint8Array([... x32])\r\n * ```\r\n *\r\n * @param length - Length of the random {@link ox#Bytes.Bytes} to generate.\r\n * @returns Random {@link ox#Bytes.Bytes} of the specified length.\r\n */\r\nexport function random(length: number): Bytes {\r\n  return crypto.getRandomValues(new Uint8Array(length))\r\n}\r\n\r\nexport declare namespace random {\r\n  type ErrorType = Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Retrieves the size of a {@link ox#Bytes.Bytes} value.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.size(Bytes.from([1, 2, 3, 4]))\r\n * // @log: 4\r\n * ```\r\n *\r\n * @param value - {@link ox#Bytes.Bytes} value.\r\n * @returns Size of the {@link ox#Bytes.Bytes} value.\r\n */\r\nexport function size(value: Bytes): number {\r\n  return value.length\r\n}\r\n\r\nexport declare namespace size {\r\n  export type ErrorType = Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.slice(\r\n *   Bytes.from([1, 2, 3, 4, 5, 6, 7, 8, 9]),\r\n *   1,\r\n *   4,\r\n * )\r\n * // @log: Uint8Array([2, 3, 4])\r\n * ```\r\n *\r\n * @param value - The {@link ox#Bytes.Bytes} value.\r\n * @param start - Start offset.\r\n * @param end - End offset.\r\n * @param options - Slice options.\r\n * @returns Sliced {@link ox#Bytes.Bytes} value.\r\n */\r\nexport function slice(\r\n  value: Bytes,\r\n  start?: number | undefined,\r\n  end?: number | undefined,\r\n  options: slice.Options = {},\r\n): Bytes {\r\n  const { strict } = options\r\n  internal.assertStartOffset(value, start)\r\n  const value_ = value.slice(start, end)\r\n  if (strict) internal.assertEndOffset(value_, start, end)\r\n  return value_\r\n}\r\n\r\nexport declare namespace slice {\r\n  type Options = {\r\n    /** Asserts that the sliced value is the same size as the given start/end offsets. */\r\n    strict?: boolean | undefined\r\n  }\r\n\r\n  export type ErrorType =\r\n    | internal.assertStartOffset.ErrorType\r\n    | internal.assertEndOffset.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Decodes a {@link ox#Bytes.Bytes} into a bigint.\r\n *\r\n * @example\r\n * ```ts\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.toBigInt(Bytes.from([1, 164]))\r\n * // @log: 420n\r\n * ```\r\n *\r\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\r\n * @param options - Decoding options.\r\n * @returns Decoded bigint.\r\n */\r\nexport function toBigInt(bytes: Bytes, options: toBigInt.Options = {}): bigint {\r\n  const { size } = options\r\n  if (typeof size !== 'undefined') internal.assertSize(bytes, size)\r\n  const hex = Hex.fromBytes(bytes, options)\r\n  return Hex.toBigInt(hex, options)\r\n}\r\n\r\nexport declare namespace toBigInt {\r\n  type Options = {\r\n    /** Whether or not the number of a signed representation. */\r\n    signed?: boolean | undefined\r\n    /** Size of the bytes. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType =\r\n    | Hex.fromBytes.ErrorType\r\n    | Hex.toBigInt.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Decodes a {@link ox#Bytes.Bytes} into a boolean.\r\n *\r\n * @example\r\n * ```ts\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.toBoolean(Bytes.from([1]))\r\n * // @log: true\r\n * ```\r\n *\r\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\r\n * @param options - Decoding options.\r\n * @returns Decoded boolean.\r\n */\r\nexport function toBoolean(\r\n  bytes: Bytes,\r\n  options: toBoolean.Options = {},\r\n): boolean {\r\n  const { size } = options\r\n  let bytes_ = bytes\r\n  if (typeof size !== 'undefined') {\r\n    internal.assertSize(bytes_, size)\r\n    bytes_ = trimLeft(bytes_)\r\n  }\r\n  if (bytes_.length > 1 || bytes_[0]! > 1)\r\n    throw new InvalidBytesBooleanError(bytes_)\r\n  return Boolean(bytes_[0])\r\n}\r\n\r\nexport declare namespace toBoolean {\r\n  type Options = {\r\n    /** Size of the bytes. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType =\r\n    | internal.assertSize.ErrorType\r\n    | trimLeft.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.toHex(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\r\n * // '0x48656c6c6f20576f726c6421'\r\n * ```\r\n *\r\n * @param value - The {@link ox#Bytes.Bytes} to decode.\r\n * @param options - Options.\r\n * @returns Decoded {@link ox#Hex.Hex} value.\r\n */\r\nexport function toHex(value: Bytes, options: toHex.Options = {}): Hex.Hex {\r\n  return Hex.fromBytes(value, options)\r\n}\r\n\r\nexport declare namespace toHex {\r\n  type Options = {\r\n    /** Size of the bytes. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType = Hex.fromBytes.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Decodes a {@link ox#Bytes.Bytes} into a number.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.toNumber(Bytes.from([1, 164]))\r\n * // @log: 420\r\n * ```\r\n */\r\nexport function toNumber(bytes: Bytes, options: toNumber.Options = {}): number {\r\n  const { size } = options\r\n  if (typeof size !== 'undefined') internal.assertSize(bytes, size)\r\n  const hex = Hex.fromBytes(bytes, options)\r\n  return Hex.toNumber(hex, options)\r\n}\r\n\r\nexport declare namespace toNumber {\r\n  type Options = {\r\n    /** Whether or not the number of a signed representation. */\r\n    signed?: boolean | undefined\r\n    /** Size of the bytes. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType =\r\n    | Hex.fromBytes.ErrorType\r\n    | Hex.toNumber.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Decodes a {@link ox#Bytes.Bytes} into a string.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * const data = Bytes.toString(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\r\n * // @log: 'Hello world'\r\n * ```\r\n *\r\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\r\n * @param options - Options.\r\n * @returns Decoded string.\r\n */\r\nexport function toString(bytes: Bytes, options: toString.Options = {}): string {\r\n  const { size } = options\r\n\r\n  let bytes_ = bytes\r\n  if (typeof size !== 'undefined') {\r\n    internal.assertSize(bytes_, size)\r\n    bytes_ = trimRight(bytes_)\r\n  }\r\n  return decoder.decode(bytes_)\r\n}\r\n\r\nexport declare namespace toString {\r\n  export type Options = {\r\n    /** Size of the bytes. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  export type ErrorType =\r\n    | internal.assertSize.ErrorType\r\n    | trimRight.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Trims leading zeros from a {@link ox#Bytes.Bytes} value.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.trimLeft(Bytes.from([0, 0, 0, 0, 1, 2, 3]))\r\n * // @log: Uint8Array([1, 2, 3])\r\n * ```\r\n *\r\n * @param value - {@link ox#Bytes.Bytes} value.\r\n * @returns Trimmed {@link ox#Bytes.Bytes} value.\r\n */\r\nexport function trimLeft(value: Bytes): Bytes {\r\n  return internal.trim(value, { dir: 'left' })\r\n}\r\n\r\nexport declare namespace trimLeft {\r\n  type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Trims trailing zeros from a {@link ox#Bytes.Bytes} value.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.trimRight(Bytes.from([1, 2, 3, 0, 0, 0, 0]))\r\n * // @log: Uint8Array([1, 2, 3])\r\n * ```\r\n *\r\n * @param value - {@link ox#Bytes.Bytes} value.\r\n * @returns Trimmed {@link ox#Bytes.Bytes} value.\r\n */\r\nexport function trimRight(value: Bytes): Bytes {\r\n  return internal.trim(value, { dir: 'right' })\r\n}\r\n\r\nexport declare namespace trimRight {\r\n  export type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Checks if the given value is {@link ox#Bytes.Bytes}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.validate('0x')\r\n * // @log: false\r\n *\r\n * Bytes.validate(Bytes.from([1, 2, 3]))\r\n * // @log: true\r\n * ```\r\n *\r\n * @param value - Value to check.\r\n * @returns `true` if the value is {@link ox#Bytes.Bytes}, otherwise `false`.\r\n */\r\nexport function validate(value: unknown): value is Bytes {\r\n  try {\r\n    assert(value)\r\n    return true\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nexport declare namespace validate {\r\n  export type ErrorType = Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Thrown when the bytes value cannot be represented as a boolean.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.toBoolean(Bytes.from([5]))\r\n * // @error: Bytes.InvalidBytesBooleanError: Bytes value `[5]` is not a valid boolean.\r\n * // @error: The bytes array must contain a single byte of either a `0` or `1` value.\r\n * ```\r\n */\r\nexport class InvalidBytesBooleanError extends Errors.BaseError {\r\n  override readonly name = 'Bytes.InvalidBytesBooleanError'\r\n\r\n  constructor(bytes: Bytes) {\r\n    super(`Bytes value \\`${bytes}\\` is not a valid boolean.`, {\r\n      metaMessages: [\r\n        'The bytes array must contain a single byte of either a `0` or `1` value.',\r\n      ],\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Thrown when a value cannot be converted to bytes.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * // @noErrors\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.from('foo')\r\n * // @error: Bytes.InvalidBytesTypeError: Value `foo` of type `string` is an invalid Bytes value.\r\n * ```\r\n */\r\nexport class InvalidBytesTypeError extends Errors.BaseError {\r\n  override readonly name = 'Bytes.InvalidBytesTypeError'\r\n\r\n  constructor(value: unknown) {\r\n    super(\r\n      `Value \\`${typeof value === 'object' ? Json.stringify(value) : value}\\` of type \\`${typeof value}\\` is an invalid Bytes value.`,\r\n      {\r\n        metaMessages: ['Bytes values must be of type `Bytes`.'],\r\n      },\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Thrown when a size exceeds the maximum allowed size.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.fromString('Hello World!', { size: 8 })\r\n * // @error: Bytes.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.\r\n * ```\r\n */\r\nexport class SizeOverflowError extends Errors.BaseError {\r\n  override readonly name = 'Bytes.SizeOverflowError'\r\n\r\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\r\n    super(\r\n      `Size cannot exceed \\`${maxSize}\\` bytes. Given size: \\`${givenSize}\\` bytes.`,\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Thrown when a slice offset is out-of-bounds.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.slice(Bytes.from([1, 2, 3]), 4)\r\n * // @error: Bytes.SliceOffsetOutOfBoundsError: Slice starting at offset `4` is out-of-bounds (size: `3`).\r\n * ```\r\n */\r\nexport class SliceOffsetOutOfBoundsError extends Errors.BaseError {\r\n  override readonly name = 'Bytes.SliceOffsetOutOfBoundsError'\r\n\r\n  constructor({\r\n    offset,\r\n    position,\r\n    size,\r\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\r\n    super(\r\n      `Slice ${\r\n        position === 'start' ? 'starting' : 'ending'\r\n      } at offset \\`${offset}\\` is out-of-bounds (size: \\`${size}\\`).`,\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Thrown when a the padding size exceeds the maximum allowed size.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.padLeft(Bytes.fromString('Hello World!'), 8)\r\n * // @error: [Bytes.SizeExceedsPaddingSizeError: Bytes size (`12`) exceeds padding size (`8`).\r\n * ```\r\n */\r\nexport class SizeExceedsPaddingSizeError extends Errors.BaseError {\r\n  override readonly name = 'Bytes.SizeExceedsPaddingSizeError'\r\n\r\n  constructor({\r\n    size,\r\n    targetSize,\r\n    type,\r\n  }: {\r\n    size: number\r\n    targetSize: number\r\n    type: 'Hex' | 'Bytes'\r\n  }) {\r\n    super(\r\n      `${type.charAt(0).toUpperCase()}${type\r\n        .slice(1)\r\n        .toLowerCase()} size (\\`${size}\\`) exceeds padding size (\\`${targetSize}\\`).`,\r\n    )\r\n  }\r\n}\r\n", "import { equalBytes } from '@noble/curves/abstract/utils'\r\nimport * as Bytes from './Bytes.js'\r\nimport * as Errors from './Errors.js'\r\nimport * as Json from './Json.js'\r\nimport * as internal_bytes from './internal/bytes.js'\r\nimport * as internal from './internal/hex.js'\r\n\r\nconst encoder = /*#__PURE__*/ new TextEncoder()\r\n\r\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) =>\r\n  i.toString(16).padStart(2, '0'),\r\n)\r\n\r\n/** Root type for a Hex string. */\r\nexport type Hex = `0x${string}`\r\n\r\n/**\r\n * Asserts if the given value is {@link ox#Hex.Hex}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.assert('abc')\r\n * // @error: InvalidHexValueTypeError:\r\n * // @error: Value `\"abc\"` of type `string` is an invalid hex type.\r\n * // @error: Hex types must be represented as `\"0x\\${string}\"`.\r\n * ```\r\n *\r\n * @param value - The value to assert.\r\n * @param options - Options.\r\n */\r\nexport function assert(\r\n  value: unknown,\r\n  options: assert.Options = {},\r\n): asserts value is Hex {\r\n  const { strict = false } = options\r\n  if (!value) throw new InvalidHexTypeError(value)\r\n  if (typeof value !== 'string') throw new InvalidHexTypeError(value)\r\n  if (strict) {\r\n    if (!/^0x[0-9a-fA-F]*$/.test(value)) throw new InvalidHexValueError(value)\r\n  }\r\n  if (!value.startsWith('0x')) throw new InvalidHexValueError(value)\r\n}\r\n\r\nexport declare namespace assert {\r\n  type Options = {\r\n    /** Checks if the {@link ox#Hex.Hex} value contains invalid hexadecimal characters. @default false */\r\n    strict?: boolean | undefined\r\n  }\r\n\r\n  type ErrorType =\r\n    | InvalidHexTypeError\r\n    | InvalidHexValueError\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Concatenates two or more {@link ox#Hex.Hex}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.concat('0x123', '0x456')\r\n * // @log: '0x123456'\r\n * ```\r\n *\r\n * @param values - The {@link ox#Hex.Hex} values to concatenate.\r\n * @returns The concatenated {@link ox#Hex.Hex} value.\r\n */\r\nexport function concat(...values: readonly Hex[]): Hex {\r\n  return `0x${(values as Hex[]).reduce((acc, x) => acc + x.replace('0x', ''), '')}`\r\n}\r\n\r\nexport declare namespace concat {\r\n  type ErrorType = Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Instantiates a {@link ox#Hex.Hex} value from a hex string or {@link ox#Bytes.Bytes} value.\r\n *\r\n * :::tip\r\n *\r\n * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:\r\n *\r\n * - `Hex.fromBoolean`\r\n *\r\n * - `Hex.fromString`\r\n *\r\n * - `Hex.fromNumber`\r\n *\r\n * :::\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes, Hex } from 'ox'\r\n *\r\n * Hex.from('0x48656c6c6f20576f726c6421')\r\n * // @log: '0x48656c6c6f20576f726c6421'\r\n *\r\n * Hex.from(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\r\n * // @log: '0x48656c6c6f20576f726c6421'\r\n * ```\r\n *\r\n * @param value - The {@link ox#Bytes.Bytes} value to encode.\r\n * @returns The encoded {@link ox#Hex.Hex} value.\r\n */\r\nexport function from(value: Hex | Bytes.Bytes | readonly number[]): Hex {\r\n  if (value instanceof Uint8Array) return fromBytes(value)\r\n  if (Array.isArray(value)) return fromBytes(new Uint8Array(value))\r\n  return value as never\r\n}\r\n\r\nexport declare namespace from {\r\n  type Options = {\r\n    /** The size (in bytes) of the output hex value. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType = fromBytes.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Encodes a boolean into a {@link ox#Hex.Hex} value.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.fromBoolean(true)\r\n * // @log: '0x1'\r\n *\r\n * Hex.fromBoolean(false)\r\n * // @log: '0x0'\r\n *\r\n * Hex.fromBoolean(true, { size: 32 })\r\n * // @log: '0x0000000000000000000000000000000000000000000000000000000000000001'\r\n * ```\r\n *\r\n * @param value - The boolean value to encode.\r\n * @param options - Options.\r\n * @returns The encoded {@link ox#Hex.Hex} value.\r\n */\r\nexport function fromBoolean(\r\n  value: boolean,\r\n  options: fromBoolean.Options = {},\r\n): Hex {\r\n  const hex: Hex = `0x${Number(value)}`\r\n  if (typeof options.size === 'number') {\r\n    internal.assertSize(hex, options.size)\r\n    return padLeft(hex, options.size)\r\n  }\r\n  return hex\r\n}\r\n\r\nexport declare namespace fromBoolean {\r\n  type Options = {\r\n    /** The size (in bytes) of the output hex value. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType =\r\n    | internal.assertSize.ErrorType\r\n    | padLeft.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes, Hex } from 'ox'\r\n *\r\n * Hex.fromBytes(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\r\n * // @log: '0x48656c6c6f20576f726c6421'\r\n * ```\r\n *\r\n * @param value - The {@link ox#Bytes.Bytes} value to encode.\r\n * @param options - Options.\r\n * @returns The encoded {@link ox#Hex.Hex} value.\r\n */\r\nexport function fromBytes(\r\n  value: Bytes.Bytes,\r\n  options: fromBytes.Options = {},\r\n): Hex {\r\n  let string = ''\r\n  for (let i = 0; i < value.length; i++) string += hexes[value[i]!]\r\n  const hex = `0x${string}` as const\r\n\r\n  if (typeof options.size === 'number') {\r\n    internal.assertSize(hex, options.size)\r\n    return padRight(hex, options.size)\r\n  }\r\n  return hex\r\n}\r\n\r\nexport declare namespace fromBytes {\r\n  type Options = {\r\n    /** The size (in bytes) of the output hex value. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType =\r\n    | internal.assertSize.ErrorType\r\n    | padRight.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Encodes a number or bigint into a {@link ox#Hex.Hex} value.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.fromNumber(420)\r\n * // @log: '0x1a4'\r\n *\r\n * Hex.fromNumber(420, { size: 32 })\r\n * // @log: '0x00000000000000000000000000000000000000000000000000000000000001a4'\r\n * ```\r\n *\r\n * @param value - The number or bigint value to encode.\r\n * @param options - Options.\r\n * @returns The encoded {@link ox#Hex.Hex} value.\r\n */\r\nexport function fromNumber(\r\n  value: number | bigint,\r\n  options: fromNumber.Options = {},\r\n): Hex {\r\n  const { signed, size } = options\r\n\r\n  const value_ = BigInt(value)\r\n\r\n  let maxValue: bigint | number | undefined\r\n  if (size) {\r\n    if (signed) maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n\r\n    else maxValue = 2n ** (BigInt(size) * 8n) - 1n\r\n  } else if (typeof value === 'number') {\r\n    maxValue = BigInt(Number.MAX_SAFE_INTEGER)\r\n  }\r\n\r\n  const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0\r\n\r\n  if ((maxValue && value_ > maxValue) || value_ < minValue) {\r\n    const suffix = typeof value === 'bigint' ? 'n' : ''\r\n    throw new IntegerOutOfRangeError({\r\n      max: maxValue ? `${maxValue}${suffix}` : undefined,\r\n      min: `${minValue}${suffix}`,\r\n      signed,\r\n      size,\r\n      value: `${value}${suffix}`,\r\n    })\r\n  }\r\n\r\n  const stringValue = (\r\n    signed && value_ < 0 ? (1n << BigInt(size * 8)) + BigInt(value_) : value_\r\n  ).toString(16)\r\n\r\n  const hex = `0x${stringValue}` as Hex\r\n  if (size) return padLeft(hex, size) as Hex\r\n  return hex\r\n}\r\n\r\nexport declare namespace fromNumber {\r\n  type Options =\r\n    | {\r\n        /** Whether or not the number of a signed representation. */\r\n        signed?: boolean | undefined\r\n        /** The size (in bytes) of the output hex value. */\r\n        size: number\r\n      }\r\n    | {\r\n        signed?: undefined\r\n        /** The size (in bytes) of the output hex value. */\r\n        size?: number | undefined\r\n      }\r\n\r\n  type ErrorType =\r\n    | IntegerOutOfRangeError\r\n    | padLeft.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Encodes a string into a {@link ox#Hex.Hex} value.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n * Hex.fromString('Hello World!')\r\n * // '0x48656c6c6f20576f726c6421'\r\n *\r\n * Hex.fromString('Hello World!', { size: 32 })\r\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\r\n * ```\r\n *\r\n * @param value - The string value to encode.\r\n * @param options - Options.\r\n * @returns The encoded {@link ox#Hex.Hex} value.\r\n */\r\nexport function fromString(\r\n  value: string,\r\n  options: fromString.Options = {},\r\n): Hex {\r\n  return fromBytes(encoder.encode(value), options)\r\n}\r\n\r\nexport declare namespace fromString {\r\n  type Options = {\r\n    /** The size (in bytes) of the output hex value. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType = fromBytes.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Checks if two {@link ox#Hex.Hex} values are equal.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.isEqual('0xdeadbeef', '0xdeadbeef')\r\n * // @log: true\r\n *\r\n * Hex.isEqual('0xda', '0xba')\r\n * // @log: false\r\n * ```\r\n *\r\n * @param hexA - The first {@link ox#Hex.Hex} value.\r\n * @param hexB - The second {@link ox#Hex.Hex} value.\r\n * @returns `true` if the two {@link ox#Hex.Hex} values are equal, `false` otherwise.\r\n */\r\nexport function isEqual(hexA: Hex, hexB: Hex) {\r\n  return equalBytes(Bytes.fromHex(hexA), Bytes.fromHex(hexB))\r\n}\r\n\r\nexport declare namespace isEqual {\r\n  type ErrorType = Bytes.fromHex.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Pads a {@link ox#Hex.Hex} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.padLeft('0x1234', 4)\r\n * // @log: '0x00001234'\r\n * ```\r\n *\r\n * @param value - The {@link ox#Hex.Hex} value to pad.\r\n * @param size - The size (in bytes) of the output hex value.\r\n * @returns The padded {@link ox#Hex.Hex} value.\r\n */\r\nexport function padLeft(\r\n  value: Hex,\r\n  size?: number | undefined,\r\n): padLeft.ReturnType {\r\n  return internal.pad(value, { dir: 'left', size })\r\n}\r\n\r\nexport declare namespace padLeft {\r\n  type ReturnType = Hex\r\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Pads a {@link ox#Hex.Hex} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).\r\n *\r\n * @example\r\n * ```ts\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.padRight('0x1234', 4)\r\n * // @log: '0x12340000'\r\n * ```\r\n *\r\n * @param value - The {@link ox#Hex.Hex} value to pad.\r\n * @param size - The size (in bytes) of the output hex value.\r\n * @returns The padded {@link ox#Hex.Hex} value.\r\n */\r\nexport function padRight(\r\n  value: Hex,\r\n  size?: number | undefined,\r\n): padRight.ReturnType {\r\n  return internal.pad(value, { dir: 'right', size })\r\n}\r\n\r\nexport declare namespace padRight {\r\n  type ReturnType = Hex\r\n  type ErrorType = internal.pad.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Generates a random {@link ox#Hex.Hex} value of the specified length.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * const hex = Hex.random(32)\r\n * // @log: '0x...'\r\n * ```\r\n *\r\n * @returns Random {@link ox#Hex.Hex} value.\r\n */\r\nexport function random(length: number): Hex {\r\n  return fromBytes(Bytes.random(length))\r\n}\r\n\r\nexport declare namespace random {\r\n  type ErrorType = Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.slice('0x0123456789', 1, 4)\r\n * // @log: '0x234567'\r\n * ```\r\n *\r\n * @param value - The {@link ox#Hex.Hex} value to slice.\r\n * @param start - The start offset (in bytes).\r\n * @param end - The end offset (in bytes).\r\n * @param options - Options.\r\n * @returns The sliced {@link ox#Hex.Hex} value.\r\n */\r\nexport function slice(\r\n  value: Hex,\r\n  start?: number | undefined,\r\n  end?: number | undefined,\r\n  options: slice.Options = {},\r\n): Hex {\r\n  const { strict } = options\r\n  internal.assertStartOffset(value, start)\r\n  const value_ = `0x${value\r\n    .replace('0x', '')\r\n    .slice((start ?? 0) * 2, (end ?? value.length) * 2)}` as const\r\n  if (strict) internal.assertEndOffset(value_, start, end)\r\n  return value_\r\n}\r\n\r\nexport declare namespace slice {\r\n  type Options = {\r\n    /** Asserts that the sliced value is the same size as the given start/end offsets. */\r\n    strict?: boolean | undefined\r\n  }\r\n\r\n  type ErrorType =\r\n    | internal.assertStartOffset.ErrorType\r\n    | internal.assertEndOffset.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Retrieves the size of a {@link ox#Hex.Hex} value (in bytes).\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.size('0xdeadbeef')\r\n * // @log: 4\r\n * ```\r\n *\r\n * @param value - The {@link ox#Hex.Hex} value to get the size of.\r\n * @returns The size of the {@link ox#Hex.Hex} value (in bytes).\r\n */\r\nexport function size(value: Hex): number {\r\n  return Math.ceil((value.length - 2) / 2)\r\n}\r\n\r\nexport declare namespace size {\r\n  export type ErrorType = Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Trims leading zeros from a {@link ox#Hex.Hex} value.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.trimLeft('0x00000000deadbeef')\r\n * // @log: '0xdeadbeef'\r\n * ```\r\n *\r\n * @param value - The {@link ox#Hex.Hex} value to trim.\r\n * @returns The trimmed {@link ox#Hex.Hex} value.\r\n */\r\nexport function trimLeft(value: Hex): trimLeft.ReturnType {\r\n  return internal.trim(value, { dir: 'left' })\r\n}\r\n\r\nexport declare namespace trimLeft {\r\n  type ReturnType = Hex\r\n\r\n  type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Trims trailing zeros from a {@link ox#Hex.Hex} value.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.trimRight('0xdeadbeef00000000')\r\n * // @log: '0xdeadbeef'\r\n * ```\r\n *\r\n * @param value - The {@link ox#Hex.Hex} value to trim.\r\n * @returns The trimmed {@link ox#Hex.Hex} value.\r\n */\r\nexport function trimRight(value: Hex): trimRight.ReturnType {\r\n  return internal.trim(value, { dir: 'right' })\r\n}\r\n\r\nexport declare namespace trimRight {\r\n  type ReturnType = Hex\r\n\r\n  type ErrorType = internal.trim.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Decodes a {@link ox#Hex.Hex} value into a BigInt.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.toBigInt('0x1a4')\r\n * // @log: 420n\r\n *\r\n * Hex.toBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\r\n * // @log: 420n\r\n * ```\r\n *\r\n * @param hex - The {@link ox#Hex.Hex} value to decode.\r\n * @param options - Options.\r\n * @returns The decoded BigInt.\r\n */\r\nexport function toBigInt(hex: Hex, options: toBigInt.Options = {}): bigint {\r\n  const { signed } = options\r\n\r\n  if (options.size) internal.assertSize(hex, options.size)\r\n\r\n  const value = BigInt(hex)\r\n  if (!signed) return value\r\n\r\n  const size = (hex.length - 2) / 2\r\n\r\n  const max_unsigned = (1n << (BigInt(size) * 8n)) - 1n\r\n  const max_signed = max_unsigned >> 1n\r\n\r\n  if (value <= max_signed) return value\r\n  return value - max_unsigned - 1n\r\n}\r\n\r\nexport declare namespace toBigInt {\r\n  type Options = {\r\n    /** Whether or not the number of a signed representation. */\r\n    signed?: boolean | undefined\r\n    /** Size (in bytes) of the hex value. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType = internal.assertSize.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Decodes a {@link ox#Hex.Hex} value into a boolean.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.toBoolean('0x01')\r\n * // @log: true\r\n *\r\n * Hex.toBoolean('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\r\n * // @log: true\r\n * ```\r\n *\r\n * @param hex - The {@link ox#Hex.Hex} value to decode.\r\n * @param options - Options.\r\n * @returns The decoded boolean.\r\n */\r\nexport function toBoolean(hex: Hex, options: toBoolean.Options = {}): boolean {\r\n  if (options.size) internal.assertSize(hex, options.size)\r\n  const hex_ = trimLeft(hex)\r\n  if (hex_ === '0x') return false\r\n  if (hex_ === '0x1') return true\r\n  throw new InvalidHexBooleanError(hex)\r\n}\r\n\r\nexport declare namespace toBoolean {\r\n  type Options = {\r\n    /** Size (in bytes) of the hex value. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType =\r\n    | internal.assertSize.ErrorType\r\n    | trimLeft.ErrorType\r\n    | InvalidHexBooleanError\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Decodes a {@link ox#Hex.Hex} value into a {@link ox#Bytes.Bytes}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * const data = Hex.toBytes('0x48656c6c6f20776f726c6421')\r\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\r\n * ```\r\n *\r\n * @param hex - The {@link ox#Hex.Hex} value to decode.\r\n * @param options - Options.\r\n * @returns The decoded {@link ox#Bytes.Bytes}.\r\n */\r\nexport function toBytes(hex: Hex, options: toBytes.Options = {}): Bytes.Bytes {\r\n  return Bytes.fromHex(hex, options)\r\n}\r\n\r\nexport declare namespace toBytes {\r\n  type Options = {\r\n    /** Size (in bytes) of the hex value. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType = Bytes.fromHex.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Decodes a {@link ox#Hex.Hex} value into a number.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.toNumber('0x1a4')\r\n * // @log: 420\r\n *\r\n * Hex.toNumber('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\r\n * // @log: 420\r\n * ```\r\n *\r\n * @param hex - The {@link ox#Hex.Hex} value to decode.\r\n * @param options - Options.\r\n * @returns The decoded number.\r\n */\r\nexport function toNumber(hex: Hex, options: toNumber.Options = {}): number {\r\n  const { signed, size } = options\r\n  if (!signed && !size) return Number(hex)\r\n  return Number(toBigInt(hex, options))\r\n}\r\n\r\nexport declare namespace toNumber {\r\n  type Options = toBigInt.Options\r\n\r\n  type ErrorType = toBigInt.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Decodes a {@link ox#Hex.Hex} value into a string.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.toString('0x48656c6c6f20576f726c6421')\r\n * // @log: 'Hello world!'\r\n *\r\n * Hex.toString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\r\n *  size: 32,\r\n * })\r\n * // @log: 'Hello world'\r\n * ```\r\n *\r\n * @param hex - The {@link ox#Hex.Hex} value to decode.\r\n * @param options - Options.\r\n * @returns The decoded string.\r\n */\r\nexport function toString(hex: Hex, options: toString.Options = {}): string {\r\n  const { size } = options\r\n\r\n  let bytes = Bytes.fromHex(hex)\r\n  if (size) {\r\n    internal_bytes.assertSize(bytes, size)\r\n    bytes = Bytes.trimRight(bytes)\r\n  }\r\n  return new TextDecoder().decode(bytes)\r\n}\r\n\r\nexport declare namespace toString {\r\n  type Options = {\r\n    /** Size (in bytes) of the hex value. */\r\n    size?: number | undefined\r\n  }\r\n\r\n  type ErrorType =\r\n    | internal_bytes.assertSize.ErrorType\r\n    | Bytes.fromHex.ErrorType\r\n    | Bytes.trimRight.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Checks if the given value is {@link ox#Hex.Hex}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes, Hex } from 'ox'\r\n *\r\n * Hex.validate('0xdeadbeef')\r\n * // @log: true\r\n *\r\n * Hex.validate(Bytes.from([1, 2, 3]))\r\n * // @log: false\r\n * ```\r\n *\r\n * @param value - The value to check.\r\n * @param options - Options.\r\n * @returns `true` if the value is a {@link ox#Hex.Hex}, `false` otherwise.\r\n */\r\nexport function validate(\r\n  value: unknown,\r\n  options: validate.Options = {},\r\n): value is Hex {\r\n  const { strict = false } = options\r\n  try {\r\n    assert(value, { strict })\r\n    return true\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nexport declare namespace validate {\r\n  type Options = {\r\n    /** Checks if the {@link ox#Hex.Hex} value contains invalid hexadecimal characters. @default false */\r\n    strict?: boolean | undefined\r\n  }\r\n\r\n  type ErrorType = Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Thrown when the provided integer is out of range, and cannot be represented as a hex value.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.fromNumber(420182738912731283712937129)\r\n * // @error: Hex.IntegerOutOfRangeError: Number \\`4.2018273891273126e+26\\` is not in safe unsigned integer range (`0` to `9007199254740991`)\r\n * ```\r\n */\r\nexport class IntegerOutOfRangeError extends Errors.BaseError {\r\n  override readonly name = 'Hex.IntegerOutOfRangeError'\r\n\r\n  constructor({\r\n    max,\r\n    min,\r\n    signed,\r\n    size,\r\n    value,\r\n  }: {\r\n    max?: string | undefined\r\n    min: string\r\n    signed?: boolean | undefined\r\n    size?: number | undefined\r\n    value: string\r\n  }) {\r\n    super(\r\n      `Number \\`${value}\\` is not in safe${\r\n        size ? ` ${size * 8}-bit` : ''\r\n      }${signed ? ' signed' : ' unsigned'} integer range ${max ? `(\\`${min}\\` to \\`${max}\\`)` : `(above \\`${min}\\`)`}`,\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Thrown when the provided hex value cannot be represented as a boolean.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.toBoolean('0xa')\r\n * // @error: Hex.InvalidHexBooleanError: Hex value `\"0xa\"` is not a valid boolean.\r\n * // @error: The hex value must be `\"0x0\"` (false) or `\"0x1\"` (true).\r\n * ```\r\n */\r\nexport class InvalidHexBooleanError extends Errors.BaseError {\r\n  override readonly name = 'Hex.InvalidHexBooleanError'\r\n\r\n  constructor(hex: Hex) {\r\n    super(`Hex value \\`\"${hex}\"\\` is not a valid boolean.`, {\r\n      metaMessages: [\r\n        'The hex value must be `\"0x0\"` (false) or `\"0x1\"` (true).',\r\n      ],\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Thrown when the provided value is not a valid hex type.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.assert(1)\r\n * // @error: Hex.InvalidHexTypeError: Value `1` of type `number` is an invalid hex type.\r\n * ```\r\n */\r\nexport class InvalidHexTypeError extends Errors.BaseError {\r\n  override readonly name = 'Hex.InvalidHexTypeError'\r\n\r\n  constructor(value: unknown) {\r\n    super(\r\n      `Value \\`${typeof value === 'object' ? Json.stringify(value) : value}\\` of type \\`${typeof value}\\` is an invalid hex type.`,\r\n      {\r\n        metaMessages: ['Hex types must be represented as `\"0x${string}\"`.'],\r\n      },\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Thrown when the provided hex value is invalid.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.assert('0x0123456789abcdefg')\r\n * // @error: Hex.InvalidHexValueError: Value `0x0123456789abcdefg` is an invalid hex value.\r\n * // @error: Hex values must start with `\"0x\"` and contain only hexadecimal characters (0-9, a-f, A-F).\r\n * ```\r\n */\r\nexport class InvalidHexValueError extends Errors.BaseError {\r\n  override readonly name = 'Hex.InvalidHexValueError'\r\n\r\n  constructor(value: unknown) {\r\n    super(`Value \\`${value}\\` is an invalid hex value.`, {\r\n      metaMessages: [\r\n        'Hex values must start with `\"0x\"` and contain only hexadecimal characters (0-9, a-f, A-F).',\r\n      ],\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Thrown when the provided hex value is an odd length.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Bytes } from 'ox'\r\n *\r\n * Bytes.fromHex('0xabcde')\r\n * // @error: Hex.InvalidLengthError: Hex value `\"0xabcde\"` is an odd length (5 nibbles).\r\n * ```\r\n */\r\nexport class InvalidLengthError extends Errors.BaseError {\r\n  override readonly name = 'Hex.InvalidLengthError'\r\n\r\n  constructor(value: Hex) {\r\n    super(\r\n      `Hex value \\`\"${value}\"\\` is an odd length (${value.length - 2} nibbles).`,\r\n      {\r\n        metaMessages: ['It must be an even length.'],\r\n      },\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Thrown when the size of the value exceeds the expected max size.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.fromString('Hello World!', { size: 8 })\r\n * // @error: Hex.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.\r\n * ```\r\n */\r\nexport class SizeOverflowError extends Errors.BaseError {\r\n  override readonly name = 'Hex.SizeOverflowError'\r\n\r\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\r\n    super(\r\n      `Size cannot exceed \\`${maxSize}\\` bytes. Given size: \\`${givenSize}\\` bytes.`,\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Thrown when the slice offset exceeds the bounds of the value.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.slice('0x0123456789', 6)\r\n * // @error: Hex.SliceOffsetOutOfBoundsError: Slice starting at offset `6` is out-of-bounds (size: `5`).\r\n * ```\r\n */\r\nexport class SliceOffsetOutOfBoundsError extends Errors.BaseError {\r\n  override readonly name = 'Hex.SliceOffsetOutOfBoundsError'\r\n\r\n  constructor({\r\n    offset,\r\n    position,\r\n    size,\r\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\r\n    super(\r\n      `Slice ${\r\n        position === 'start' ? 'starting' : 'ending'\r\n      } at offset \\`${offset}\\` is out-of-bounds (size: \\`${size}\\`).`,\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Thrown when the size of the value exceeds the pad size.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hex } from 'ox'\r\n *\r\n * Hex.padLeft('0x1a4e12a45a21323123aaa87a897a897a898a6567a578a867a98778a667a85a875a87a6a787a65a675a6a9', 32)\r\n * // @error: Hex.SizeExceedsPaddingSizeError: Hex size (`43`) exceeds padding size (`32`).\r\n * ```\r\n */\r\nexport class SizeExceedsPaddingSizeError extends Errors.BaseError {\r\n  override readonly name = 'Hex.SizeExceedsPaddingSizeError'\r\n\r\n  constructor({\r\n    size,\r\n    targetSize,\r\n    type,\r\n  }: {\r\n    size: number\r\n    targetSize: number\r\n    type: 'Hex' | 'Bytes'\r\n  }) {\r\n    super(\r\n      `${type.charAt(0).toUpperCase()}${type\r\n        .slice(1)\r\n        .toLowerCase()} size (\\`${size}\\`) exceeds padding size (\\`${targetSize}\\`).`,\r\n    )\r\n  }\r\n}\r\n", "import { ripemd160 as noble_ripemd160 } from '@noble/hashes/ripemd160'\r\nimport { keccak_256 as noble_keccak256 } from '@noble/hashes/sha3'\r\nimport { sha256 as noble_sha256 } from '@noble/hashes/sha256'\r\nimport * as Bytes from './Bytes.js'\r\nimport type * as Errors from './Errors.js'\r\nimport * as Hex from './Hex.js'\r\n\r\n/**\r\n * Calculates the [Keccak256](https://en.wikipedia.org/wiki/SHA-3) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\r\n *\r\n * This function is a re-export of `keccak_256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hash } from 'ox'\r\n *\r\n * Hash.keccak256('0xdeadbeef')\r\n * // @log: '0xd4fd4e189132273036449fc9e11198c739161b4c0116a9a2dccdfa1c492006f1'\r\n * ```\r\n *\r\n * @example\r\n * ### Calculate Hash of a String\r\n *\r\n * ```ts twoslash\r\n * import { Hash, Hex } from 'ox'\r\n *\r\n * Hash.keccak256(Hex.fromString('hello world'))\r\n * // @log: '0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0'\r\n * ```\r\n *\r\n * @example\r\n * ### Configure Return Type\r\n *\r\n * ```ts twoslash\r\n * import { Hash } from 'ox'\r\n *\r\n * Hash.keccak256('0xdeadbeef', { as: 'Bytes' })\r\n * // @log: Uint8Array [...]\r\n * ```\r\n *\r\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\r\n * @param options - Options.\r\n * @returns Keccak256 hash.\r\n */\r\nexport function keccak256<\r\n  value extends Hex.Hex | Bytes.Bytes,\r\n  as extends 'Hex' | 'Bytes' =\r\n    | (value extends Hex.Hex ? 'Hex' : never)\r\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\r\n>(\r\n  value: value | Hex.Hex | Bytes.Bytes,\r\n  options: keccak256.Options<as> = {},\r\n): keccak256.ReturnType<as> {\r\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\r\n  const bytes = noble_keccak256(Bytes.from(value))\r\n  if (as === 'Bytes') return bytes as never\r\n  return Hex.fromBytes(bytes) as never\r\n}\r\n\r\nexport declare namespace keccak256 {\r\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> = {\r\n    /** The return type. @default 'Hex' */\r\n    as?: as | 'Hex' | 'Bytes' | undefined\r\n  }\r\n\r\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> =\r\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\r\n    | (as extends 'Hex' ? Hex.Hex : never)\r\n\r\n  type ErrorType =\r\n    | Bytes.from.ErrorType\r\n    | Hex.fromBytes.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Calculates the [Ripemd160](https://en.wikipedia.org/wiki/RIPEMD) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\r\n *\r\n * This function is a re-export of `ripemd160` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hash } from 'ox'\r\n *\r\n * Hash.ripemd160('0xdeadbeef')\r\n * // '0x226821c2f5423e11fe9af68bd285c249db2e4b5a'\r\n * ```\r\n *\r\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\r\n * @param options - Options.\r\n * @returns Ripemd160 hash.\r\n */\r\nexport function ripemd160<\r\n  value extends Hex.Hex | Bytes.Bytes,\r\n  as extends 'Hex' | 'Bytes' =\r\n    | (value extends Hex.Hex ? 'Hex' : never)\r\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\r\n>(\r\n  value: value | Hex.Hex | Bytes.Bytes,\r\n  options: ripemd160.Options<as> = {},\r\n): ripemd160.ReturnType<as> {\r\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\r\n  const bytes = noble_ripemd160(Bytes.from(value))\r\n  if (as === 'Bytes') return bytes as never\r\n  return Hex.fromBytes(bytes) as never\r\n}\r\n\r\nexport declare namespace ripemd160 {\r\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> = {\r\n    /** The return type. @default 'Hex' */\r\n    as?: as | 'Hex' | 'Bytes' | undefined\r\n  }\r\n\r\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> =\r\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\r\n    | (as extends 'Hex' ? Hex.Hex : never)\r\n\r\n  type ErrorType =\r\n    | Bytes.from.ErrorType\r\n    | Hex.fromBytes.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Calculates the [Sha256](https://en.wikipedia.org/wiki/SHA-256) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\r\n *\r\n * This function is a re-export of `sha256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hash } from 'ox'\r\n *\r\n * Hash.sha256('0xdeadbeef')\r\n * // '0x5f78c33274e43fa9de5659265c1d917e25c03722dcb0b8d27db8d5feaa813953'\r\n * ```\r\n *\r\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\r\n * @param options - Options.\r\n * @returns Sha256 hash.\r\n */\r\nexport function sha256<\r\n  value extends Hex.Hex | Bytes.Bytes,\r\n  as extends 'Hex' | 'Bytes' =\r\n    | (value extends Hex.Hex ? 'Hex' : never)\r\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\r\n>(\r\n  value: value | Hex.Hex | Bytes.Bytes,\r\n  options: sha256.Options<as> = {},\r\n): sha256.ReturnType<as> {\r\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\r\n  const bytes = noble_sha256(Bytes.from(value))\r\n  if (as === 'Bytes') return bytes as never\r\n  return Hex.fromBytes(bytes) as never\r\n}\r\n\r\nexport declare namespace sha256 {\r\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex'> = {\r\n    /** The return type. @default 'Hex' */\r\n    as?: as | 'Hex' | 'Bytes' | undefined\r\n  }\r\n\r\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex'> =\r\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\r\n    | (as extends 'Hex' ? Hex.Hex : never)\r\n\r\n  type ErrorType =\r\n    | Bytes.from.ErrorType\r\n    | Hex.fromBytes.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Checks if a string is a valid hash value.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Hash } from 'ox'\r\n *\r\n * Hash.validate('0x')\r\n * // @log: false\r\n *\r\n * Hash.validate('0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0')\r\n * // @log: true\r\n * ```\r\n *\r\n * @param value - Value to check.\r\n * @returns Whether the value is a valid hash.\r\n */\r\nexport function validate(value: string): value is Hex.Hex {\r\n  return Hex.validate(value) && Hex.size(value) === 32\r\n}\r\n\r\nexport declare namespace validate {\r\n  type ErrorType =\r\n    | Hex.validate.ErrorType\r\n    | Hex.size.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n", "/**\r\n * @internal\r\n *\r\n * Map with a LRU (Least recently used) policy.\r\n * @see https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\r\n */\r\nexport class LruMap<value = unknown> extends Map<string, value> {\r\n  maxSize: number\r\n\r\n  constructor(size: number) {\r\n    super()\r\n    this.maxSize = size\r\n  }\r\n\r\n  override get(key: string) {\r\n    const value = super.get(key)\r\n\r\n    if (super.has(key) && value !== undefined) {\r\n      this.delete(key)\r\n      super.set(key, value)\r\n    }\r\n\r\n    return value\r\n  }\r\n\r\n  override set(key: string, value: value) {\r\n    super.set(key, value)\r\n    if (this.maxSize && this.size > this.maxSize) {\r\n      const firstKey = this.keys().next().value\r\n      if (firstKey) this.delete(firstKey)\r\n    }\r\n    return this\r\n  }\r\n}\r\n", "import type * as Address from './Address.js'\r\nimport { LruMap } from './internal/lru.js'\r\n\r\nconst caches = {\r\n  checksum: /*#__PURE__*/ new LruMap<Address.Address>(8192),\r\n}\r\n\r\nexport const checksum = caches.checksum\r\n\r\n/**\r\n * Clears all global caches.\r\n *\r\n * @example\r\n * ```ts\r\n * import { Caches } from 'ox'\r\n * Caches.clear()\r\n * ```\r\n */\r\nexport function clear() {\r\n  for (const cache of Object.values(caches)) cache.clear()\r\n}\r\n", "import type { Address as abitype_Address } from 'abitype'\r\nimport * as Bytes from './Bytes.js'\r\nimport * as Caches from './Caches.js'\r\nimport * as Errors from './Errors.js'\r\nimport * as Hash from './Hash.js'\r\nimport * as PublicKey from './PublicKey.js'\r\n\r\nconst addressRegex = /*#__PURE__*/ /^0x[a-fA-F0-9]{40}$/\r\n\r\n/** Root type for Address. */\r\nexport type Address = abitype_Address\r\n\r\n/**\r\n * Asserts that the given value is a valid {@link ox#Address.Address}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Address } from 'ox'\r\n *\r\n * Address.assert('0xA0Cf798816D4b9b9866b5330EEa46a18382f251e')\r\n * ```\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Address } from 'ox'\r\n *\r\n * Address.assert('0xdeadbeef')\r\n * // @error: InvalidAddressError: Address \"0xdeadbeef\" is invalid.\r\n * ```\r\n *\r\n * @param value - Value to assert if it is a valid address.\r\n * @param options - Assertion options.\r\n */\r\nexport function assert(\r\n  value: string,\r\n  options: assert.Options = {},\r\n): asserts value is Address {\r\n  const { strict = true } = options\r\n\r\n  if (!addressRegex.test(value))\r\n    throw new InvalidAddressError({\r\n      address: value,\r\n      cause: new InvalidInputError(),\r\n    })\r\n\r\n  if (strict) {\r\n    if (value.toLowerCase() === value) return\r\n    if (checksum(value as Address) !== value)\r\n      throw new InvalidAddressError({\r\n        address: value,\r\n        cause: new InvalidChecksumError(),\r\n      })\r\n  }\r\n}\r\n\r\nexport declare namespace assert {\r\n  type Options = {\r\n    /**\r\n     * Enables strict mode. Whether or not to compare the address against its checksum.\r\n     *\r\n     * @default true\r\n     */\r\n    strict?: boolean | undefined\r\n  }\r\n\r\n  type ErrorType = InvalidAddressError | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Computes the checksum address for the given {@link ox#Address.Address}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Address } from 'ox'\r\n *\r\n * Address.checksum('0xa0cf798816d4b9b9866b5330eea46a18382f251e')\r\n * // @log: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\r\n * ```\r\n *\r\n * @param address - The address to compute the checksum for.\r\n * @returns The checksummed address.\r\n */\r\nexport function checksum(address: string): Address {\r\n  if (Caches.checksum.has(address)) return Caches.checksum.get(address)!\r\n\r\n  assert(address, { strict: false })\r\n\r\n  const hexAddress = address.substring(2).toLowerCase()\r\n  const hash = Hash.keccak256(Bytes.fromString(hexAddress), { as: 'Bytes' })\r\n\r\n  const characters = hexAddress.split('')\r\n  for (let i = 0; i < 40; i += 2) {\r\n    if (hash[i >> 1]! >> 4 >= 8 && characters[i]) {\r\n      characters[i] = characters[i]!.toUpperCase()\r\n    }\r\n    if ((hash[i >> 1]! & 0x0f) >= 8 && characters[i + 1]) {\r\n      characters[i + 1] = characters[i + 1]!.toUpperCase()\r\n    }\r\n  }\r\n\r\n  const result = `0x${characters.join('')}` as const\r\n  Caches.checksum.set(address, result)\r\n  return result\r\n}\r\n\r\nexport declare namespace checksum {\r\n  type ErrorType =\r\n    | assert.ErrorType\r\n    | Hash.keccak256.ErrorType\r\n    | Bytes.fromString.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Converts a stringified address to a typed (checksummed) {@link ox#Address.Address}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Address } from 'ox'\r\n *\r\n * Address.from('0xa0cf798816d4b9b9866b5330eea46a18382f251e')\r\n * // @log: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\r\n * ```\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Address } from 'ox'\r\n *\r\n * Address.from('0xa0cf798816d4b9b9866b5330eea46a18382f251e', {\r\n *   checksum: false\r\n * })\r\n * // @log: '0xa0cf798816d4b9b9866b5330eea46a18382f251e'\r\n * ```\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Address } from 'ox'\r\n *\r\n * Address.from('hello')\r\n * // @error: InvalidAddressError: Address \"0xa\" is invalid.\r\n * ```\r\n *\r\n * @param address - An address string to convert to a typed Address.\r\n * @param options - Conversion options.\r\n * @returns The typed Address.\r\n */\r\nexport function from(address: string, options: from.Options = {}): Address {\r\n  const { checksum: checksumVal = false } = options\r\n  assert(address)\r\n  if (checksumVal) return checksum(address)\r\n  return address as Address\r\n}\r\n\r\nexport declare namespace from {\r\n  type Options = {\r\n    /**\r\n     * Whether to checksum the address.\r\n     *\r\n     * @default false\r\n     */\r\n    checksum?: boolean | undefined\r\n  }\r\n\r\n  type ErrorType =\r\n    | assert.ErrorType\r\n    | checksum.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Converts an ECDSA public key to an {@link ox#Address.Address}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Address, PublicKey } from 'ox'\r\n *\r\n * const publicKey = PublicKey.from(\r\n *   '0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5',\r\n * )\r\n * const address = Address.fromPublicKey(publicKey)\r\n * // @log: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266'\r\n * ```\r\n *\r\n * @param publicKey - The ECDSA public key to convert to an {@link ox#Address.Address}.\r\n * @param options - Conversion options.\r\n * @returns The {@link ox#Address.Address} corresponding to the public key.\r\n */\r\nexport function fromPublicKey(\r\n  publicKey: PublicKey.PublicKey,\r\n  options: fromPublicKey.Options = {},\r\n): Address {\r\n  const address = Hash.keccak256(\r\n    `0x${PublicKey.toHex(publicKey).slice(4)}`,\r\n  ).substring(26)\r\n  return from(`0x${address}`, options)\r\n}\r\n\r\nexport declare namespace fromPublicKey {\r\n  type Options = {\r\n    /**\r\n     * Whether to checksum the address.\r\n     *\r\n     * @default false\r\n     */\r\n    checksum?: boolean | undefined\r\n  }\r\n\r\n  type ErrorType =\r\n    | Hash.keccak256.ErrorType\r\n    | PublicKey.toHex.ErrorType\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Checks if two {@link ox#Address.Address} are equal.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Address } from 'ox'\r\n *\r\n * Address.isEqual(\r\n *   '0xa0cf798816d4b9b9866b5330eea46a18382f251e',\r\n *   '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\r\n * )\r\n * // @log: true\r\n * ```\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Address } from 'ox'\r\n *\r\n * Address.isEqual(\r\n *   '0xa0cf798816d4b9b9866b5330eea46a18382f251e',\r\n *   '0xA0Cf798816D4b9b9866b5330EEa46a18382f251f'\r\n * )\r\n * // @log: false\r\n * ```\r\n *\r\n * @param addressA - The first address to compare.\r\n * @param addressB - The second address to compare.\r\n * @returns Whether the addresses are equal.\r\n */\r\nexport function isEqual(addressA: Address, addressB: Address): boolean {\r\n  assert(addressA, { strict: false })\r\n  assert(addressB, { strict: false })\r\n  return addressA.toLowerCase() === addressB.toLowerCase()\r\n}\r\n\r\nexport declare namespace isEqual {\r\n  type ErrorType = assert.ErrorType | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Checks if the given address is a valid {@link ox#Address.Address}.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Address } from 'ox'\r\n *\r\n * Address.validate('0xA0Cf798816D4b9b9866b5330EEa46a18382f251e')\r\n * // @log: true\r\n * ```\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Address } from 'ox'\r\n *\r\n * Address.validate('0xdeadbeef')\r\n * // @log: false\r\n * ```\r\n *\r\n * @param address - Value to check if it is a valid address.\r\n * @param options - Check options.\r\n * @returns Whether the address is a valid address.\r\n */\r\nexport function validate(\r\n  address: string,\r\n  options: validate.Options = {},\r\n): address is Address {\r\n  const { strict = true } = options ?? {}\r\n  try {\r\n    assert(address, { strict })\r\n    return true\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nexport declare namespace validate {\r\n  type Options = {\r\n    /**\r\n     * Enables strict mode. Whether or not to compare the address against its checksum.\r\n     *\r\n     * @default true\r\n     */\r\n    strict?: boolean | undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Thrown when an address is invalid.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { Address } from 'ox'\r\n *\r\n * Address.from('0x123')\r\n * // @error: Address.InvalidAddressError: Address `0x123` is invalid.\r\n * ```\r\n */\r\nexport class InvalidAddressError<\r\n  cause extends InvalidInputError | InvalidChecksumError =\r\n    | InvalidInputError\r\n    | InvalidChecksumError,\r\n> extends Errors.BaseError<cause> {\r\n  override readonly name = 'Address.InvalidAddressError'\r\n\r\n  constructor({ address, cause }: { address: string; cause: cause }) {\r\n    super(`Address \"${address}\" is invalid.`, {\r\n      cause,\r\n    })\r\n  }\r\n}\r\n\r\n/** Thrown when an address is not a 20 byte (40 hexadecimal character) value. */\r\nexport class InvalidInputError extends Errors.BaseError {\r\n  override readonly name = 'Address.InvalidInputError'\r\n\r\n  constructor() {\r\n    super('Address is not a 20 byte (40 hexadecimal character) value.')\r\n  }\r\n}\r\n\r\n/** Thrown when an address does not match its checksum counterpart. */\r\nexport class InvalidChecksumError extends Errors.BaseError {\r\n  override readonly name = 'Address.InvalidChecksumError'\r\n\r\n  constructor() {\r\n    super('Address does not match its checksum counterpart.')\r\n  }\r\n}\r\n", "export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/\r\n\r\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\r\n// https://regexr.com/6va55\r\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\r\n\r\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\r\n// https://regexr.com/6v8hp\r\nexport const integerRegex =\r\n  /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\r\n\r\nexport const maxInt8 = 2n ** (8n - 1n) - 1n\r\nexport const maxInt16 = 2n ** (16n - 1n) - 1n\r\nexport const maxInt24 = 2n ** (24n - 1n) - 1n\r\nexport const maxInt32 = 2n ** (32n - 1n) - 1n\r\nexport const maxInt40 = 2n ** (40n - 1n) - 1n\r\nexport const maxInt48 = 2n ** (48n - 1n) - 1n\r\nexport const maxInt56 = 2n ** (56n - 1n) - 1n\r\nexport const maxInt64 = 2n ** (64n - 1n) - 1n\r\nexport const maxInt72 = 2n ** (72n - 1n) - 1n\r\nexport const maxInt80 = 2n ** (80n - 1n) - 1n\r\nexport const maxInt88 = 2n ** (88n - 1n) - 1n\r\nexport const maxInt96 = 2n ** (96n - 1n) - 1n\r\nexport const maxInt104 = 2n ** (104n - 1n) - 1n\r\nexport const maxInt112 = 2n ** (112n - 1n) - 1n\r\nexport const maxInt120 = 2n ** (120n - 1n) - 1n\r\nexport const maxInt128 = 2n ** (128n - 1n) - 1n\r\nexport const maxInt136 = 2n ** (136n - 1n) - 1n\r\nexport const maxInt144 = 2n ** (144n - 1n) - 1n\r\nexport const maxInt152 = 2n ** (152n - 1n) - 1n\r\nexport const maxInt160 = 2n ** (160n - 1n) - 1n\r\nexport const maxInt168 = 2n ** (168n - 1n) - 1n\r\nexport const maxInt176 = 2n ** (176n - 1n) - 1n\r\nexport const maxInt184 = 2n ** (184n - 1n) - 1n\r\nexport const maxInt192 = 2n ** (192n - 1n) - 1n\r\nexport const maxInt200 = 2n ** (200n - 1n) - 1n\r\nexport const maxInt208 = 2n ** (208n - 1n) - 1n\r\nexport const maxInt216 = 2n ** (216n - 1n) - 1n\r\nexport const maxInt224 = 2n ** (224n - 1n) - 1n\r\nexport const maxInt232 = 2n ** (232n - 1n) - 1n\r\nexport const maxInt240 = 2n ** (240n - 1n) - 1n\r\nexport const maxInt248 = 2n ** (248n - 1n) - 1n\r\nexport const maxInt256 = 2n ** (256n - 1n) - 1n\r\n\r\nexport const minInt8 = -(2n ** (8n - 1n))\r\nexport const minInt16 = -(2n ** (16n - 1n))\r\nexport const minInt24 = -(2n ** (24n - 1n))\r\nexport const minInt32 = -(2n ** (32n - 1n))\r\nexport const minInt40 = -(2n ** (40n - 1n))\r\nexport const minInt48 = -(2n ** (48n - 1n))\r\nexport const minInt56 = -(2n ** (56n - 1n))\r\nexport const minInt64 = -(2n ** (64n - 1n))\r\nexport const minInt72 = -(2n ** (72n - 1n))\r\nexport const minInt80 = -(2n ** (80n - 1n))\r\nexport const minInt88 = -(2n ** (88n - 1n))\r\nexport const minInt96 = -(2n ** (96n - 1n))\r\nexport const minInt104 = -(2n ** (104n - 1n))\r\nexport const minInt112 = -(2n ** (112n - 1n))\r\nexport const minInt120 = -(2n ** (120n - 1n))\r\nexport const minInt128 = -(2n ** (128n - 1n))\r\nexport const minInt136 = -(2n ** (136n - 1n))\r\nexport const minInt144 = -(2n ** (144n - 1n))\r\nexport const minInt152 = -(2n ** (152n - 1n))\r\nexport const minInt160 = -(2n ** (160n - 1n))\r\nexport const minInt168 = -(2n ** (168n - 1n))\r\nexport const minInt176 = -(2n ** (176n - 1n))\r\nexport const minInt184 = -(2n ** (184n - 1n))\r\nexport const minInt192 = -(2n ** (192n - 1n))\r\nexport const minInt200 = -(2n ** (200n - 1n))\r\nexport const minInt208 = -(2n ** (208n - 1n))\r\nexport const minInt216 = -(2n ** (216n - 1n))\r\nexport const minInt224 = -(2n ** (224n - 1n))\r\nexport const minInt232 = -(2n ** (232n - 1n))\r\nexport const minInt240 = -(2n ** (240n - 1n))\r\nexport const minInt248 = -(2n ** (248n - 1n))\r\nexport const minInt256 = -(2n ** (256n - 1n))\r\n\r\nexport const maxUint8 = 2n ** 8n - 1n\r\nexport const maxUint16 = 2n ** 16n - 1n\r\nexport const maxUint24 = 2n ** 24n - 1n\r\nexport const maxUint32 = 2n ** 32n - 1n\r\nexport const maxUint40 = 2n ** 40n - 1n\r\nexport const maxUint48 = 2n ** 48n - 1n\r\nexport const maxUint56 = 2n ** 56n - 1n\r\nexport const maxUint64 = 2n ** 64n - 1n\r\nexport const maxUint72 = 2n ** 72n - 1n\r\nexport const maxUint80 = 2n ** 80n - 1n\r\nexport const maxUint88 = 2n ** 88n - 1n\r\nexport const maxUint96 = 2n ** 96n - 1n\r\nexport const maxUint104 = 2n ** 104n - 1n\r\nexport const maxUint112 = 2n ** 112n - 1n\r\nexport const maxUint120 = 2n ** 120n - 1n\r\nexport const maxUint128 = 2n ** 128n - 1n\r\nexport const maxUint136 = 2n ** 136n - 1n\r\nexport const maxUint144 = 2n ** 144n - 1n\r\nexport const maxUint152 = 2n ** 152n - 1n\r\nexport const maxUint160 = 2n ** 160n - 1n\r\nexport const maxUint168 = 2n ** 168n - 1n\r\nexport const maxUint176 = 2n ** 176n - 1n\r\nexport const maxUint184 = 2n ** 184n - 1n\r\nexport const maxUint192 = 2n ** 192n - 1n\r\nexport const maxUint200 = 2n ** 200n - 1n\r\nexport const maxUint208 = 2n ** 208n - 1n\r\nexport const maxUint216 = 2n ** 216n - 1n\r\nexport const maxUint224 = 2n ** 224n - 1n\r\nexport const maxUint232 = 2n ** 232n - 1n\r\nexport const maxUint240 = 2n ** 240n - 1n\r\nexport const maxUint248 = 2n ** 248n - 1n\r\nexport const maxUint256 = 2n ** 256n - 1n\r\n", "import type { Bytes } from '../Bytes.js'\r\nimport * as Errors from '../Errors.js'\r\n\r\n/** @internal */\r\nexport type Cursor = {\r\n  bytes: Bytes\r\n  dataView: DataView\r\n  position: number\r\n  positionReadCount: Map<number, number>\r\n  recursiveReadCount: number\r\n  recursiveReadLimit: number\r\n  remaining: number\r\n  assertReadLimit(position?: number): void\r\n  assertPosition(position: number): void\r\n  decrementPosition(offset: number): void\r\n  getReadCount(position?: number): number\r\n  incrementPosition(offset: number): void\r\n  inspectByte(position?: number): Bytes[number]\r\n  inspectBytes(length: number, position?: number): Bytes\r\n  inspectUint8(position?: number): number\r\n  inspectUint16(position?: number): number\r\n  inspectUint24(position?: number): number\r\n  inspectUint32(position?: number): number\r\n  pushByte(byte: Bytes[number]): void\r\n  pushBytes(bytes: Bytes): void\r\n  pushUint8(value: number): void\r\n  pushUint16(value: number): void\r\n  pushUint24(value: number): void\r\n  pushUint32(value: number): void\r\n  readByte(): Bytes[number]\r\n  readBytes(length: number, size?: number): Bytes\r\n  readUint8(): number\r\n  readUint16(): number\r\n  readUint24(): number\r\n  readUint32(): number\r\n  setPosition(position: number): () => void\r\n  _touch(): void\r\n}\r\n\r\nconst staticCursor: Cursor = /*#__PURE__*/ {\r\n  bytes: new Uint8Array(),\r\n  dataView: new DataView(new ArrayBuffer(0)),\r\n  position: 0,\r\n  positionReadCount: new Map(),\r\n  recursiveReadCount: 0,\r\n  recursiveReadLimit: Number.POSITIVE_INFINITY,\r\n  assertReadLimit() {\r\n    if (this.recursiveReadCount >= this.recursiveReadLimit)\r\n      throw new RecursiveReadLimitExceededError({\r\n        count: this.recursiveReadCount + 1,\r\n        limit: this.recursiveReadLimit,\r\n      })\r\n  },\r\n  assertPosition(position) {\r\n    if (position < 0 || position > this.bytes.length - 1)\r\n      throw new PositionOutOfBoundsError({\r\n        length: this.bytes.length,\r\n        position,\r\n      })\r\n  },\r\n  decrementPosition(offset) {\r\n    if (offset < 0) throw new NegativeOffsetError({ offset })\r\n    const position = this.position - offset\r\n    this.assertPosition(position)\r\n    this.position = position\r\n  },\r\n  getReadCount(position) {\r\n    return this.positionReadCount.get(position || this.position) || 0\r\n  },\r\n  incrementPosition(offset) {\r\n    if (offset < 0) throw new NegativeOffsetError({ offset })\r\n    const position = this.position + offset\r\n    this.assertPosition(position)\r\n    this.position = position\r\n  },\r\n  inspectByte(position_) {\r\n    const position = position_ ?? this.position\r\n    this.assertPosition(position)\r\n    return this.bytes[position]!\r\n  },\r\n  inspectBytes(length, position_) {\r\n    const position = position_ ?? this.position\r\n    this.assertPosition(position + length - 1)\r\n    return this.bytes.subarray(position, position + length)\r\n  },\r\n  inspectUint8(position_) {\r\n    const position = position_ ?? this.position\r\n    this.assertPosition(position)\r\n    return this.bytes[position]!\r\n  },\r\n  inspectUint16(position_) {\r\n    const position = position_ ?? this.position\r\n    this.assertPosition(position + 1)\r\n    return this.dataView.getUint16(position)\r\n  },\r\n  inspectUint24(position_) {\r\n    const position = position_ ?? this.position\r\n    this.assertPosition(position + 2)\r\n    return (\r\n      (this.dataView.getUint16(position) << 8) +\r\n      this.dataView.getUint8(position + 2)\r\n    )\r\n  },\r\n  inspectUint32(position_) {\r\n    const position = position_ ?? this.position\r\n    this.assertPosition(position + 3)\r\n    return this.dataView.getUint32(position)\r\n  },\r\n  pushByte(byte: Bytes[number]) {\r\n    this.assertPosition(this.position)\r\n    this.bytes[this.position] = byte\r\n    this.position++\r\n  },\r\n  pushBytes(bytes: Bytes) {\r\n    this.assertPosition(this.position + bytes.length - 1)\r\n    this.bytes.set(bytes, this.position)\r\n    this.position += bytes.length\r\n  },\r\n  pushUint8(value: number) {\r\n    this.assertPosition(this.position)\r\n    this.bytes[this.position] = value\r\n    this.position++\r\n  },\r\n  pushUint16(value: number) {\r\n    this.assertPosition(this.position + 1)\r\n    this.dataView.setUint16(this.position, value)\r\n    this.position += 2\r\n  },\r\n  pushUint24(value: number) {\r\n    this.assertPosition(this.position + 2)\r\n    this.dataView.setUint16(this.position, value >> 8)\r\n    this.dataView.setUint8(this.position + 2, value & ~4294967040)\r\n    this.position += 3\r\n  },\r\n  pushUint32(value: number) {\r\n    this.assertPosition(this.position + 3)\r\n    this.dataView.setUint32(this.position, value)\r\n    this.position += 4\r\n  },\r\n  readByte() {\r\n    this.assertReadLimit()\r\n    this._touch()\r\n    const value = this.inspectByte()\r\n    this.position++\r\n    return value\r\n  },\r\n  readBytes(length, size) {\r\n    this.assertReadLimit()\r\n    this._touch()\r\n    const value = this.inspectBytes(length)\r\n    this.position += size ?? length\r\n    return value\r\n  },\r\n  readUint8() {\r\n    this.assertReadLimit()\r\n    this._touch()\r\n    const value = this.inspectUint8()\r\n    this.position += 1\r\n    return value\r\n  },\r\n  readUint16() {\r\n    this.assertReadLimit()\r\n    this._touch()\r\n    const value = this.inspectUint16()\r\n    this.position += 2\r\n    return value\r\n  },\r\n  readUint24() {\r\n    this.assertReadLimit()\r\n    this._touch()\r\n    const value = this.inspectUint24()\r\n    this.position += 3\r\n    return value\r\n  },\r\n  readUint32() {\r\n    this.assertReadLimit()\r\n    this._touch()\r\n    const value = this.inspectUint32()\r\n    this.position += 4\r\n    return value\r\n  },\r\n  get remaining() {\r\n    return this.bytes.length - this.position\r\n  },\r\n  setPosition(position) {\r\n    const oldPosition = this.position\r\n    this.assertPosition(position)\r\n    this.position = position\r\n    return () => (this.position = oldPosition)\r\n  },\r\n  _touch() {\r\n    if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return\r\n    const count = this.getReadCount()\r\n    this.positionReadCount.set(this.position, count + 1)\r\n    if (count > 0) this.recursiveReadCount++\r\n  },\r\n}\r\n\r\n/** @internal */\r\nexport function create(\r\n  bytes: Bytes,\r\n  { recursiveReadLimit = 8_192 }: create.Config = {},\r\n): Cursor {\r\n  const cursor: Cursor = Object.create(staticCursor)\r\n  cursor.bytes = bytes\r\n  cursor.dataView = new DataView(\r\n    bytes.buffer,\r\n    bytes.byteOffset,\r\n    bytes.byteLength,\r\n  )\r\n  cursor.positionReadCount = new Map()\r\n  cursor.recursiveReadLimit = recursiveReadLimit\r\n  return cursor\r\n}\r\n\r\n/** @internal */\r\nexport declare namespace create {\r\n  type Config = { recursiveReadLimit?: number | undefined }\r\n\r\n  type ErrorType = Errors.GlobalErrorType\r\n}\r\n\r\n/** @internal */\r\nexport class NegativeOffsetError extends Errors.BaseError {\r\n  override readonly name = 'Cursor.NegativeOffsetError'\r\n\r\n  constructor({ offset }: { offset: number }) {\r\n    super(`Offset \\`${offset}\\` cannot be negative.`)\r\n  }\r\n}\r\n\r\n/** @internal */\r\nexport class PositionOutOfBoundsError extends Errors.BaseError {\r\n  override readonly name = 'Cursor.PositionOutOfBoundsError'\r\n\r\n  constructor({ length, position }: { length: number; position: number }) {\r\n    super(\r\n      `Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`,\r\n    )\r\n  }\r\n}\r\n\r\n/** @internal */\r\nexport class RecursiveReadLimitExceededError extends Errors.BaseError {\r\n  override readonly name = 'Cursor.RecursiveReadLimitExceededError'\r\n\r\n  constructor({ count, limit }: { count: number; limit: number }) {\r\n    super(\r\n      `Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`,\r\n    )\r\n  }\r\n}\r\n", "import * as abitype from 'abitype'\r\nimport * as Address from './Address.js'\r\nimport * as Bytes from './Bytes.js'\r\nimport * as Errors from './Errors.js'\r\nimport * as Hex from './Hex.js'\r\nimport * as Solidity from './Solidity.js'\r\nimport * as internal from './internal/abiParameters.js'\r\nimport * as Cursor from './internal/cursor.js'\r\n\r\n/** Root type for ABI parameters. */\r\nexport type AbiParameters = readonly abitype.AbiParameter[]\r\n\r\n/** A parameter on an {@link ox#AbiParameters.AbiParameters}. */\r\nexport type Parameter = abitype.AbiParameter\r\n\r\n/** A packed ABI type. */\r\nexport type PackedAbiType =\r\n  | abitype.SolidityAddress\r\n  | abitype.SolidityBool\r\n  | abitype.SolidityBytes\r\n  | abitype.SolidityInt\r\n  | abitype.SolidityString\r\n  | abitype.SolidityArrayWithoutTuple\r\n\r\n/**\r\n * Decodes ABI-encoded data into its respective primitive values based on ABI Parameters.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n *\r\n * const data = AbiParameters.decode(\r\n *   AbiParameters.from(['string', 'uint', 'bool']),\r\n *   '0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000',\r\n * )\r\n * // @log: ['wagmi', 420n, true]\r\n * ```\r\n *\r\n * @example\r\n * ### JSON Parameters\r\n *\r\n * You can pass **JSON ABI** Parameters:\r\n *\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n *\r\n * const data = AbiParameters.decode(\r\n *   [\r\n *     { name: 'x', type: 'string' },\r\n *     { name: 'y', type: 'uint' },\r\n *     { name: 'z', type: 'bool' },\r\n *   ],\r\n *   '0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000',\r\n * )\r\n * // @log: ['wagmi', 420n, true]\r\n * ```\r\n *\r\n * @param parameters - The set of ABI parameters to decode, in the shape of the `inputs` or `outputs` attribute of an ABI Item. These parameters must include valid [ABI types](https://docs.soliditylang.org/en/latest/types.html).\r\n * @param data - ABI encoded data.\r\n * @param options - Decoding options.\r\n * @returns Array of decoded values.\r\n */\r\nexport function decode<\r\n  const parameters extends AbiParameters,\r\n  as extends 'Object' | 'Array' = 'Array',\r\n>(\r\n  parameters: parameters,\r\n  data: Bytes.Bytes | Hex.Hex,\r\n  options?: decode.Options<as>,\r\n): decode.ReturnType<parameters, as>\r\n\r\n// eslint-disable-next-line jsdoc/require-jsdoc\r\nexport function decode(\r\n  parameters: AbiParameters,\r\n  data: Bytes.Bytes | Hex.Hex,\r\n  options: {\r\n    as?: 'Array' | 'Object' | undefined\r\n    checksumAddress?: boolean | undefined\r\n  } = {},\r\n): readonly unknown[] | Record<string, unknown> {\r\n  const { as = 'Array', checksumAddress = false } = options\r\n\r\n  const bytes = typeof data === 'string' ? Bytes.fromHex(data) : data\r\n  const cursor = Cursor.create(bytes)\r\n\r\n  if (Bytes.size(bytes) === 0 && parameters.length > 0)\r\n    throw new ZeroDataError()\r\n  if (Bytes.size(bytes) && Bytes.size(bytes) < 32)\r\n    throw new DataSizeTooSmallError({\r\n      data: typeof data === 'string' ? data : Hex.fromBytes(data),\r\n      parameters: parameters as readonly Parameter[],\r\n      size: Bytes.size(bytes),\r\n    })\r\n\r\n  let consumed = 0\r\n  const values: any = as === 'Array' ? [] : {}\r\n  for (let i = 0; i < parameters.length; ++i) {\r\n    const param = parameters[i] as Parameter\r\n    cursor.setPosition(consumed)\r\n    const [data, consumed_] = internal.decodeParameter(cursor, param, {\r\n      checksumAddress,\r\n      staticPosition: 0,\r\n    })\r\n    consumed += consumed_\r\n    if (as === 'Array') values.push(data)\r\n    else values[param.name ?? i] = data\r\n  }\r\n  return values\r\n}\r\n\r\nexport declare namespace decode {\r\n  type Options<as extends 'Object' | 'Array'> = {\r\n    /**\r\n     * Whether the decoded values should be returned as an `Object` or `Array`.\r\n     *\r\n     * @default \"Array\"\r\n     */\r\n    as?: as | 'Object' | 'Array' | undefined\r\n    /**\r\n     * Whether decoded addresses should be checksummed.\r\n     *\r\n     * @default false\r\n     */\r\n    checksumAddress?: boolean | undefined\r\n  }\r\n\r\n  type ReturnType<\r\n    parameters extends AbiParameters = AbiParameters,\r\n    as extends 'Object' | 'Array' = 'Array',\r\n  > = parameters extends readonly []\r\n    ? as extends 'Object'\r\n      ? {}\r\n      : []\r\n    : as extends 'Object'\r\n      ? internal.ToObject<parameters>\r\n      : internal.ToPrimitiveTypes<parameters>\r\n\r\n  type ErrorType =\r\n    | Bytes.fromHex.ErrorType\r\n    | internal.decodeParameter.ErrorType\r\n    | ZeroDataError\r\n    | DataSizeTooSmallError\r\n    | Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Encodes primitive values into ABI encoded data as per the [Application Binary Interface (ABI) Specification](https://docs.soliditylang.org/en/latest/abi-spec).\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n *\r\n * const data = AbiParameters.encode(\r\n *   AbiParameters.from(['string', 'uint', 'bool']),\r\n *   ['wagmi', 420n, true],\r\n * )\r\n * ```\r\n *\r\n * @example\r\n * ### JSON Parameters\r\n *\r\n * Specify **JSON ABI** Parameters as schema:\r\n *\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n *\r\n * const data = AbiParameters.encode(\r\n *   [\r\n *     { type: 'string', name: 'name' },\r\n *     { type: 'uint', name: 'age' },\r\n *     { type: 'bool', name: 'isOwner' },\r\n *   ],\r\n *   ['wagmi', 420n, true],\r\n * )\r\n * ```\r\n *\r\n * @param parameters - The set of ABI parameters to encode, in the shape of the `inputs` or `outputs` attribute of an ABI Item. These parameters must include valid [ABI types](https://docs.soliditylang.org/en/latest/types.html).\r\n * @param values - The set of primitive values that correspond to the ABI types defined in `parameters`.\r\n * @returns ABI encoded data.\r\n */\r\nexport function encode<\r\n  const parameters extends AbiParameters | readonly unknown[],\r\n>(\r\n  parameters: parameters,\r\n  values: parameters extends AbiParameters\r\n    ? internal.ToPrimitiveTypes<parameters>\r\n    : never,\r\n  options?: encode.Options,\r\n): Hex.Hex {\r\n  const { checksumAddress = false } = options ?? {}\r\n\r\n  if (parameters.length !== values.length)\r\n    throw new LengthMismatchError({\r\n      expectedLength: parameters.length as number,\r\n      givenLength: values.length as any,\r\n    })\r\n  // Prepare the parameters to determine dynamic types to encode.\r\n  const preparedParameters = internal.prepareParameters({\r\n    checksumAddress,\r\n    parameters: parameters as readonly Parameter[],\r\n    values: values as any,\r\n  })\r\n  const data = internal.encode(preparedParameters)\r\n  if (data.length === 0) return '0x'\r\n  return data\r\n}\r\n\r\nexport declare namespace encode {\r\n  type ErrorType =\r\n    | LengthMismatchError\r\n    | internal.encode.ErrorType\r\n    | internal.prepareParameters.ErrorType\r\n    | Errors.GlobalErrorType\r\n\r\n  type Options = {\r\n    /**\r\n     * Whether addresses should be checked against their checksum.\r\n     *\r\n     * @default false\r\n     */\r\n    checksumAddress?: boolean | undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Encodes an array of primitive values to a [packed ABI encoding](https://docs.soliditylang.org/en/latest/abi-spec.html#non-standard-packed-mode).\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n *\r\n * const encoded = AbiParameters.encodePacked(\r\n *   ['address', 'string'],\r\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 'hello world'],\r\n * )\r\n * // @log: '0xd8da6bf26964af9d7eed9e03e53415d37aa9604568656c6c6f20776f726c64'\r\n * ```\r\n *\r\n * @param types - Set of ABI types to pack encode.\r\n * @param values - The set of primitive values that correspond to the ABI types defined in `types`.\r\n * @returns The encoded packed data.\r\n */\r\nexport function encodePacked<\r\n  const packedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\r\n>(types: packedAbiTypes, values: encodePacked.Values<packedAbiTypes>): Hex.Hex {\r\n  if (types.length !== values.length)\r\n    throw new LengthMismatchError({\r\n      expectedLength: types.length as number,\r\n      givenLength: values.length as number,\r\n    })\r\n\r\n  const data: Hex.Hex[] = []\r\n  for (let i = 0; i < (types as unknown[]).length; i++) {\r\n    const type = types[i]\r\n    const value = values[i]\r\n    data.push(encodePacked.encode(type, value))\r\n  }\r\n  return Hex.concat(...data)\r\n}\r\n\r\nexport namespace encodePacked {\r\n  export type ErrorType =\r\n    | Hex.concat.ErrorType\r\n    | LengthMismatchError\r\n    | Errors.GlobalErrorType\r\n\r\n  export type Values<\r\n    packedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\r\n  > = {\r\n    [key in keyof packedAbiTypes]: packedAbiTypes[key] extends abitype.AbiType\r\n      ? abitype.AbiParameterToPrimitiveType<{ type: packedAbiTypes[key] }>\r\n      : unknown\r\n  }\r\n\r\n  // eslint-disable-next-line jsdoc/require-jsdoc\r\n  export function encode<const packedAbiType extends PackedAbiType | unknown>(\r\n    type: packedAbiType,\r\n    value: Values<[packedAbiType]>[0],\r\n    isArray = false,\r\n  ): Hex.Hex {\r\n    if (type === 'address') {\r\n      const address = value as Address.Address\r\n      Address.assert(address)\r\n      return Hex.padLeft(\r\n        address.toLowerCase() as Hex.Hex,\r\n        isArray ? 32 : 0,\r\n      ) as Address.Address\r\n    }\r\n    if (type === 'string') return Hex.fromString(value as string)\r\n    if (type === 'bytes') return value as Hex.Hex\r\n    if (type === 'bool')\r\n      return Hex.padLeft(Hex.fromBoolean(value as boolean), isArray ? 32 : 1)\r\n\r\n    const intMatch = (type as string).match(Solidity.integerRegex)\r\n    if (intMatch) {\r\n      const [_type, baseType, bits = '256'] = intMatch\r\n      const size = Number.parseInt(bits) / 8\r\n      return Hex.fromNumber(value as number, {\r\n        size: isArray ? 32 : size,\r\n        signed: baseType === 'int',\r\n      })\r\n    }\r\n\r\n    const bytesMatch = (type as string).match(Solidity.bytesRegex)\r\n    if (bytesMatch) {\r\n      const [_type, size] = bytesMatch\r\n      if (Number.parseInt(size!) !== ((value as Hex.Hex).length - 2) / 2)\r\n        throw new BytesSizeMismatchError({\r\n          expectedSize: Number.parseInt(size!),\r\n          value: value as Hex.Hex,\r\n        })\r\n      return Hex.padRight(value as Hex.Hex, isArray ? 32 : 0) as Hex.Hex\r\n    }\r\n\r\n    const arrayMatch = (type as string).match(Solidity.arrayRegex)\r\n    if (arrayMatch && Array.isArray(value)) {\r\n      const [_type, childType] = arrayMatch\r\n      const data: Hex.Hex[] = []\r\n      for (let i = 0; i < value.length; i++) {\r\n        data.push(encode(childType, value[i], true))\r\n      }\r\n      if (data.length === 0) return '0x'\r\n      return Hex.concat(...data)\r\n    }\r\n\r\n    throw new InvalidTypeError(type as string)\r\n  }\r\n}\r\n\r\n/**\r\n * Formats {@link ox#AbiParameters.AbiParameters} into **Human Readable ABI Parameters**.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n *\r\n * const formatted = AbiParameters.format([\r\n *   {\r\n *     name: 'spender',\r\n *     type: 'address',\r\n *   },\r\n *   {\r\n *     name: 'amount',\r\n *     type: 'uint256',\r\n *   },\r\n * ])\r\n *\r\n * formatted\r\n * //    ^?\r\n *\r\n *\r\n * ```\r\n *\r\n * @param parameters - The ABI Parameters to format.\r\n * @returns The formatted ABI Parameters  .\r\n */\r\nexport function format<\r\n  const parameters extends readonly [\r\n    Parameter | abitype.AbiEventParameter,\r\n    ...(readonly (Parameter | abitype.AbiEventParameter)[]),\r\n  ],\r\n>(\r\n  parameters:\r\n    | parameters\r\n    | readonly [\r\n        Parameter | abitype.AbiEventParameter,\r\n        ...(readonly (Parameter | abitype.AbiEventParameter)[]),\r\n      ],\r\n): abitype.FormatAbiParameters<parameters> {\r\n  return abitype.formatAbiParameters(parameters)\r\n}\r\n\r\nexport declare namespace format {\r\n  type ErrorType = Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Parses arbitrary **JSON ABI Parameters** or **Human Readable ABI Parameters** into typed {@link ox#AbiParameters.AbiParameters}.\r\n *\r\n * @example\r\n * ### JSON Parameters\r\n *\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n *\r\n * const parameters = AbiParameters.from([\r\n *   {\r\n *     name: 'spender',\r\n *     type: 'address',\r\n *   },\r\n *   {\r\n *     name: 'amount',\r\n *     type: 'uint256',\r\n *   },\r\n * ])\r\n *\r\n * parameters\r\n * //^?\r\n *\r\n *\r\n *\r\n *\r\n *\r\n *\r\n *\r\n * ```\r\n *\r\n * @example\r\n * ### Human Readable Parameters\r\n *\r\n * Human Readable ABI Parameters can be parsed into a typed {@link ox#AbiParameters.AbiParameters}:\r\n *\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n *\r\n * const parameters = AbiParameters.from('address spender, uint256 amount')\r\n *\r\n * parameters\r\n * //^?\r\n *\r\n *\r\n *\r\n *\r\n *\r\n *\r\n *\r\n * ```\r\n *\r\n * @example\r\n * It is possible to specify `struct`s along with your definitions:\r\n *\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n *\r\n * const parameters = AbiParameters.from([\r\n *   'struct Foo { address spender; uint256 amount; }', // [!code hl]\r\n *   'Foo foo, address bar',\r\n * ])\r\n *\r\n * parameters\r\n * //^?\r\n *\r\n *\r\n *\r\n *\r\n *\r\n *\r\n *\r\n *\r\n *\r\n *\r\n *\r\n *\r\n * ```\r\n *\r\n *\r\n *\r\n * @param parameters - The ABI Parameters to parse.\r\n * @returns The typed ABI Parameters.\r\n */\r\nexport function from<\r\n  const parameters extends AbiParameters | string | readonly string[],\r\n>(\r\n  parameters: parameters | AbiParameters | string | readonly string[],\r\n): from.ReturnType<parameters> {\r\n  if (Array.isArray(parameters) && typeof parameters[0] === 'string')\r\n    return abitype.parseAbiParameters(parameters) as never\r\n  if (typeof parameters === 'string')\r\n    return abitype.parseAbiParameters(parameters) as never\r\n  return parameters as never\r\n}\r\n\r\nexport declare namespace from {\r\n  type ReturnType<\r\n    parameters extends AbiParameters | string | readonly string[],\r\n  > = parameters extends string\r\n    ? abitype.ParseAbiParameters<parameters>\r\n    : parameters extends readonly string[]\r\n      ? abitype.ParseAbiParameters<parameters>\r\n      : parameters\r\n\r\n  type ErrorType = Errors.GlobalErrorType\r\n}\r\n\r\n/**\r\n * Throws when the data size is too small for the given parameters.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n *\r\n * AbiParameters.decode([{ type: 'uint256' }], '0x010f')\r\n * //                                             ↑ ❌ 2 bytes\r\n * // @error: AbiParameters.DataSizeTooSmallError: Data size of 2 bytes is too small for given parameters.\r\n * // @error: Params: (uint256)\r\n * // @error: Data:   0x010f (2 bytes)\r\n * ```\r\n *\r\n * ### Solution\r\n *\r\n * Pass a valid data size.\r\n *\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n *\r\n * AbiParameters.decode([{ type: 'uint256' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\r\n * //                                             ↑ ✅ 32 bytes\r\n * ```\r\n */\r\nexport class DataSizeTooSmallError extends Errors.BaseError {\r\n  override readonly name = 'AbiParameters.DataSizeTooSmallError'\r\n  constructor({\r\n    data,\r\n    parameters,\r\n    size,\r\n  }: { data: Hex.Hex; parameters: readonly Parameter[]; size: number }) {\r\n    super(`Data size of ${size} bytes is too small for given parameters.`, {\r\n      metaMessages: [\r\n        `Params: (${abitype.formatAbiParameters(parameters as readonly [Parameter])})`,\r\n        `Data:   ${data} (${size} bytes)`,\r\n      ],\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Throws when zero data is provided, but data is expected.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n *\r\n * AbiParameters.decode([{ type: 'uint256' }], '0x')\r\n * //                                           ↑ ❌ zero data\r\n * // @error: AbiParameters.DataSizeTooSmallError: Data size of 2 bytes is too small for given parameters.\r\n * // @error: Params: (uint256)\r\n * // @error: Data:   0x010f (2 bytes)\r\n * ```\r\n *\r\n * ### Solution\r\n *\r\n * Pass valid data.\r\n *\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n *\r\n * AbiParameters.decode([{ type: 'uint256' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\r\n * //                                             ↑ ✅ 32 bytes\r\n * ```\r\n */\r\nexport class ZeroDataError extends Errors.BaseError {\r\n  override readonly name = 'AbiParameters.ZeroDataError'\r\n  constructor() {\r\n    super('Cannot decode zero data (\"0x\") with ABI parameters.')\r\n  }\r\n}\r\n\r\n/**\r\n * The length of the array value does not match the length specified in the corresponding ABI parameter.\r\n *\r\n * ### Example\r\n *\r\n * ```ts twoslash\r\n * // @noErrors\r\n * import { AbiParameters } from 'ox'\r\n * // ---cut---\r\n * AbiParameters.encode(AbiParameters.from('uint256[3]'), [[69n, 420n]])\r\n * //                                               ↑ expected: 3  ↑ ❌ length: 2\r\n * // @error: AbiParameters.ArrayLengthMismatchError: ABI encoding array length mismatch\r\n * // @error: for type `uint256[3]`. Expected: `3`. Given: `2`.\r\n * ```\r\n *\r\n * ### Solution\r\n *\r\n * Pass an array of the correct length.\r\n *\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n * // ---cut---\r\n * AbiParameters.encode(AbiParameters.from(['uint256[3]']), [[69n, 420n, 69n]])\r\n * //                                                         ↑ ✅ length: 3\r\n * ```\r\n */\r\nexport class ArrayLengthMismatchError extends Errors.BaseError {\r\n  override readonly name = 'AbiParameters.ArrayLengthMismatchError'\r\n  constructor({\r\n    expectedLength,\r\n    givenLength,\r\n    type,\r\n  }: { expectedLength: number; givenLength: number; type: string }) {\r\n    super(\r\n      `Array length mismatch for type \\`${type}\\`. Expected: \\`${expectedLength}\\`. Given: \\`${givenLength}\\`.`,\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * The size of the bytes value does not match the size specified in the corresponding ABI parameter.\r\n *\r\n * ### Example\r\n *\r\n * ```ts twoslash\r\n * // @noErrors\r\n * import { AbiParameters } from 'ox'\r\n * // ---cut---\r\n * AbiParameters.encode(AbiParameters.from('bytes8'), [['0xdeadbeefdeadbeefdeadbeef']])\r\n * //                                            ↑ expected: 8 bytes  ↑ ❌ size: 12 bytes\r\n * // @error: BytesSizeMismatchError: Size of bytes \"0xdeadbeefdeadbeefdeadbeef\"\r\n * // @error: (bytes12) does not match expected size (bytes8).\r\n * ```\r\n *\r\n * ### Solution\r\n *\r\n * Pass a bytes value of the correct size.\r\n *\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n * // ---cut---\r\n * AbiParameters.encode(AbiParameters.from(['bytes8']), ['0xdeadbeefdeadbeef'])\r\n * //                                                       ↑ ✅ size: 8 bytes\r\n * ```\r\n */\r\nexport class BytesSizeMismatchError extends Errors.BaseError {\r\n  override readonly name = 'AbiParameters.BytesSizeMismatchError'\r\n  constructor({\r\n    expectedSize,\r\n    value,\r\n  }: { expectedSize: number; value: Hex.Hex }) {\r\n    super(\r\n      `Size of bytes \"${value}\" (bytes${Hex.size(\r\n        value,\r\n      )}) does not match expected size (bytes${expectedSize}).`,\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * The length of the values to encode does not match the length of the ABI parameters.\r\n *\r\n * ### Example\r\n *\r\n * ```ts twoslash\r\n * // @noErrors\r\n * import { AbiParameters } from 'ox'\r\n * // ---cut---\r\n * AbiParameters.encode(AbiParameters.from(['string', 'uint256']), ['hello'])\r\n * // @error: LengthMismatchError: ABI encoding params/values length mismatch.\r\n * // @error: Expected length (params): 2\r\n * // @error: Given length (values): 1\r\n * ```\r\n *\r\n * ### Solution\r\n *\r\n * Pass the correct number of values to encode.\r\n *\r\n * ### Solution\r\n *\r\n * Pass a [valid ABI type](https://docs.soliditylang.org/en/develop/abi-spec.html#types).\r\n */\r\nexport class LengthMismatchError extends Errors.BaseError {\r\n  override readonly name = 'AbiParameters.LengthMismatchError'\r\n  constructor({\r\n    expectedLength,\r\n    givenLength,\r\n  }: { expectedLength: number; givenLength: number }) {\r\n    super(\r\n      [\r\n        'ABI encoding parameters/values length mismatch.',\r\n        `Expected length (parameters): ${expectedLength}`,\r\n        `Given length (values): ${givenLength}`,\r\n      ].join('\\n'),\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * The value provided is not a valid array as specified in the corresponding ABI parameter.\r\n *\r\n * ### Example\r\n *\r\n * ```ts twoslash\r\n * // @noErrors\r\n * import { AbiParameters } from 'ox'\r\n * // ---cut---\r\n * AbiParameters.encode(AbiParameters.from(['uint256[3]']), [69])\r\n * ```\r\n *\r\n * ### Solution\r\n *\r\n * Pass an array value.\r\n */\r\nexport class InvalidArrayError extends Errors.BaseError {\r\n  override readonly name = 'AbiParameters.InvalidArrayError'\r\n  constructor(value: unknown) {\r\n    super(`Value \\`${value}\\` is not a valid array.`)\r\n  }\r\n}\r\n\r\n/**\r\n * Throws when the ABI parameter type is invalid.\r\n *\r\n * @example\r\n * ```ts twoslash\r\n * import { AbiParameters } from 'ox'\r\n *\r\n * AbiParameters.decode([{ type: 'lol' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\r\n * //                             ↑ ❌ invalid type\r\n * // @error: AbiParameters.InvalidTypeError: Type `lol` is not a valid ABI Type.\r\n * ```\r\n */\r\nexport class InvalidTypeError extends Errors.BaseError {\r\n  override readonly name = 'AbiParameters.InvalidTypeError'\r\n  constructor(type: string) {\r\n    super(`Type \\`${type}\\` is not a valid ABI Type.`)\r\n  }\r\n}\r\n", "// base-x encoding / decoding\r\n// Copyright (c) 2018 base-x contributors\r\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\r\n// Distributed under the MIT software license, see the accompanying\r\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\r\nfunction base (ALPHABET) {\r\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\r\n  const BASE_MAP = new Uint8Array(256)\r\n  for (let j = 0; j < BASE_MAP.length; j++) {\r\n    BASE_MAP[j] = 255\r\n  }\r\n  for (let i = 0; i < ALPHABET.length; i++) {\r\n    const x = ALPHABET.charAt(i)\r\n    const xc = x.charCodeAt(0)\r\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\r\n    BASE_MAP[xc] = i\r\n  }\r\n  const BASE = ALPHABET.length\r\n  const LEADER = ALPHABET.charAt(0)\r\n  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\r\n  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\r\n  function encode (source) {\r\n    // eslint-disable-next-line no-empty\r\n    if (source instanceof Uint8Array) { } else if (ArrayBuffer.isView(source)) {\r\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\r\n    } else if (Array.isArray(source)) {\r\n      source = Uint8Array.from(source)\r\n    }\r\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\r\n    if (source.length === 0) { return '' }\r\n    // Skip & count leading zeroes.\r\n    let zeroes = 0\r\n    let length = 0\r\n    let pbegin = 0\r\n    const pend = source.length\r\n    while (pbegin !== pend && source[pbegin] === 0) {\r\n      pbegin++\r\n      zeroes++\r\n    }\r\n    // Allocate enough space in big-endian base58 representation.\r\n    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0\r\n    const b58 = new Uint8Array(size)\r\n    // Process the bytes.\r\n    while (pbegin !== pend) {\r\n      let carry = source[pbegin]\r\n      // Apply \"b58 = b58 * 256 + ch\".\r\n      let i = 0\r\n      for (let it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\r\n        carry += (256 * b58[it1]) >>> 0\r\n        b58[it1] = (carry % BASE) >>> 0\r\n        carry = (carry / BASE) >>> 0\r\n      }\r\n      if (carry !== 0) { throw new Error('Non-zero carry') }\r\n      length = i\r\n      pbegin++\r\n    }\r\n    // Skip leading zeroes in base58 result.\r\n    let it2 = size - length\r\n    while (it2 !== size && b58[it2] === 0) {\r\n      it2++\r\n    }\r\n    // Translate the result into a string.\r\n    let str = LEADER.repeat(zeroes)\r\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\r\n    return str\r\n  }\r\n  function decodeUnsafe (source) {\r\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\r\n    if (source.length === 0) { return new Uint8Array() }\r\n    let psz = 0\r\n    // Skip and count leading '1's.\r\n    let zeroes = 0\r\n    let length = 0\r\n    while (source[psz] === LEADER) {\r\n      zeroes++\r\n      psz++\r\n    }\r\n    // Allocate enough space in big-endian base256 representation.\r\n    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\r\n    const b256 = new Uint8Array(size)\r\n    // Process the characters.\r\n    while (psz < source.length) {\r\n      // Find code of next character\r\n      const charCode = source.charCodeAt(psz)\r\n      // Base map can not be indexed using char code\r\n      if (charCode > 255) { return }\r\n      // Decode character\r\n      let carry = BASE_MAP[charCode]\r\n      // Invalid character\r\n      if (carry === 255) { return }\r\n      let i = 0\r\n      for (let it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\r\n        carry += (BASE * b256[it3]) >>> 0\r\n        b256[it3] = (carry % 256) >>> 0\r\n        carry = (carry / 256) >>> 0\r\n      }\r\n      if (carry !== 0) { throw new Error('Non-zero carry') }\r\n      length = i\r\n      psz++\r\n    }\r\n    // Skip leading zeroes in b256.\r\n    let it4 = size - length\r\n    while (it4 !== size && b256[it4] === 0) {\r\n      it4++\r\n    }\r\n    const vch = new Uint8Array(zeroes + (size - it4))\r\n    let j = zeroes\r\n    while (it4 !== size) {\r\n      vch[j++] = b256[it4++]\r\n    }\r\n    return vch\r\n  }\r\n  function decode (string) {\r\n    const buffer = decodeUnsafe(string)\r\n    if (buffer) { return buffer }\r\n    throw new Error('Non-base' + BASE + ' character')\r\n  }\r\n  return {\r\n    encode,\r\n    decodeUnsafe,\r\n    decode\r\n  }\r\n}\r\nexport default base\r\n", "import basex from 'base-x';\r\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\r\nexport default basex(ALPHABET);\r\n", null, "export function alloc(size = 0) {\r\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\r\n    return globalThis.Buffer.alloc(size);\r\n  }\r\n  return new Uint8Array(size);\r\n}\r\nexport function allocUnsafe(size = 0) {\r\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\r\n    return globalThis.Buffer.allocUnsafe(size);\r\n  }\r\n  return new Uint8Array(size);\r\n}", "import { allocUnsafe } from './alloc.js';\r\nexport function concat(arrays, length) {\r\n  if (!length) {\r\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\r\n  }\r\n  const output = allocUnsafe(length);\r\n  let offset = 0;\r\n  for (const arr of arrays) {\r\n    output.set(arr, offset);\r\n    offset += arr.length;\r\n  }\r\n  return output;\r\n}", "import { from } from './base.js';\r\nimport {\r\n  fromString,\r\n  toString\r\n} from '../bytes.js';\r\nexport const identity = from({\r\n  prefix: '\\0',\r\n  name: 'identity',\r\n  encode: buf => toString(buf),\r\n  decode: str => fromString(str)\r\n});", "function base(ALPHABET, name) {\r\n  if (ALPHABET.length >= 255) {\r\n    throw new TypeError('Alphabet too long');\r\n  }\r\n  var BASE_MAP = new Uint8Array(256);\r\n  for (var j = 0; j < BASE_MAP.length; j++) {\r\n    BASE_MAP[j] = 255;\r\n  }\r\n  for (var i = 0; i < ALPHABET.length; i++) {\r\n    var x = ALPHABET.charAt(i);\r\n    var xc = x.charCodeAt(0);\r\n    if (BASE_MAP[xc] !== 255) {\r\n      throw new TypeError(x + ' is ambiguous');\r\n    }\r\n    BASE_MAP[xc] = i;\r\n  }\r\n  var BASE = ALPHABET.length;\r\n  var LEADER = ALPHABET.charAt(0);\r\n  var FACTOR = Math.log(BASE) / Math.log(256);\r\n  var iFACTOR = Math.log(256) / Math.log(BASE);\r\n  function encode(source) {\r\n    if (source instanceof Uint8Array);\r\n    else if (ArrayBuffer.isView(source)) {\r\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\r\n    } else if (Array.isArray(source)) {\r\n      source = Uint8Array.from(source);\r\n    }\r\n    if (!(source instanceof Uint8Array)) {\r\n      throw new TypeError('Expected Uint8Array');\r\n    }\r\n    if (source.length === 0) {\r\n      return '';\r\n    }\r\n    var zeroes = 0;\r\n    var length = 0;\r\n    var pbegin = 0;\r\n    var pend = source.length;\r\n    while (pbegin !== pend && source[pbegin] === 0) {\r\n      pbegin++;\r\n      zeroes++;\r\n    }\r\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\r\n    var b58 = new Uint8Array(size);\r\n    while (pbegin !== pend) {\r\n      var carry = source[pbegin];\r\n      var i = 0;\r\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\r\n        carry += 256 * b58[it1] >>> 0;\r\n        b58[it1] = carry % BASE >>> 0;\r\n        carry = carry / BASE >>> 0;\r\n      }\r\n      if (carry !== 0) {\r\n        throw new Error('Non-zero carry');\r\n      }\r\n      length = i;\r\n      pbegin++;\r\n    }\r\n    var it2 = size - length;\r\n    while (it2 !== size && b58[it2] === 0) {\r\n      it2++;\r\n    }\r\n    var str = LEADER.repeat(zeroes);\r\n    for (; it2 < size; ++it2) {\r\n      str += ALPHABET.charAt(b58[it2]);\r\n    }\r\n    return str;\r\n  }\r\n  function decodeUnsafe(source) {\r\n    if (typeof source !== 'string') {\r\n      throw new TypeError('Expected String');\r\n    }\r\n    if (source.length === 0) {\r\n      return new Uint8Array();\r\n    }\r\n    var psz = 0;\r\n    if (source[psz] === ' ') {\r\n      return;\r\n    }\r\n    var zeroes = 0;\r\n    var length = 0;\r\n    while (source[psz] === LEADER) {\r\n      zeroes++;\r\n      psz++;\r\n    }\r\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\r\n    var b256 = new Uint8Array(size);\r\n    while (source[psz]) {\r\n      var carry = BASE_MAP[source.charCodeAt(psz)];\r\n      if (carry === 255) {\r\n        return;\r\n      }\r\n      var i = 0;\r\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\r\n        carry += BASE * b256[it3] >>> 0;\r\n        b256[it3] = carry % 256 >>> 0;\r\n        carry = carry / 256 >>> 0;\r\n      }\r\n      if (carry !== 0) {\r\n        throw new Error('Non-zero carry');\r\n      }\r\n      length = i;\r\n      psz++;\r\n    }\r\n    if (source[psz] === ' ') {\r\n      return;\r\n    }\r\n    var it4 = size - length;\r\n    while (it4 !== size && b256[it4] === 0) {\r\n      it4++;\r\n    }\r\n    var vch = new Uint8Array(zeroes + (size - it4));\r\n    var j = zeroes;\r\n    while (it4 !== size) {\r\n      vch[j++] = b256[it4++];\r\n    }\r\n    return vch;\r\n  }\r\n  function decode(string) {\r\n    var buffer = decodeUnsafe(string);\r\n    if (buffer) {\r\n      return buffer;\r\n    }\r\n    throw new Error(`Non-${ name } character`);\r\n  }\r\n  return {\r\n    encode: encode,\r\n    decodeUnsafe: decodeUnsafe,\r\n    decode: decode\r\n  };\r\n}\r\nvar src = base;\r\nvar _brrp__multiformats_scope_baseX = src;\r\nexport default _brrp__multiformats_scope_baseX;", "const empty = new Uint8Array(0);\r\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\r\nconst fromHex = hex => {\r\n  const hexes = hex.match(/../g);\r\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\r\n};\r\nconst equals = (aa, bb) => {\r\n  if (aa === bb)\r\n    return true;\r\n  if (aa.byteLength !== bb.byteLength) {\r\n    return false;\r\n  }\r\n  for (let ii = 0; ii < aa.byteLength; ii++) {\r\n    if (aa[ii] !== bb[ii]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\nconst coerce = o => {\r\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\r\n    return o;\r\n  if (o instanceof ArrayBuffer)\r\n    return new Uint8Array(o);\r\n  if (ArrayBuffer.isView(o)) {\r\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\r\n  }\r\n  throw new Error('Unknown type, must be binary type');\r\n};\r\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\r\nconst fromString = str => new TextEncoder().encode(str);\r\nconst toString = b => new TextDecoder().decode(b);\r\nexport {\r\n  equals,\r\n  coerce,\r\n  isBinary,\r\n  fromHex,\r\n  toHex,\r\n  fromString,\r\n  toString,\r\n  empty\r\n};", "import basex from '../../vendor/base-x.js';\r\nimport { coerce } from '../bytes.js';\r\nclass Encoder {\r\n  constructor(name, prefix, baseEncode) {\r\n    this.name = name;\r\n    this.prefix = prefix;\r\n    this.baseEncode = baseEncode;\r\n  }\r\n  encode(bytes) {\r\n    if (bytes instanceof Uint8Array) {\r\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\r\n    } else {\r\n      throw Error('Unknown type, must be binary type');\r\n    }\r\n  }\r\n}\r\nclass Decoder {\r\n  constructor(name, prefix, baseDecode) {\r\n    this.name = name;\r\n    this.prefix = prefix;\r\n    if (prefix.codePointAt(0) === undefined) {\r\n      throw new Error('Invalid prefix character');\r\n    }\r\n    this.prefixCodePoint = prefix.codePointAt(0);\r\n    this.baseDecode = baseDecode;\r\n  }\r\n  decode(text) {\r\n    if (typeof text === 'string') {\r\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\r\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\r\n      }\r\n      return this.baseDecode(text.slice(this.prefix.length));\r\n    } else {\r\n      throw Error('Can only multibase decode strings');\r\n    }\r\n  }\r\n  or(decoder) {\r\n    return or(this, decoder);\r\n  }\r\n}\r\nclass ComposedDecoder {\r\n  constructor(decoders) {\r\n    this.decoders = decoders;\r\n  }\r\n  or(decoder) {\r\n    return or(this, decoder);\r\n  }\r\n  decode(input) {\r\n    const prefix = input[0];\r\n    const decoder = this.decoders[prefix];\r\n    if (decoder) {\r\n      return decoder.decode(input);\r\n    } else {\r\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\r\n    }\r\n  }\r\n}\r\nexport const or = (left, right) => new ComposedDecoder({\r\n  ...left.decoders || { [left.prefix]: left },\r\n  ...right.decoders || { [right.prefix]: right }\r\n});\r\nexport class Codec {\r\n  constructor(name, prefix, baseEncode, baseDecode) {\r\n    this.name = name;\r\n    this.prefix = prefix;\r\n    this.baseEncode = baseEncode;\r\n    this.baseDecode = baseDecode;\r\n    this.encoder = new Encoder(name, prefix, baseEncode);\r\n    this.decoder = new Decoder(name, prefix, baseDecode);\r\n  }\r\n  encode(input) {\r\n    return this.encoder.encode(input);\r\n  }\r\n  decode(input) {\r\n    return this.decoder.decode(input);\r\n  }\r\n}\r\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\r\nexport const baseX = ({prefix, name, alphabet}) => {\r\n  const {encode, decode} = basex(alphabet, name);\r\n  return from({\r\n    prefix,\r\n    name,\r\n    encode,\r\n    decode: text => coerce(decode(text))\r\n  });\r\n};\r\nconst decode = (string, alphabet, bitsPerChar, name) => {\r\n  const codes = {};\r\n  for (let i = 0; i < alphabet.length; ++i) {\r\n    codes[alphabet[i]] = i;\r\n  }\r\n  let end = string.length;\r\n  while (string[end - 1] === '=') {\r\n    --end;\r\n  }\r\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\r\n  let bits = 0;\r\n  let buffer = 0;\r\n  let written = 0;\r\n  for (let i = 0; i < end; ++i) {\r\n    const value = codes[string[i]];\r\n    if (value === undefined) {\r\n      throw new SyntaxError(`Non-${ name } character`);\r\n    }\r\n    buffer = buffer << bitsPerChar | value;\r\n    bits += bitsPerChar;\r\n    if (bits >= 8) {\r\n      bits -= 8;\r\n      out[written++] = 255 & buffer >> bits;\r\n    }\r\n  }\r\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\r\n    throw new SyntaxError('Unexpected end of data');\r\n  }\r\n  return out;\r\n};\r\nconst encode = (data, alphabet, bitsPerChar) => {\r\n  const pad = alphabet[alphabet.length - 1] === '=';\r\n  const mask = (1 << bitsPerChar) - 1;\r\n  let out = '';\r\n  let bits = 0;\r\n  let buffer = 0;\r\n  for (let i = 0; i < data.length; ++i) {\r\n    buffer = buffer << 8 | data[i];\r\n    bits += 8;\r\n    while (bits > bitsPerChar) {\r\n      bits -= bitsPerChar;\r\n      out += alphabet[mask & buffer >> bits];\r\n    }\r\n  }\r\n  if (bits) {\r\n    out += alphabet[mask & buffer << bitsPerChar - bits];\r\n  }\r\n  if (pad) {\r\n    while (out.length * bitsPerChar & 7) {\r\n      out += '=';\r\n    }\r\n  }\r\n  return out;\r\n};\r\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\r\n  return from({\r\n    prefix,\r\n    name,\r\n    encode(input) {\r\n      return encode(input, alphabet, bitsPerChar);\r\n    },\r\n    decode(input) {\r\n      return decode(input, alphabet, bitsPerChar, name);\r\n    }\r\n  });\r\n};", "import { rfc4648 } from './base.js';\r\nexport const base2 = rfc4648({\r\n  prefix: '0',\r\n  name: 'base2',\r\n  alphabet: '01',\r\n  bitsPerChar: 1\r\n});", "import { rfc4648 } from './base.js';\r\nexport const base8 = rfc4648({\r\n  prefix: '7',\r\n  name: 'base8',\r\n  alphabet: '01234567',\r\n  bitsPerChar: 3\r\n});", "import { baseX } from './base.js';\r\nexport const base10 = baseX({\r\n  prefix: '9',\r\n  name: 'base10',\r\n  alphabet: '0123456789'\r\n});", "import { rfc4648 } from './base.js';\r\nexport const base16 = rfc4648({\r\n  prefix: 'f',\r\n  name: 'base16',\r\n  alphabet: '0123456789abcdef',\r\n  bitsPerChar: 4\r\n});\r\nexport const base16upper = rfc4648({\r\n  prefix: 'F',\r\n  name: 'base16upper',\r\n  alphabet: '0123456789ABCDEF',\r\n  bitsPerChar: 4\r\n});", "import { rfc4648 } from './base.js';\r\nexport const base32 = rfc4648({\r\n  prefix: 'b',\r\n  name: 'base32',\r\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\r\n  bitsPerChar: 5\r\n});\r\nexport const base32upper = rfc4648({\r\n  prefix: 'B',\r\n  name: 'base32upper',\r\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\r\n  bitsPerChar: 5\r\n});\r\nexport const base32pad = rfc4648({\r\n  prefix: 'c',\r\n  name: 'base32pad',\r\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\r\n  bitsPerChar: 5\r\n});\r\nexport const base32padupper = rfc4648({\r\n  prefix: 'C',\r\n  name: 'base32padupper',\r\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\r\n  bitsPerChar: 5\r\n});\r\nexport const base32hex = rfc4648({\r\n  prefix: 'v',\r\n  name: 'base32hex',\r\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\r\n  bitsPerChar: 5\r\n});\r\nexport const base32hexupper = rfc4648({\r\n  prefix: 'V',\r\n  name: 'base32hexupper',\r\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\r\n  bitsPerChar: 5\r\n});\r\nexport const base32hexpad = rfc4648({\r\n  prefix: 't',\r\n  name: 'base32hexpad',\r\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\r\n  bitsPerChar: 5\r\n});\r\nexport const base32hexpadupper = rfc4648({\r\n  prefix: 'T',\r\n  name: 'base32hexpadupper',\r\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\r\n  bitsPerChar: 5\r\n});\r\nexport const base32z = rfc4648({\r\n  prefix: 'h',\r\n  name: 'base32z',\r\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\r\n  bitsPerChar: 5\r\n});", "import { baseX } from './base.js';\r\nexport const base36 = baseX({\r\n  prefix: 'k',\r\n  name: 'base36',\r\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\r\n});\r\nexport const base36upper = baseX({\r\n  prefix: 'K',\r\n  name: 'base36upper',\r\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\n});", "import { baseX } from './base.js';\r\nexport const base58btc = baseX({\r\n  name: 'base58btc',\r\n  prefix: 'z',\r\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\r\n});\r\nexport const base58flickr = baseX({\r\n  name: 'base58flickr',\r\n  prefix: 'Z',\r\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\r\n});", "import { rfc4648 } from './base.js';\r\nexport const base64 = rfc4648({\r\n  prefix: 'm',\r\n  name: 'base64',\r\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\r\n  bitsPerChar: 6\r\n});\r\nexport const base64pad = rfc4648({\r\n  prefix: 'M',\r\n  name: 'base64pad',\r\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\r\n  bitsPerChar: 6\r\n});\r\nexport const base64url = rfc4648({\r\n  prefix: 'u',\r\n  name: 'base64url',\r\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\r\n  bitsPerChar: 6\r\n});\r\nexport const base64urlpad = rfc4648({\r\n  prefix: 'U',\r\n  name: 'base64urlpad',\r\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\r\n  bitsPerChar: 6\r\n});", "import { from } from './base.js';\r\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\r\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\r\n  p[i] = c;\r\n  return p;\r\n}, []);\r\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\r\n  p[c.codePointAt(0)] = i;\r\n  return p;\r\n}, []);\r\nfunction encode(data) {\r\n  return data.reduce((p, c) => {\r\n    p += alphabetBytesToChars[c];\r\n    return p;\r\n  }, '');\r\n}\r\nfunction decode(str) {\r\n  const byts = [];\r\n  for (const char of str) {\r\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\r\n    if (byt === undefined) {\r\n      throw new Error(`Non-base256emoji character: ${ char }`);\r\n    }\r\n    byts.push(byt);\r\n  }\r\n  return new Uint8Array(byts);\r\n}\r\nexport const base256emoji = from({\r\n  prefix: '\\uD83D\\uDE80',\r\n  name: 'base256emoji',\r\n  encode,\r\n  decode\r\n});", "import { from } from './hasher.js';\r\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\r\nexport const sha256 = from({\r\n  name: 'sha2-256',\r\n  code: 18,\r\n  encode: sha('SHA-256')\r\n});\r\nexport const sha512 = from({\r\n  name: 'sha2-512',\r\n  code: 19,\r\n  encode: sha('SHA-512')\r\n});", "var encode_1 = encode;\r\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\r\nfunction encode(num, out, offset) {\r\n  out = out || [];\r\n  offset = offset || 0;\r\n  var oldOffset = offset;\r\n  while (num >= INT) {\r\n    out[offset++] = num & 255 | MSB;\r\n    num /= 128;\r\n  }\r\n  while (num & MSBALL) {\r\n    out[offset++] = num & 255 | MSB;\r\n    num >>>= 7;\r\n  }\r\n  out[offset] = num | 0;\r\n  encode.bytes = offset - oldOffset + 1;\r\n  return out;\r\n}\r\nvar decode = read;\r\nvar MSB$1 = 128, REST$1 = 127;\r\nfunction read(buf, offset) {\r\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\r\n  do {\r\n    if (counter >= l) {\r\n      read.bytes = 0;\r\n      throw new RangeError('Could not decode varint');\r\n    }\r\n    b = buf[counter++];\r\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\r\n    shift += 7;\r\n  } while (b >= MSB$1);\r\n  read.bytes = counter - offset;\r\n  return res;\r\n}\r\nvar N1 = Math.pow(2, 7);\r\nvar N2 = Math.pow(2, 14);\r\nvar N3 = Math.pow(2, 21);\r\nvar N4 = Math.pow(2, 28);\r\nvar N5 = Math.pow(2, 35);\r\nvar N6 = Math.pow(2, 42);\r\nvar N7 = Math.pow(2, 49);\r\nvar N8 = Math.pow(2, 56);\r\nvar N9 = Math.pow(2, 63);\r\nvar length = function (value) {\r\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\r\n};\r\nvar varint = {\r\n  encode: encode_1,\r\n  decode: decode,\r\n  encodingLength: length\r\n};\r\nvar _brrp_varint = varint;\r\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\r\nexport const decode = (data, offset = 0) => {\r\n  const code = varint.decode(data, offset);\r\n  return [\r\n    code,\r\n    varint.decode.bytes\r\n  ];\r\n};\r\nexport const encodeTo = (int, target, offset = 0) => {\r\n  varint.encode(int, target, offset);\r\n  return target;\r\n};\r\nexport const encodingLength = int => {\r\n  return varint.encodingLength(int);\r\n};", "import {\r\n  coerce,\r\n  equals as equalBytes\r\n} from '../bytes.js';\r\nimport * as varint from '../varint.js';\r\nexport const create = (code, digest) => {\r\n  const size = digest.byteLength;\r\n  const sizeOffset = varint.encodingLength(code);\r\n  const digestOffset = sizeOffset + varint.encodingLength(size);\r\n  const bytes = new Uint8Array(digestOffset + size);\r\n  varint.encodeTo(code, bytes, 0);\r\n  varint.encodeTo(size, bytes, sizeOffset);\r\n  bytes.set(digest, digestOffset);\r\n  return new Digest(code, size, digest, bytes);\r\n};\r\nexport const decode = multihash => {\r\n  const bytes = coerce(multihash);\r\n  const [code, sizeOffset] = varint.decode(bytes);\r\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\r\n  const digest = bytes.subarray(sizeOffset + digestOffset);\r\n  if (digest.byteLength !== size) {\r\n    throw new Error('Incorrect length');\r\n  }\r\n  return new Digest(code, size, digest, bytes);\r\n};\r\nexport const equals = (a, b) => {\r\n  if (a === b) {\r\n    return true;\r\n  } else {\r\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\r\n  }\r\n};\r\nexport class Digest {\r\n  constructor(code, size, digest, bytes) {\r\n    this.code = code;\r\n    this.size = size;\r\n    this.digest = digest;\r\n    this.bytes = bytes;\r\n  }\r\n}", "import * as Digest from './digest.js';\r\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\r\nexport class Hasher {\r\n  constructor(name, code, encode) {\r\n    this.name = name;\r\n    this.code = code;\r\n    this.encode = encode;\r\n  }\r\n  digest(input) {\r\n    if (input instanceof Uint8Array) {\r\n      const result = this.encode(input);\r\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\r\n    } else {\r\n      throw Error('Unknown type, must be binary type');\r\n    }\r\n  }\r\n}", "import { coerce } from '../bytes.js';\r\nimport * as Digest from './digest.js';\r\nconst code = 0;\r\nconst name = 'identity';\r\nconst encode = coerce;\r\nconst digest = input => Digest.create(code, encode(input));\r\nexport const identity = {\r\n  code,\r\n  name,\r\n  encode,\r\n  digest\r\n};", "const textEncoder = new TextEncoder();\r\nconst textDecoder = new TextDecoder();\r\nexport const name = 'json';\r\nexport const code = 512;\r\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\r\nexport const decode = data => JSON.parse(textDecoder.decode(data));", "import * as varint from './varint.js';\r\nimport * as Digest from './hashes/digest.js';\r\nimport { base58btc } from './bases/base58.js';\r\nimport { base32 } from './bases/base32.js';\r\nimport { coerce } from './bytes.js';\r\nexport class CID {\r\n  constructor(version, code, multihash, bytes) {\r\n    this.code = code;\r\n    this.version = version;\r\n    this.multihash = multihash;\r\n    this.bytes = bytes;\r\n    this.byteOffset = bytes.byteOffset;\r\n    this.byteLength = bytes.byteLength;\r\n    this.asCID = this;\r\n    this._baseCache = new Map();\r\n    Object.defineProperties(this, {\r\n      byteOffset: hidden,\r\n      byteLength: hidden,\r\n      code: readonly,\r\n      version: readonly,\r\n      multihash: readonly,\r\n      bytes: readonly,\r\n      _baseCache: hidden,\r\n      asCID: hidden\r\n    });\r\n  }\r\n  toV0() {\r\n    switch (this.version) {\r\n    case 0: {\r\n        return this;\r\n      }\r\n    default: {\r\n        const {code, multihash} = this;\r\n        if (code !== DAG_PB_CODE) {\r\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\r\n        }\r\n        if (multihash.code !== SHA_256_CODE) {\r\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\r\n        }\r\n        return CID.createV0(multihash);\r\n      }\r\n    }\r\n  }\r\n  toV1() {\r\n    switch (this.version) {\r\n    case 0: {\r\n        const {code, digest} = this.multihash;\r\n        const multihash = Digest.create(code, digest);\r\n        return CID.createV1(this.code, multihash);\r\n      }\r\n    case 1: {\r\n        return this;\r\n      }\r\n    default: {\r\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\r\n      }\r\n    }\r\n  }\r\n  equals(other) {\r\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\r\n  }\r\n  toString(base) {\r\n    const {bytes, version, _baseCache} = this;\r\n    switch (version) {\r\n    case 0:\r\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\r\n    default:\r\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\r\n    }\r\n  }\r\n  toJSON() {\r\n    return {\r\n      code: this.code,\r\n      version: this.version,\r\n      hash: this.multihash.bytes\r\n    };\r\n  }\r\n  get [Symbol.toStringTag]() {\r\n    return 'CID';\r\n  }\r\n  [Symbol.for('nodejs.util.inspect.custom')]() {\r\n    return 'CID(' + this.toString() + ')';\r\n  }\r\n  static isCID(value) {\r\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\r\n    return !!(value && (value[cidSymbol] || value.asCID === value));\r\n  }\r\n  get toBaseEncodedString() {\r\n    throw new Error('Deprecated, use .toString()');\r\n  }\r\n  get codec() {\r\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\r\n  }\r\n  get buffer() {\r\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\r\n  }\r\n  get multibaseName() {\r\n    throw new Error('\"multibaseName\" property is deprecated');\r\n  }\r\n  get prefix() {\r\n    throw new Error('\"prefix\" property is deprecated');\r\n  }\r\n  static asCID(value) {\r\n    if (value instanceof CID) {\r\n      return value;\r\n    } else if (value != null && value.asCID === value) {\r\n      const {version, code, multihash, bytes} = value;\r\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\r\n    } else if (value != null && value[cidSymbol] === true) {\r\n      const {version, multihash, code} = value;\r\n      const digest = Digest.decode(multihash);\r\n      return CID.create(version, code, digest);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  static create(version, code, digest) {\r\n    if (typeof code !== 'number') {\r\n      throw new Error('String codecs are no longer supported');\r\n    }\r\n    switch (version) {\r\n    case 0: {\r\n        if (code !== DAG_PB_CODE) {\r\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\r\n        } else {\r\n          return new CID(version, code, digest, digest.bytes);\r\n        }\r\n      }\r\n    case 1: {\r\n        const bytes = encodeCID(version, code, digest.bytes);\r\n        return new CID(version, code, digest, bytes);\r\n      }\r\n    default: {\r\n        throw new Error('Invalid version');\r\n      }\r\n    }\r\n  }\r\n  static createV0(digest) {\r\n    return CID.create(0, DAG_PB_CODE, digest);\r\n  }\r\n  static createV1(code, digest) {\r\n    return CID.create(1, code, digest);\r\n  }\r\n  static decode(bytes) {\r\n    const [cid, remainder] = CID.decodeFirst(bytes);\r\n    if (remainder.length) {\r\n      throw new Error('Incorrect length');\r\n    }\r\n    return cid;\r\n  }\r\n  static decodeFirst(bytes) {\r\n    const specs = CID.inspectBytes(bytes);\r\n    const prefixSize = specs.size - specs.multihashSize;\r\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\r\n    if (multihashBytes.byteLength !== specs.multihashSize) {\r\n      throw new Error('Incorrect length');\r\n    }\r\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\r\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\r\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\r\n    return [\r\n      cid,\r\n      bytes.subarray(specs.size)\r\n    ];\r\n  }\r\n  static inspectBytes(initialBytes) {\r\n    let offset = 0;\r\n    const next = () => {\r\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\r\n      offset += length;\r\n      return i;\r\n    };\r\n    let version = next();\r\n    let codec = DAG_PB_CODE;\r\n    if (version === 18) {\r\n      version = 0;\r\n      offset = 0;\r\n    } else if (version === 1) {\r\n      codec = next();\r\n    }\r\n    if (version !== 0 && version !== 1) {\r\n      throw new RangeError(`Invalid CID version ${ version }`);\r\n    }\r\n    const prefixSize = offset;\r\n    const multihashCode = next();\r\n    const digestSize = next();\r\n    const size = offset + digestSize;\r\n    const multihashSize = size - prefixSize;\r\n    return {\r\n      version,\r\n      codec,\r\n      multihashCode,\r\n      digestSize,\r\n      multihashSize,\r\n      size\r\n    };\r\n  }\r\n  static parse(source, base) {\r\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\r\n    const cid = CID.decode(bytes);\r\n    cid._baseCache.set(prefix, source);\r\n    return cid;\r\n  }\r\n}\r\nconst parseCIDtoBytes = (source, base) => {\r\n  switch (source[0]) {\r\n  case 'Q': {\r\n      const decoder = base || base58btc;\r\n      return [\r\n        base58btc.prefix,\r\n        decoder.decode(`${ base58btc.prefix }${ source }`)\r\n      ];\r\n    }\r\n  case base58btc.prefix: {\r\n      const decoder = base || base58btc;\r\n      return [\r\n        base58btc.prefix,\r\n        decoder.decode(source)\r\n      ];\r\n    }\r\n  case base32.prefix: {\r\n      const decoder = base || base32;\r\n      return [\r\n        base32.prefix,\r\n        decoder.decode(source)\r\n      ];\r\n    }\r\n  default: {\r\n      if (base == null) {\r\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\r\n      }\r\n      return [\r\n        source[0],\r\n        base.decode(source)\r\n      ];\r\n    }\r\n  }\r\n};\r\nconst toStringV0 = (bytes, cache, base) => {\r\n  const {prefix} = base;\r\n  if (prefix !== base58btc.prefix) {\r\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\r\n  }\r\n  const cid = cache.get(prefix);\r\n  if (cid == null) {\r\n    const cid = base.encode(bytes).slice(1);\r\n    cache.set(prefix, cid);\r\n    return cid;\r\n  } else {\r\n    return cid;\r\n  }\r\n};\r\nconst toStringV1 = (bytes, cache, base) => {\r\n  const {prefix} = base;\r\n  const cid = cache.get(prefix);\r\n  if (cid == null) {\r\n    const cid = base.encode(bytes);\r\n    cache.set(prefix, cid);\r\n    return cid;\r\n  } else {\r\n    return cid;\r\n  }\r\n};\r\nconst DAG_PB_CODE = 112;\r\nconst SHA_256_CODE = 18;\r\nconst encodeCID = (version, code, multihash) => {\r\n  const codeOffset = varint.encodingLength(version);\r\n  const hashOffset = codeOffset + varint.encodingLength(code);\r\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\r\n  varint.encodeTo(version, bytes, 0);\r\n  varint.encodeTo(code, bytes, codeOffset);\r\n  bytes.set(multihash, hashOffset);\r\n  return bytes;\r\n};\r\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\r\nconst readonly = {\r\n  writable: false,\r\n  configurable: false,\r\n  enumerable: true\r\n};\r\nconst hidden = {\r\n  writable: false,\r\n  enumerable: false,\r\n  configurable: false\r\n};\r\nconst version = '0.0.0-dev';\r\nconst deprecate = (range, message) => {\r\n  if (range.test(version)) {\r\n    console.warn(message);\r\n  } else {\r\n    throw new Error(message);\r\n  }\r\n};\r\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\r\nFollowing code pattern:\r\n\r\nif (CID.isCID(value)) {\r\n  doSomethingWithCID(value)\r\n}\r\n\r\nIs replaced with:\r\n\r\nconst cid = CID.asCID(value)\r\nif (cid) {\r\n  // Make sure to use cid instead of value\r\n  doSomethingWithCID(cid)\r\n}\r\n`;", "import * as identityBase from './bases/identity.js';\r\nimport * as base2 from './bases/base2.js';\r\nimport * as base8 from './bases/base8.js';\r\nimport * as base10 from './bases/base10.js';\r\nimport * as base16 from './bases/base16.js';\r\nimport * as base32 from './bases/base32.js';\r\nimport * as base36 from './bases/base36.js';\r\nimport * as base58 from './bases/base58.js';\r\nimport * as base64 from './bases/base64.js';\r\nimport * as base256emoji from './bases/base256emoji.js';\r\nimport * as sha2 from './hashes/sha2.js';\r\nimport * as identity from './hashes/identity.js';\r\nimport * as raw from './codecs/raw.js';\r\nimport * as json from './codecs/json.js';\r\nimport {\r\n  CID,\r\n  hasher,\r\n  digest,\r\n  varint,\r\n  bytes\r\n} from './index.js';\r\nconst bases = {\r\n  ...identityBase,\r\n  ...base2,\r\n  ...base8,\r\n  ...base10,\r\n  ...base16,\r\n  ...base32,\r\n  ...base36,\r\n  ...base58,\r\n  ...base64,\r\n  ...base256emoji\r\n};\r\nconst hashes = {\r\n  ...sha2,\r\n  ...identity\r\n};\r\nconst codecs = {\r\n  raw,\r\n  json\r\n};\r\nexport {\r\n  CID,\r\n  hasher,\r\n  digest,\r\n  varint,\r\n  bytes,\r\n  hashes,\r\n  bases,\r\n  codecs\r\n};", "import { bases } from 'multiformats/basics';\r\nimport { allocUnsafe } from '../alloc.js';\r\nfunction createCodec(name, prefix, encode, decode) {\r\n  return {\r\n    name,\r\n    prefix,\r\n    encoder: {\r\n      name,\r\n      prefix,\r\n      encode\r\n    },\r\n    decoder: { decode }\r\n  };\r\n}\r\nconst string = createCodec('utf8', 'u', buf => {\r\n  const decoder = new TextDecoder('utf8');\r\n  return 'u' + decoder.decode(buf);\r\n}, str => {\r\n  const encoder = new TextEncoder();\r\n  return encoder.encode(str.substring(1));\r\n});\r\nconst ascii = createCodec('ascii', 'a', buf => {\r\n  let string = 'a';\r\n  for (let i = 0; i < buf.length; i++) {\r\n    string += String.fromCharCode(buf[i]);\r\n  }\r\n  return string;\r\n}, str => {\r\n  str = str.substring(1);\r\n  const buf = allocUnsafe(str.length);\r\n  for (let i = 0; i < str.length; i++) {\r\n    buf[i] = str.charCodeAt(i);\r\n  }\r\n  return buf;\r\n});\r\nconst BASES = {\r\n  utf8: string,\r\n  'utf-8': string,\r\n  hex: bases.base16,\r\n  latin1: ascii,\r\n  ascii: ascii,\r\n  binary: ascii,\r\n  ...bases\r\n};\r\nexport default BASES;", "import bases from './util/bases.js';\r\nexport function fromString(string, encoding = 'utf8') {\r\n  const base = bases[encoding];\r\n  if (!base) {\r\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\r\n  }\r\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\r\n    return globalThis.Buffer.from(string, 'utf8');\r\n  }\r\n  return base.decoder.decode(`${ base.prefix }${ string }`);\r\n}", "import bases from './util/bases.js';\r\nexport function toString(array, encoding = 'utf8') {\r\n  const base = bases[encoding];\r\n  if (!base) {\r\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\r\n  }\r\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\r\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\r\n  }\r\n  return base.encoder.encode(array).substring(1);\r\n}", "export function assertType(obj: any, key: string, type = \"string\") {\n  if (!obj[key] || typeof obj[key] !== type) {\n    throw new Error(`Missing or invalid \"${key}\" param`);\n  }\n}\n\nexport function hasRequiredParams(params: any, required: string[]) {\n  let matches = true;\n  required.forEach((key) => {\n    const exists = key in params;\n    if (!exists) {\n      matches = false;\n    }\n  });\n  return matches;\n}\n\nexport function hasExactParamsLength(params: any, length: number): boolean {\n  return Array.isArray(params) ? params.length === length : Object.keys(params).length === length;\n}\n\nexport function hasRequiredParamsLength(params: any, minLength: number): boolean {\n  return Array.isArray(params)\n    ? params.length >= minLength\n    : Object.keys(params).length >= minLength;\n}\n\nexport function checkParams(params: any, required: string[], optional: string[]) {\n  const exact = !optional.length;\n  const matchesLength = exact\n    ? hasExactParamsLength(params, required.length)\n    : hasRequiredParamsLength(params, required.length);\n  if (!matchesLength) return false;\n  return hasRequiredParams(params, required);\n}\n\nexport function methodEndsWith(method: string, expected: string, separator = \"_\") {\n  const split = method.split(separator);\n  return split[split.length - 1].trim().toLowerCase() === expected.trim().toLowerCase();\n}\n", "import { JsonRpcRequest } from \"@walletconnect/jsonrpc-types\";\n\nimport { checkParams, methodEndsWith } from \"./misc\";\nimport { RelayJsonRpc } from \"./types\";\n\n// ---------- Subscribe ----------------------------------------------- //\n\nexport function isSubscribeRequest(\n  request: JsonRpcRequest,\n): request is JsonRpcRequest<RelayJsonRpc.SubscribeParams> {\n  return isSubscribeMethod(request.method) && isSubscribeParams(request.params);\n}\n\nexport function isSubscribeMethod(method: string): boolean {\n  return methodEndsWith(method, \"subscribe\");\n}\n\nexport function isSubscribeParams(params: any): params is RelayJsonRpc.SubscribeParams {\n  const required = [\"topic\"];\n  const optional: string[] = [];\n  return checkParams(params, required, optional);\n}\n\n// ---------- Publish ----------------------------------------------- //\n\nexport function isPublishRequest(\n  request: JsonRpcRequest,\n): request is JsonRpcRequest<RelayJsonRpc.PublishParams> {\n  return isPublishMethod(request.method) && isPublishParams(request.params);\n}\n\nexport function isPublishMethod(method: string): boolean {\n  return methodEndsWith(method, \"publish\");\n}\n\nexport function isPublishParams(params: any): params is RelayJsonRpc.PublishParams {\n  const required = [\"message\", \"topic\", \"ttl\"];\n  const optional = [\"prompt\", \"tag\"];\n  return checkParams(params, required, optional);\n}\n\n// ---------- Unsubscribe ----------------------------------------------- //\n\nexport function isUnsubscribeRequest(\n  request: JsonRpcRequest,\n): request is JsonRpcRequest<RelayJsonRpc.UnsubscribeParams> {\n  return isUnsubscribeMethod(request.method) && isUnsubscribeParams(request.params);\n}\n\nexport function isUnsubscribeMethod(method: string): boolean {\n  return methodEndsWith(method, \"unsubscribe\");\n}\n\nexport function isUnsubscribeParams(params: any): params is RelayJsonRpc.UnsubscribeParams {\n  const required = [\"id\", \"topic\"];\n  const optional: string[] = [];\n  return checkParams(params, required, optional);\n}\n\n// ---------- Subscription ----------------------------------------------- //\n\nexport function isSubscriptionRequest(\n  request: JsonRpcRequest,\n): request is JsonRpcRequest<RelayJsonRpc.SubscriptionParams> {\n  return isSubscriptionMethod(request.method) && isSubscriptionParams(request.params);\n}\n\nexport function isSubscriptionMethod(method: string): boolean {\n  return methodEndsWith(method, \"subscription\");\n}\n\nexport function isSubscriptionParams(params: any): params is RelayJsonRpc.SubscriptionParams {\n  const required = [\"id\", \"data\"];\n  const optional: string[] = [];\n  return checkParams(params, required, optional);\n}\n", "import { JsonRpcRequest } from \"@walletconnect/jsonrpc-types\";\n\nimport { RelayJsonRpc } from \"./types\";\nimport { assertType } from \"./misc\";\nimport {\n  isPublishMethod,\n  isPublishParams,\n  isSubscribeMethod,\n  isSubscribeParams,\n  isSubscriptionMethod,\n  isSubscriptionParams,\n  isUnsubscribeMethod,\n  isUnsubscribeParams,\n} from \"./validators\";\n\nexport function parseSubscribeRequest(request: JsonRpcRequest): RelayJsonRpc.SubscribeParams {\n  if (!isSubscribeMethod(request.method)) {\n    throw new Error(\"JSON-RPC Request has invalid subscribe method\");\n  }\n  if (!isSubscribeParams(request.params)) {\n    throw new Error(\"JSON-RPC Request has invalid subscribe params\");\n  }\n  const params = request.params as RelayJsonRpc.SubscribeParams;\n\n  assertType(params, \"topic\");\n\n  return params;\n}\n\nexport function parsePublishRequest(request: JsonRpcRequest): RelayJsonRpc.PublishParams {\n  if (!isPublishMethod(request.method)) {\n    throw new Error(\"JSON-RPC Request has invalid publish method\");\n  }\n  if (!isPublishParams(request.params)) {\n    throw new Error(\"JSON-RPC Request has invalid publish params\");\n  }\n  const params = request.params as RelayJsonRpc.PublishParams;\n\n  assertType(params, \"topic\");\n  assertType(params, \"message\");\n  assertType(params, \"ttl\", \"number\");\n\n  return params;\n}\n\nexport function parseUnsubscribeRequest(request: JsonRpcRequest): RelayJsonRpc.UnsubscribeParams {\n  if (!isUnsubscribeMethod(request.method)) {\n    throw new Error(\"JSON-RPC Request has invalid unsubscribe method\");\n  }\n  if (!isUnsubscribeParams(request.params)) {\n    throw new Error(\"JSON-RPC Request has invalid unsubscribe params\");\n  }\n  const params = request.params as RelayJsonRpc.UnsubscribeParams;\n\n  assertType(params, \"id\");\n\n  return params;\n}\n\nexport function parseSubscriptionRequest(request: JsonRpcRequest): RelayJsonRpc.SubscriptionParams {\n  if (!isSubscriptionMethod(request.method)) {\n    throw new Error(\"JSON-RPC Request has invalid subscription method\");\n  }\n  if (!isSubscriptionParams(request.params)) {\n    throw new Error(\"JSON-RPC Request has invalid subscription params\");\n  }\n  const params = request.params as RelayJsonRpc.SubscriptionParams;\n\n  assertType(params, \"id\");\n  assertType(params, \"data\");\n\n  return params;\n}\n", "import { RelayJsonRpc } from \"./types\";\n\nexport const RELAY_JSONRPC: { [protocol: string]: RelayJsonRpc.Methods } = {\n  waku: {\n    publish: \"waku_publish\",\n    batchPublish: \"waku_batchPublish\",\n    subscribe: \"waku_subscribe\",\n    batchSubscribe: \"waku_batchSubscribe\",\n    subscription: \"waku_subscription\",\n    unsubscribe: \"waku_unsubscribe\",\n    batchUnsubscribe: \"waku_batchUnsubscribe\",\n    batchFetchMessages: \"waku_batchFetchMessages\",\n  },\n  irn: {\n    publish: \"irn_publish\",\n    batchPublish: \"irn_batchPublish\",\n    subscribe: \"irn_subscribe\",\n    batchSubscribe: \"irn_batchSubscribe\",\n    subscription: \"irn_subscription\",\n    unsubscribe: \"irn_unsubscribe\",\n    batchUnsubscribe: \"irn_batchUnsubscribe\",\n    batchFetchMessages: \"irn_batchFetchMessages\",\n  },\n  iridium: {\n    publish: \"iridium_publish\",\n    batchPublish: \"iridium_batchPublish\",\n    subscribe: \"iridium_subscribe\",\n    batchSubscribe: \"iridium_batchSubscribe\",\n    subscription: \"iridium_subscription\",\n    unsubscribe: \"iridium_unsubscribe\",\n    batchUnsubscribe: \"iridium_batchUnsubscribe\",\n    batchFetchMessages: \"iridium_batchFetchMessages\",\n  },\n};\n", null, "const suspectProtoRx = /\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/;\r\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/;\r\nconst JsonSigRx = /^\\s*[\"[{]|^\\s*-?\\d{1,16}(\\.\\d{1,17})?([Ee][+-]?\\d+)?\\s*$/;\r\nfunction jsonParseTransform(key, value) {\r\n  if (key === \"__proto__\" || key === \"constructor\" && value && typeof value === \"object\" && \"prototype\" in value) {\r\n    warnKeyDropped(key);\r\n    return;\r\n  }\r\n  return value;\r\n}\r\nfunction warnKeyDropped(key) {\r\n  console.warn(`[destr] Dropping \"${key}\" key to prevent prototype pollution.`);\r\n}\r\nfunction destr(value, options = {}) {\r\n  if (typeof value !== \"string\") {\r\n    return value;\r\n  }\r\n  if (value[0] === '\"' && value[value.length - 1] === '\"' && value.indexOf(\"\\\\\") === -1) {\r\n    return value.slice(1, -1);\r\n  }\r\n  const _value = value.trim();\r\n  if (_value.length <= 9) {\r\n    switch (_value.toLowerCase()) {\r\n      case \"true\": {\r\n        return true;\r\n      }\r\n      case \"false\": {\r\n        return false;\r\n      }\r\n      case \"undefined\": {\r\n        return void 0;\r\n      }\r\n      case \"null\": {\r\n        return null;\r\n      }\r\n      case \"nan\": {\r\n        return Number.NaN;\r\n      }\r\n      case \"infinity\": {\r\n        return Number.POSITIVE_INFINITY;\r\n      }\r\n      case \"-infinity\": {\r\n        return Number.NEGATIVE_INFINITY;\r\n      }\r\n    }\r\n  }\r\n  if (!JsonSigRx.test(value)) {\r\n    if (options.strict) {\r\n      throw new SyntaxError(\"[destr] Invalid JSON\");\r\n    }\r\n    return value;\r\n  }\r\n  try {\r\n    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {\r\n      if (options.strict) {\r\n        throw new Error(\"[destr] Possible prototype pollution\");\r\n      }\r\n      return JSON.parse(value, jsonParseTransform);\r\n    }\r\n    return JSON.parse(value);\r\n  } catch (error) {\r\n    if (options.strict) {\r\n      throw error;\r\n    }\r\n    return value;\r\n  }\r\n}\r\nfunction safeDestr(value, options = {}) {\r\n  return destr(value, { ...options, strict: true });\r\n}\r\n\r\nexport { destr as default, destr, safeDestr };\r\n", "function wrapToPromise(value) {\r\n  if (!value || typeof value.then !== \"function\") {\r\n    return Promise.resolve(value);\r\n  }\r\n  return value;\r\n}\r\nfunction asyncCall(function_, ...arguments_) {\r\n  try {\r\n    return wrapToPromise(function_(...arguments_));\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n}\r\nfunction isPrimitive(value) {\r\n  const type = typeof value;\r\n  return value === null || type !== \"object\" && type !== \"function\";\r\n}\r\nfunction isPureObject(value) {\r\n  const proto = Object.getPrototypeOf(value);\r\n  return !proto || proto.isPrototypeOf(Object);\r\n}\r\nfunction stringify(value) {\r\n  if (isPrimitive(value)) {\r\n    return String(value);\r\n  }\r\n  if (isPureObject(value) || Array.isArray(value)) {\r\n    return JSON.stringify(value);\r\n  }\r\n  if (typeof value.toJSON === \"function\") {\r\n    return stringify(value.toJSON());\r\n  }\r\n  throw new Error(\"[unstorage] Cannot stringify value!\");\r\n}\r\nconst BASE64_PREFIX = \"base64:\";\r\nfunction serializeRaw(value) {\r\n  if (typeof value === \"string\") {\r\n    return value;\r\n  }\r\n  return BASE64_PREFIX + base64Encode(value);\r\n}\r\nfunction deserializeRaw(value) {\r\n  if (typeof value !== \"string\") {\r\n    return value;\r\n  }\r\n  if (!value.startsWith(BASE64_PREFIX)) {\r\n    return value;\r\n  }\r\n  return base64Decode(value.slice(BASE64_PREFIX.length));\r\n}\r\nfunction base64Decode(input) {\r\n  if (globalThis.Buffer) {\r\n    return Buffer.from(input, \"base64\");\r\n  }\r\n  return Uint8Array.from(\r\n    globalThis.atob(input),\r\n    (c) => c.codePointAt(0)\r\n  );\r\n}\r\nfunction base64Encode(input) {\r\n  if (globalThis.Buffer) {\r\n    return Buffer.from(input).toString(\"base64\");\r\n  }\r\n  return globalThis.btoa(String.fromCodePoint(...input));\r\n}\r\n\r\nconst storageKeyProperties = [\r\n  \"has\",\r\n  \"hasItem\",\r\n  \"get\",\r\n  \"getItem\",\r\n  \"getItemRaw\",\r\n  \"set\",\r\n  \"setItem\",\r\n  \"setItemRaw\",\r\n  \"del\",\r\n  \"remove\",\r\n  \"removeItem\",\r\n  \"getMeta\",\r\n  \"setMeta\",\r\n  \"removeMeta\",\r\n  \"getKeys\",\r\n  \"clear\",\r\n  \"mount\",\r\n  \"unmount\"\r\n];\r\nfunction prefixStorage(storage, base) {\r\n  base = normalizeBaseKey(base);\r\n  if (!base) {\r\n    return storage;\r\n  }\r\n  const nsStorage = { ...storage };\r\n  for (const property of storageKeyProperties) {\r\n    nsStorage[property] = (key = \"\", ...args) => (\r\n      // @ts-ignore\r\n      storage[property](base + key, ...args)\r\n    );\r\n  }\r\n  nsStorage.getKeys = (key = \"\", ...arguments_) => storage.getKeys(base + key, ...arguments_).then((keys) => keys.map((key2) => key2.slice(base.length)));\r\n  return nsStorage;\r\n}\r\nfunction normalizeKey(key) {\r\n  if (!key) {\r\n    return \"\";\r\n  }\r\n  return key.split(\"?\")[0]?.replace(/[/\\\\]/g, \":\").replace(/:+/g, \":\").replace(/^:|:$/g, \"\") || \"\";\r\n}\r\nfunction joinKeys(...keys) {\r\n  return normalizeKey(keys.join(\":\"));\r\n}\r\nfunction normalizeBaseKey(base) {\r\n  base = normalizeKey(base);\r\n  return base ? base + \":\" : \"\";\r\n}\r\nfunction filterKeyByDepth(key, depth) {\r\n  if (depth === void 0) {\r\n    return true;\r\n  }\r\n  let substrCount = 0;\r\n  let index = key.indexOf(\":\");\r\n  while (index > -1) {\r\n    substrCount++;\r\n    index = key.indexOf(\":\", index + 1);\r\n  }\r\n  return substrCount <= depth;\r\n}\r\nfunction filterKeyByBase(key, base) {\r\n  if (base) {\r\n    return key.startsWith(base) && key[key.length - 1] !== \"$\";\r\n  }\r\n  return key[key.length - 1] !== \"$\";\r\n}\r\n\r\nexport { normalizeKey as a, asyncCall as b, filterKeyByBase as c, stringify as d, deserializeRaw as e, filterKeyByDepth as f, joinKeys as j, normalizeBaseKey as n, prefixStorage as p, serializeRaw as s };\r\n", "import destr from 'destr';\r\nimport { n as normalizeBaseKey, a as normalizeKey, b as asyncCall, f as filterKeyByDepth, c as filterKeyByBase, s as serializeRaw, d as stringify, e as deserializeRaw, j as joinKeys } from './shared/unstorage.mNKHTF5Y.mjs';\r\nexport { p as prefixStorage } from './shared/unstorage.mNKHTF5Y.mjs';\r\n\r\nfunction defineDriver(factory) {\r\n  return factory;\r\n}\r\n\r\nconst DRIVER_NAME = \"memory\";\r\nconst memory = defineDriver(() => {\r\n  const data = /* @__PURE__ */ new Map();\r\n  return {\r\n    name: DRIVER_NAME,\r\n    getInstance: () => data,\r\n    hasItem(key) {\r\n      return data.has(key);\r\n    },\r\n    getItem(key) {\r\n      return data.get(key) ?? null;\r\n    },\r\n    getItemRaw(key) {\r\n      return data.get(key) ?? null;\r\n    },\r\n    setItem(key, value) {\r\n      data.set(key, value);\r\n    },\r\n    setItemRaw(key, value) {\r\n      data.set(key, value);\r\n    },\r\n    removeItem(key) {\r\n      data.delete(key);\r\n    },\r\n    getKeys() {\r\n      return [...data.keys()];\r\n    },\r\n    clear() {\r\n      data.clear();\r\n    },\r\n    dispose() {\r\n      data.clear();\r\n    }\r\n  };\r\n});\r\n\r\nfunction createStorage(options = {}) {\r\n  const context = {\r\n    mounts: { \"\": options.driver || memory() },\r\n    mountpoints: [\"\"],\r\n    watching: false,\r\n    watchListeners: [],\r\n    unwatch: {}\r\n  };\r\n  const getMount = (key) => {\r\n    for (const base of context.mountpoints) {\r\n      if (key.startsWith(base)) {\r\n        return {\r\n          base,\r\n          relativeKey: key.slice(base.length),\r\n          driver: context.mounts[base]\r\n        };\r\n      }\r\n    }\r\n    return {\r\n      base: \"\",\r\n      relativeKey: key,\r\n      driver: context.mounts[\"\"]\r\n    };\r\n  };\r\n  const getMounts = (base, includeParent) => {\r\n    return context.mountpoints.filter(\r\n      (mountpoint) => mountpoint.startsWith(base) || includeParent && base.startsWith(mountpoint)\r\n    ).map((mountpoint) => ({\r\n      relativeBase: base.length > mountpoint.length ? base.slice(mountpoint.length) : void 0,\r\n      mountpoint,\r\n      driver: context.mounts[mountpoint]\r\n    }));\r\n  };\r\n  const onChange = (event, key) => {\r\n    if (!context.watching) {\r\n      return;\r\n    }\r\n    key = normalizeKey(key);\r\n    for (const listener of context.watchListeners) {\r\n      listener(event, key);\r\n    }\r\n  };\r\n  const startWatch = async () => {\r\n    if (context.watching) {\r\n      return;\r\n    }\r\n    context.watching = true;\r\n    for (const mountpoint in context.mounts) {\r\n      context.unwatch[mountpoint] = await watch(\r\n        context.mounts[mountpoint],\r\n        onChange,\r\n        mountpoint\r\n      );\r\n    }\r\n  };\r\n  const stopWatch = async () => {\r\n    if (!context.watching) {\r\n      return;\r\n    }\r\n    for (const mountpoint in context.unwatch) {\r\n      await context.unwatch[mountpoint]();\r\n    }\r\n    context.unwatch = {};\r\n    context.watching = false;\r\n  };\r\n  const runBatch = (items, commonOptions, cb) => {\r\n    const batches = /* @__PURE__ */ new Map();\r\n    const getBatch = (mount) => {\r\n      let batch = batches.get(mount.base);\r\n      if (!batch) {\r\n        batch = {\r\n          driver: mount.driver,\r\n          base: mount.base,\r\n          items: []\r\n        };\r\n        batches.set(mount.base, batch);\r\n      }\r\n      return batch;\r\n    };\r\n    for (const item of items) {\r\n      const isStringItem = typeof item === \"string\";\r\n      const key = normalizeKey(isStringItem ? item : item.key);\r\n      const value = isStringItem ? void 0 : item.value;\r\n      const options2 = isStringItem || !item.options ? commonOptions : { ...commonOptions, ...item.options };\r\n      const mount = getMount(key);\r\n      getBatch(mount).items.push({\r\n        key,\r\n        value,\r\n        relativeKey: mount.relativeKey,\r\n        options: options2\r\n      });\r\n    }\r\n    return Promise.all([...batches.values()].map((batch) => cb(batch))).then(\r\n      (r) => r.flat()\r\n    );\r\n  };\r\n  const storage = {\r\n    // Item\r\n    hasItem(key, opts = {}) {\r\n      key = normalizeKey(key);\r\n      const { relativeKey, driver } = getMount(key);\r\n      return asyncCall(driver.hasItem, relativeKey, opts);\r\n    },\r\n    getItem(key, opts = {}) {\r\n      key = normalizeKey(key);\r\n      const { relativeKey, driver } = getMount(key);\r\n      return asyncCall(driver.getItem, relativeKey, opts).then(\r\n        (value) => destr(value)\r\n      );\r\n    },\r\n    getItems(items, commonOptions = {}) {\r\n      return runBatch(items, commonOptions, (batch) => {\r\n        if (batch.driver.getItems) {\r\n          return asyncCall(\r\n            batch.driver.getItems,\r\n            batch.items.map((item) => ({\r\n              key: item.relativeKey,\r\n              options: item.options\r\n            })),\r\n            commonOptions\r\n          ).then(\r\n            (r) => r.map((item) => ({\r\n              key: joinKeys(batch.base, item.key),\r\n              value: destr(item.value)\r\n            }))\r\n          );\r\n        }\r\n        return Promise.all(\r\n          batch.items.map((item) => {\r\n            return asyncCall(\r\n              batch.driver.getItem,\r\n              item.relativeKey,\r\n              item.options\r\n            ).then((value) => ({\r\n              key: item.key,\r\n              value: destr(value)\r\n            }));\r\n          })\r\n        );\r\n      });\r\n    },\r\n    getItemRaw(key, opts = {}) {\r\n      key = normalizeKey(key);\r\n      const { relativeKey, driver } = getMount(key);\r\n      if (driver.getItemRaw) {\r\n        return asyncCall(driver.getItemRaw, relativeKey, opts);\r\n      }\r\n      return asyncCall(driver.getItem, relativeKey, opts).then(\r\n        (value) => deserializeRaw(value)\r\n      );\r\n    },\r\n    async setItem(key, value, opts = {}) {\r\n      if (value === void 0) {\r\n        return storage.removeItem(key);\r\n      }\r\n      key = normalizeKey(key);\r\n      const { relativeKey, driver } = getMount(key);\r\n      if (!driver.setItem) {\r\n        return;\r\n      }\r\n      await asyncCall(driver.setItem, relativeKey, stringify(value), opts);\r\n      if (!driver.watch) {\r\n        onChange(\"update\", key);\r\n      }\r\n    },\r\n    async setItems(items, commonOptions) {\r\n      await runBatch(items, commonOptions, async (batch) => {\r\n        if (batch.driver.setItems) {\r\n          return asyncCall(\r\n            batch.driver.setItems,\r\n            batch.items.map((item) => ({\r\n              key: item.relativeKey,\r\n              value: stringify(item.value),\r\n              options: item.options\r\n            })),\r\n            commonOptions\r\n          );\r\n        }\r\n        if (!batch.driver.setItem) {\r\n          return;\r\n        }\r\n        await Promise.all(\r\n          batch.items.map((item) => {\r\n            return asyncCall(\r\n              batch.driver.setItem,\r\n              item.relativeKey,\r\n              stringify(item.value),\r\n              item.options\r\n            );\r\n          })\r\n        );\r\n      });\r\n    },\r\n    async setItemRaw(key, value, opts = {}) {\r\n      if (value === void 0) {\r\n        return storage.removeItem(key, opts);\r\n      }\r\n      key = normalizeKey(key);\r\n      const { relativeKey, driver } = getMount(key);\r\n      if (driver.setItemRaw) {\r\n        await asyncCall(driver.setItemRaw, relativeKey, value, opts);\r\n      } else if (driver.setItem) {\r\n        await asyncCall(driver.setItem, relativeKey, serializeRaw(value), opts);\r\n      } else {\r\n        return;\r\n      }\r\n      if (!driver.watch) {\r\n        onChange(\"update\", key);\r\n      }\r\n    },\r\n    async removeItem(key, opts = {}) {\r\n      if (typeof opts === \"boolean\") {\r\n        opts = { removeMeta: opts };\r\n      }\r\n      key = normalizeKey(key);\r\n      const { relativeKey, driver } = getMount(key);\r\n      if (!driver.removeItem) {\r\n        return;\r\n      }\r\n      await asyncCall(driver.removeItem, relativeKey, opts);\r\n      if (opts.removeMeta || opts.removeMata) {\r\n        await asyncCall(driver.removeItem, relativeKey + \"$\", opts);\r\n      }\r\n      if (!driver.watch) {\r\n        onChange(\"remove\", key);\r\n      }\r\n    },\r\n    // Meta\r\n    async getMeta(key, opts = {}) {\r\n      if (typeof opts === \"boolean\") {\r\n        opts = { nativeOnly: opts };\r\n      }\r\n      key = normalizeKey(key);\r\n      const { relativeKey, driver } = getMount(key);\r\n      const meta = /* @__PURE__ */ Object.create(null);\r\n      if (driver.getMeta) {\r\n        Object.assign(meta, await asyncCall(driver.getMeta, relativeKey, opts));\r\n      }\r\n      if (!opts.nativeOnly) {\r\n        const value = await asyncCall(\r\n          driver.getItem,\r\n          relativeKey + \"$\",\r\n          opts\r\n        ).then((value_) => destr(value_));\r\n        if (value && typeof value === \"object\") {\r\n          if (typeof value.atime === \"string\") {\r\n            value.atime = new Date(value.atime);\r\n          }\r\n          if (typeof value.mtime === \"string\") {\r\n            value.mtime = new Date(value.mtime);\r\n          }\r\n          Object.assign(meta, value);\r\n        }\r\n      }\r\n      return meta;\r\n    },\r\n    setMeta(key, value, opts = {}) {\r\n      return this.setItem(key + \"$\", value, opts);\r\n    },\r\n    removeMeta(key, opts = {}) {\r\n      return this.removeItem(key + \"$\", opts);\r\n    },\r\n    // Keys\r\n    async getKeys(base, opts = {}) {\r\n      base = normalizeBaseKey(base);\r\n      const mounts = getMounts(base, true);\r\n      let maskedMounts = [];\r\n      const allKeys = [];\r\n      let allMountsSupportMaxDepth = true;\r\n      for (const mount of mounts) {\r\n        if (!mount.driver.flags?.maxDepth) {\r\n          allMountsSupportMaxDepth = false;\r\n        }\r\n        const rawKeys = await asyncCall(\r\n          mount.driver.getKeys,\r\n          mount.relativeBase,\r\n          opts\r\n        );\r\n        for (const key of rawKeys) {\r\n          const fullKey = mount.mountpoint + normalizeKey(key);\r\n          if (!maskedMounts.some((p) => fullKey.startsWith(p))) {\r\n            allKeys.push(fullKey);\r\n          }\r\n        }\r\n        maskedMounts = [\r\n          mount.mountpoint,\r\n          ...maskedMounts.filter((p) => !p.startsWith(mount.mountpoint))\r\n        ];\r\n      }\r\n      const shouldFilterByDepth = opts.maxDepth !== void 0 && !allMountsSupportMaxDepth;\r\n      return allKeys.filter(\r\n        (key) => (!shouldFilterByDepth || filterKeyByDepth(key, opts.maxDepth)) && filterKeyByBase(key, base)\r\n      );\r\n    },\r\n    // Utils\r\n    async clear(base, opts = {}) {\r\n      base = normalizeBaseKey(base);\r\n      await Promise.all(\r\n        getMounts(base, false).map(async (m) => {\r\n          if (m.driver.clear) {\r\n            return asyncCall(m.driver.clear, m.relativeBase, opts);\r\n          }\r\n          if (m.driver.removeItem) {\r\n            const keys = await m.driver.getKeys(m.relativeBase || \"\", opts);\r\n            return Promise.all(\r\n              keys.map((key) => m.driver.removeItem(key, opts))\r\n            );\r\n          }\r\n        })\r\n      );\r\n    },\r\n    async dispose() {\r\n      await Promise.all(\r\n        Object.values(context.mounts).map((driver) => dispose(driver))\r\n      );\r\n    },\r\n    async watch(callback) {\r\n      await startWatch();\r\n      context.watchListeners.push(callback);\r\n      return async () => {\r\n        context.watchListeners = context.watchListeners.filter(\r\n          (listener) => listener !== callback\r\n        );\r\n        if (context.watchListeners.length === 0) {\r\n          await stopWatch();\r\n        }\r\n      };\r\n    },\r\n    async unwatch() {\r\n      context.watchListeners = [];\r\n      await stopWatch();\r\n    },\r\n    // Mount\r\n    mount(base, driver) {\r\n      base = normalizeBaseKey(base);\r\n      if (base && context.mounts[base]) {\r\n        throw new Error(`already mounted at ${base}`);\r\n      }\r\n      if (base) {\r\n        context.mountpoints.push(base);\r\n        context.mountpoints.sort((a, b) => b.length - a.length);\r\n      }\r\n      context.mounts[base] = driver;\r\n      if (context.watching) {\r\n        Promise.resolve(watch(driver, onChange, base)).then((unwatcher) => {\r\n          context.unwatch[base] = unwatcher;\r\n        }).catch(console.error);\r\n      }\r\n      return storage;\r\n    },\r\n    async unmount(base, _dispose = true) {\r\n      base = normalizeBaseKey(base);\r\n      if (!base || !context.mounts[base]) {\r\n        return;\r\n      }\r\n      if (context.watching && base in context.unwatch) {\r\n        context.unwatch[base]?.();\r\n        delete context.unwatch[base];\r\n      }\r\n      if (_dispose) {\r\n        await dispose(context.mounts[base]);\r\n      }\r\n      context.mountpoints = context.mountpoints.filter((key) => key !== base);\r\n      delete context.mounts[base];\r\n    },\r\n    getMount(key = \"\") {\r\n      key = normalizeKey(key) + \":\";\r\n      const m = getMount(key);\r\n      return {\r\n        driver: m.driver,\r\n        base: m.base\r\n      };\r\n    },\r\n    getMounts(base = \"\", opts = {}) {\r\n      base = normalizeKey(base);\r\n      const mounts = getMounts(base, opts.parents);\r\n      return mounts.map((m) => ({\r\n        driver: m.driver,\r\n        base: m.mountpoint\r\n      }));\r\n    },\r\n    // Aliases\r\n    keys: (base, opts = {}) => storage.getKeys(base, opts),\r\n    get: (key, opts = {}) => storage.getItem(key, opts),\r\n    set: (key, value, opts = {}) => storage.setItem(key, value, opts),\r\n    has: (key, opts = {}) => storage.hasItem(key, opts),\r\n    del: (key, opts = {}) => storage.removeItem(key, opts),\r\n    remove: (key, opts = {}) => storage.removeItem(key, opts)\r\n  };\r\n  return storage;\r\n}\r\nasync function snapshot(storage, base) {\r\n  base = normalizeBaseKey(base);\r\n  const keys = await storage.getKeys(base);\r\n  const snapshot2 = {};\r\n  await Promise.all(\r\n    keys.map(async (key) => {\r\n      snapshot2[key.slice(base.length)] = await storage.getItem(key);\r\n    })\r\n  );\r\n  return snapshot2;\r\n}\r\nasync function restoreSnapshot(driver, snapshot2, base = \"\") {\r\n  base = normalizeBaseKey(base);\r\n  await Promise.all(\r\n    Object.entries(snapshot2).map((e) => driver.setItem(base + e[0], e[1]))\r\n  );\r\n}\r\nfunction watch(driver, onChange, base) {\r\n  return driver.watch ? driver.watch((event, key) => onChange(event, base + key)) : () => {\r\n  };\r\n}\r\nasync function dispose(driver) {\r\n  if (typeof driver.dispose === \"function\") {\r\n    await asyncCall(driver.dispose);\r\n  }\r\n}\r\n\r\nconst builtinDrivers = {\r\n  \"azure-app-configuration\": \"unstorage/drivers/azure-app-configuration\",\r\n  \"azureAppConfiguration\": \"unstorage/drivers/azure-app-configuration\",\r\n  \"azure-cosmos\": \"unstorage/drivers/azure-cosmos\",\r\n  \"azureCosmos\": \"unstorage/drivers/azure-cosmos\",\r\n  \"azure-key-vault\": \"unstorage/drivers/azure-key-vault\",\r\n  \"azureKeyVault\": \"unstorage/drivers/azure-key-vault\",\r\n  \"azure-storage-blob\": \"unstorage/drivers/azure-storage-blob\",\r\n  \"azureStorageBlob\": \"unstorage/drivers/azure-storage-blob\",\r\n  \"azure-storage-table\": \"unstorage/drivers/azure-storage-table\",\r\n  \"azureStorageTable\": \"unstorage/drivers/azure-storage-table\",\r\n  \"capacitor-preferences\": \"unstorage/drivers/capacitor-preferences\",\r\n  \"capacitorPreferences\": \"unstorage/drivers/capacitor-preferences\",\r\n  \"cloudflare-kv-binding\": \"unstorage/drivers/cloudflare-kv-binding\",\r\n  \"cloudflareKVBinding\": \"unstorage/drivers/cloudflare-kv-binding\",\r\n  \"cloudflare-kv-http\": \"unstorage/drivers/cloudflare-kv-http\",\r\n  \"cloudflareKVHttp\": \"unstorage/drivers/cloudflare-kv-http\",\r\n  \"cloudflare-r2-binding\": \"unstorage/drivers/cloudflare-r2-binding\",\r\n  \"cloudflareR2Binding\": \"unstorage/drivers/cloudflare-r2-binding\",\r\n  \"db0\": \"unstorage/drivers/db0\",\r\n  \"deno-kv-node\": \"unstorage/drivers/deno-kv-node\",\r\n  \"denoKVNode\": \"unstorage/drivers/deno-kv-node\",\r\n  \"deno-kv\": \"unstorage/drivers/deno-kv\",\r\n  \"denoKV\": \"unstorage/drivers/deno-kv\",\r\n  \"fs-lite\": \"unstorage/drivers/fs-lite\",\r\n  \"fsLite\": \"unstorage/drivers/fs-lite\",\r\n  \"fs\": \"unstorage/drivers/fs\",\r\n  \"github\": \"unstorage/drivers/github\",\r\n  \"http\": \"unstorage/drivers/http\",\r\n  \"indexedb\": \"unstorage/drivers/indexedb\",\r\n  \"localstorage\": \"unstorage/drivers/localstorage\",\r\n  \"lru-cache\": \"unstorage/drivers/lru-cache\",\r\n  \"lruCache\": \"unstorage/drivers/lru-cache\",\r\n  \"memory\": \"unstorage/drivers/memory\",\r\n  \"mongodb\": \"unstorage/drivers/mongodb\",\r\n  \"netlify-blobs\": \"unstorage/drivers/netlify-blobs\",\r\n  \"netlifyBlobs\": \"unstorage/drivers/netlify-blobs\",\r\n  \"null\": \"unstorage/drivers/null\",\r\n  \"overlay\": \"unstorage/drivers/overlay\",\r\n  \"planetscale\": \"unstorage/drivers/planetscale\",\r\n  \"redis\": \"unstorage/drivers/redis\",\r\n  \"s3\": \"unstorage/drivers/s3\",\r\n  \"session-storage\": \"unstorage/drivers/session-storage\",\r\n  \"sessionStorage\": \"unstorage/drivers/session-storage\",\r\n  \"uploadthing\": \"unstorage/drivers/uploadthing\",\r\n  \"upstash\": \"unstorage/drivers/upstash\",\r\n  \"vercel-blob\": \"unstorage/drivers/vercel-blob\",\r\n  \"vercelBlob\": \"unstorage/drivers/vercel-blob\",\r\n  \"vercel-kv\": \"unstorage/drivers/vercel-kv\",\r\n  \"vercelKV\": \"unstorage/drivers/vercel-kv\"\r\n};\r\n\r\nexport { builtinDrivers, createStorage, defineDriver, filterKeyByBase, filterKeyByDepth, joinKeys, normalizeBaseKey, normalizeKey, restoreSnapshot, snapshot };\r\n", "function promisifyRequest(request) {\r\n    return new Promise((resolve, reject) => {\r\n        // @ts-ignore - file size hacks\r\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\r\n        // @ts-ignore - file size hacks\r\n        request.onabort = request.onerror = () => reject(request.error);\r\n    });\r\n}\r\nfunction createStore(dbName, storeName) {\r\n    const request = indexedDB.open(dbName);\r\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\r\n    const dbp = promisifyRequest(request);\r\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\r\n}\r\nlet defaultGetStoreFunc;\r\nfunction defaultGetStore() {\r\n    if (!defaultGetStoreFunc) {\r\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\r\n    }\r\n    return defaultGetStoreFunc;\r\n}\r\n/**\r\n * Get a value by its key.\r\n *\r\n * @param key\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction get(key, customStore = defaultGetStore()) {\r\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\r\n}\r\n/**\r\n * Set a value with a key.\r\n *\r\n * @param key\r\n * @param value\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction set(key, value, customStore = defaultGetStore()) {\r\n    return customStore('readwrite', (store) => {\r\n        store.put(value, key);\r\n        return promisifyRequest(store.transaction);\r\n    });\r\n}\r\n/**\r\n * Set multiple values at once. This is faster than calling set() multiple times.\r\n * It's also atomic – if one of the pairs can't be added, none will be added.\r\n *\r\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction setMany(entries, customStore = defaultGetStore()) {\r\n    return customStore('readwrite', (store) => {\r\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\r\n        return promisifyRequest(store.transaction);\r\n    });\r\n}\r\n/**\r\n * Get multiple values by their keys\r\n *\r\n * @param keys\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction getMany(keys, customStore = defaultGetStore()) {\r\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\r\n}\r\n/**\r\n * Update a value. This lets you see the old value and update it as an atomic operation.\r\n *\r\n * @param key\r\n * @param updater A callback that takes the old value and returns a new value.\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction update(key, updater, customStore = defaultGetStore()) {\r\n    return customStore('readwrite', (store) => \r\n    // Need to create the promise manually.\r\n    // If I try to chain promises, the transaction closes in browsers\r\n    // that use a promise polyfill (IE10/11).\r\n    new Promise((resolve, reject) => {\r\n        store.get(key).onsuccess = function () {\r\n            try {\r\n                store.put(updater(this.result), key);\r\n                resolve(promisifyRequest(store.transaction));\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        };\r\n    }));\r\n}\r\n/**\r\n * Delete a particular key from the store.\r\n *\r\n * @param key\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction del(key, customStore = defaultGetStore()) {\r\n    return customStore('readwrite', (store) => {\r\n        store.delete(key);\r\n        return promisifyRequest(store.transaction);\r\n    });\r\n}\r\n/**\r\n * Delete multiple keys at once.\r\n *\r\n * @param keys List of keys to delete.\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction delMany(keys, customStore = defaultGetStore()) {\r\n    return customStore('readwrite', (store) => {\r\n        keys.forEach((key) => store.delete(key));\r\n        return promisifyRequest(store.transaction);\r\n    });\r\n}\r\n/**\r\n * Clear all values in the store.\r\n *\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction clear(customStore = defaultGetStore()) {\r\n    return customStore('readwrite', (store) => {\r\n        store.clear();\r\n        return promisifyRequest(store.transaction);\r\n    });\r\n}\r\nfunction eachCursor(store, callback) {\r\n    store.openCursor().onsuccess = function () {\r\n        if (!this.result)\r\n            return;\r\n        callback(this.result);\r\n        this.result.continue();\r\n    };\r\n    return promisifyRequest(store.transaction);\r\n}\r\n/**\r\n * Get all keys in the store.\r\n *\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction keys(customStore = defaultGetStore()) {\r\n    return customStore('readonly', (store) => {\r\n        // Fast path for modern browsers\r\n        if (store.getAllKeys) {\r\n            return promisifyRequest(store.getAllKeys());\r\n        }\r\n        const items = [];\r\n        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);\r\n    });\r\n}\r\n/**\r\n * Get all values in the store.\r\n *\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction values(customStore = defaultGetStore()) {\r\n    return customStore('readonly', (store) => {\r\n        // Fast path for modern browsers\r\n        if (store.getAll) {\r\n            return promisifyRequest(store.getAll());\r\n        }\r\n        const items = [];\r\n        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);\r\n    });\r\n}\r\n/**\r\n * Get all entries in the store. Each entry is an array of `[key, value]`.\r\n *\r\n * @param customStore Method to get a custom store. Use with caution (see the docs).\r\n */\r\nfunction entries(customStore = defaultGetStore()) {\r\n    return customStore('readonly', (store) => {\r\n        // Fast path for modern browsers\r\n        // (although, hopefully we'll get a simpler path some day)\r\n        if (store.getAll && store.getAllKeys) {\r\n            return Promise.all([\r\n                promisifyRequest(store.getAllKeys()),\r\n                promisifyRequest(store.getAll()),\r\n            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));\r\n        }\r\n        const items = [];\r\n        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));\r\n    });\r\n}\r\n\r\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\r\n", null, null, null, null, null, null, "import { EventEmitter } from \"events\";\n\nexport abstract class IEvents {\n  public abstract events: EventEmitter;\n\n  // events\n  public abstract on(event: string, listener: any): void;\n  public abstract once(event: string, listener: any): void;\n  public abstract off(event: string, listener: any): void;\n  public abstract removeListener(event: string, listener: any): void;\n}\n", "import { JsonRpcPayload, JsonRpcRequest, RequestArguments } from \"./jsonrpc\";\nimport { IEvents } from \"./misc\";\n\nexport abstract class IJsonRpcConnection extends IEvents {\n  public abstract connected: boolean;\n  public abstract connecting: boolean;\n  // @ts-ignore - opts is not used in abstract class constructor\n  constructor(opts?: any) {\n    super();\n  }\n\n  public abstract open(opts?: any): Promise<void>;\n  public abstract close(): Promise<void>;\n  public abstract send(payload: JsonRpcPayload, context?: any): Promise<void>;\n}\n\nexport abstract class IBaseJsonRpcProvider extends IEvents {\n  // eslint-disable-next-line no-useless-constructor\n  constructor() {\n    super();\n  }\n\n  public abstract connect(params?: any): Promise<void>;\n\n  public abstract disconnect(): Promise<void>;\n\n  public abstract request<Result = any, Params = any>(\n    request: RequestArguments<Params>,\n    context?: any,\n  ): Promise<Result>;\n\n  // ---------- Protected ----------------------------------------------- //\n\n  protected abstract requestStrict<Result = any, Params = any>(\n    request: JsonRpcRequest<Params>,\n    context?: any,\n  ): Promise<Result>;\n}\n\nexport abstract class IJsonRpcProvider extends IBaseJsonRpcProvider {\n  public abstract connection: IJsonRpcConnection;\n\n  // @ts-ignore - connection is not used in abstract class constructor\n  constructor(connection: string | IJsonRpcConnection) {\n    super();\n  }\n\n  public abstract connect(connection?: string | IJsonRpcConnection): Promise<void>;\n\n  // ---------- Protected ----------------------------------------------- //\n\n  protected abstract setConnection(connection?: string | IJsonRpcConnection): IJsonRpcConnection;\n\n  protected abstract onPayload(payload: JsonRpcPayload): void;\n\n  protected abstract open(connection?: string | IJsonRpcConnection): Promise<void>;\n\n  protected abstract close(): Promise<void>;\n}\n", null, null],
  "mappings": "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",
  "names": ["d", "b", "s", "e", "p", "i", "c", "r", "P", "_", "f", "y", "g", "n", "v", "o", "m", "k", "k2", "ar", "a", "j", "q", "__assign", "name", "e", "icons", "i", "name", "description", "o", "e", "f", "a", "i", "k", "transmit", "level", "set", "fallback", "ts", "i", "o", "a", "e", "tslib_es6_exports", "__assign", "__asyncDelegator", "__asyncGenerator", "__asyncValues", "__await", "__awaiter", "__classPrivateFieldGet", "__classPrivateFieldSet", "__createBinding", "__decorate", "__exportStar", "__extends", "__generator", "__importDefault", "__importStar", "__makeTemplateObject", "__metadata", "__param", "__read", "__rest", "__spread", "__spreadArrays", "__values", "d", "b", "extendStatics", "s", "e", "p", "i", "c", "r", "P", "_", "f", "y", "g", "n", "v", "o", "m", "k", "k2", "ar", "a", "j", "q", "init_tslib_es6", "isNode", "require_browser", "F", "globalThis", "exports", "g", "e", "name", "i", "decode", "Request", "fetch", "secp256k1", "r", "s", "v", "yParityOrV", "recoveryBit", "BaseError", "x", "fn", "size", "pad", "size", "i", "assertSize", "size", "SizeOverflowError", "pad", "size", "SizeExceedsPaddingSizeError", "fromHex", "fromHex", "size", "assertSize", "length", "j", "BaseError", "size", "padRight", "padRight", "size", "pad", "size", "BaseError", "BaseError", "size", "encoder", "i", "concat", "x", "assertSize", "fromBytes", "string", "i", "size", "fromString", "encoder", "size", "pad", "size", "BaseError", "size", "SizeOverflowError", "BaseError", "SizeExceedsPaddingSizeError", "BaseError", "size", "keccak256", "fromBytes", "LruMap", "size", "LruMap", "InvalidAddressError", "checksum", "keccak256", "i", "InvalidAddressError", "BaseError", "arrayRegex", "bytesRegex", "integerRegex", "maxUint256", "PositionOutOfBoundsError", "length", "size", "BaseError", "PositionOutOfBoundsError", "length", "encodePacked", "i", "concat", "encode", "fromString", "integerRegex", "size", "bytesRegex", "BytesSizeMismatchError", "arrayRegex", "BytesSizeMismatchError", "BaseError", "size", "BaseError", "ALPHABET", "j", "i", "x", "xc", "encode", "length", "size", "it2", "it3", "decode", "string", "esm_default", "_", "size", "concat", "length", "base", "ALPHABET", "name", "j", "i", "x", "xc", "encode", "length", "size", "it2", "it3", "decode", "string", "aa", "ii", "o", "fromString", "toString", "b", "name", "decoder", "or", "from", "encode", "decode", "alphabet", "string", "i", "pad", "from", "toString", "fromString", "base2", "base2", "p", "c", "i", "encode", "decode", "from", "sha256", "encode", "decode", "b", "l", "decode", "code", "create", "code", "digest", "size", "decode", "equals", "a", "b", "from", "name", "code", "encode", "create", "digest", "name", "sha256", "from", "identity_exports", "identity", "encode", "create", "identity", "version", "code", "digest", "create", "equals", "base", "decode", "i", "length", "size", "decoder", "cid", "identity_exports", "name", "encode", "decode", "decoder", "encoder", "string", "i", "fromString", "string", "base", "toString", "base", "stringify", "c", "keys", "base", "base", "r", "stringify", "p", "m", "keys", "a", "b", "base", "n", "o", "r", "code", "e", "x", "o", "c", "n", "r"]
}
